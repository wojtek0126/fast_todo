{"version":3,"sources":["styles/elements.tsx","components/propsyComps/TitleBanner.tsx","firebase/firebase.tsx","content/icons.tsx","components/propsyComps/PropsyBtn.tsx","components/propsyComps/PropsyFlexBox.tsx","components/propsyComps/PropsyInput.tsx","components/TodoItem.tsx","components/UserAuth/SignOutButton.tsx","components/TodoList.tsx","content/content.tsx","styles/theme.tsx","recoil/recoil.tsx","components/propsyComps/PropsyAlertBox.tsx","components/propsyComps/PropsySignLogForm.tsx","components/UserAuth/SignUpForm.tsx","components/UserAuth/SignInForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["btnBorderRadius","inputBorderRadius","boxBorderRadius","btnGradient","btnCheckedGradient","txtShadow","itemBoxShadow","appContainer","backgroundColor","axWidth","minHeight","signInFormContainer","justifyContent","alignItems","flexDirection","alignSelf","signLogContainer","position","titleContainer","textShadow","color","paddingTop","fontSize","flexWrap","headerContainer","display","justtifyContent","textAlign","margin","todosContainer","opacity","waveEffectContainer","width","top","left","maxWidth","zIndex","todoFiltersContainer","borderRadius","wordBreak","padding","marginTop","boxShadow","todoStatusContainer","marginBottom","addTaskContainer","itemsBtnsContainer","border","borderColor","welcomeUserWrapper","displayBar","wordWrap","fontFamily","todoLisTWrapper","editItemDateAndTaskTypeWrapper","paddingLeft","marginLeft","btnPrimary","backgroundImage","cursor","textTransform","transition","backgroundSize","backgroundPosition","textDecoration","btnScrollUp","right","bottom","addTodoForm","inputGeneral","inputTodoAdd","inputTodoSearch","inputTodoEdit","optionBox","bigTitleTxt","alignText","userWelcomeTxt","whiteSpace","mockText","smallTitleTxt","fontWeight","copyrightTxt","loginSignupTxt","userImg","height","userName","overflow","clickedBtnAnimJump","keyframes","clickedBtnAnimShrink","TitleBanner","sx","require","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","app","initializeApp","instance","auth","firestore","getFirebase","window","iconAddTaskBtn","iconCompleteTaskBtn","iconEditTaskBtn","iconDeleteTaskBtn","iconSignInBtn","iconSignUpBtn","iconAddUser","iconSignOutBtn","iconCloseBtn","iconForgotpassBtn","iconSendMailBtn","iconDateBtn","PropsyBtn","React","memo","animTime","background","animation","onClick","content","isDisabled","type","tooltipId","tooltipTxt","size","disabled","transform","style","id","place","effect","PropsyFlexBox","PropsyInput","text","onChange","placeholder","value","TodoItem","props","useState","todoTxt","setTodoTxt","deadline","setDeadline","animBtn1","setAnimBtn1","animBtn2","setAnimBtn2","animBtn3","setAnimBtn3","opacity1","setOpacity1","taskTypeColor","setTaskTypeColor","todo","isCompleted","btnCompletedColor","setBtnCompletedColor","photoURL","useEffect","updateFirestoreData","collection","item","data","keyValue","doc","update","FieldValue","serverTimestamp","userNameParsedFunc","useCallback","match","onUpdate","setTimeout","onComplete","onDelete","delete","handleTaskTypeChange","e","target","handleSetDeadline","handleDeadline","src","defaultValue","SignOutButton","firebaseInstance","signOut","a","console","log","TodoList","userEmail","localStorage","getItem","dummy","useRef","todosRef","query","orderBy","limit","useCollectionData","idField","todos","formValue","setFormValue","searchByTxt","setSearchByTxt","filterCompleted","setFilterCompleted","sendTodo","preventDefault","currentUser","uid","add","assignedTo","assignedBy","createdAt","updatedAt","completedAt","current","scrollIntoView","behavior","loadingDisplay","setLoadingDisplay","userDisplay","setUserDisplay","status","filter","precision","alltodos","completed","parseFloat","toFixed","getPrecentCompleted","searchBy","TodoJsx","keyId","searchIt","task","searchItTxt","includes","map","renderFiltered","ref","className","onSubmit","distance","breakpoint","speed","icon","fonts","body","heading","monospace","fontSizes","colors","text2","text3","text4","appMainbackground","todoTaskBackground","todoIdeaBackground","todoProblemBackground","todoRecipeBackground","todoScheduleBackground","inputBackground","userBackground","dateSetBackground1","buttonsBackground","patch","primary","sent","received","messageText","underwater","images","avatar","backgroundRepeat","recoilUser","atom","key","default","displayAlertBoxState","displayLoginBoxState","displaySignupBoxState","PropsyAlertBox","selector","get","PropsySignLogForm","textHead","buttonContent","onChangeEmail","onChangePass","emailInputTxt","passInputTxt","extraContent","animationBtn","SignUpForm","emailValue","setEmailValue","passwordlValue","setPasswordValue","alertDisplay","setAlertDiaspaly","alertContent","setAlerContent","setLoginBoxDisplay","useSetRecoilState","useRecoilState","SignupBoxDisplay","setSignupBoxDisplay","email","password","signUp","event","createUserWithEmailAndPassword","user","setItem","message","SignInForm","forgotPasswordDisplay","setForgotPasswordDisplay","setRecoilAlertBoxDisplay","loginBoxDisplay","signIn","signInWithEmailAndPassword","ResetPasswordPopup","onClickClose","tooltipText","sendPasswordResetEmail","App","setCurrentUser","onAuthStateChanged","authUser","theme","Header","show","hideWhenDone","hideWhenDoneDelay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9636eba6.chunk.js","sourcesContent":["  // unified styles control center, fused with theme-ui\r\n  import background from '../assets/background.png'\r\n  import { keyframes } from '@emotion/react'  \r\n\r\n  \r\n  type Styles = {\r\n    [key: string]: any;\r\n  };\r\n\r\n  //common styles\r\n  export const btnBorderRadius: string = '50%';\r\n  export const inputBorderRadius: string = '10px';\r\n  export const boxBorderRadius: string = '10px';\r\n  export const btnGradient: string = 'linear-gradient(to right, #232526 0%, #414345  51%, #232526  100%)';\r\n  export const btnCheckedGradient: string = 'linear-gradient(to right, #50C9C3 0%, #96DEDA  51%, #50C9C3  100%)';\r\n  export const btnAlertgradient: string = 'linear-gradient(to right, #e52d27 0%, #b31217  51%, #e52d27  100%)}';\r\n  export const txtShadow: string = '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000';\r\n  export const itemBoxShadow: string = '24px 33px 46px 3px rgba(0,0,0,0.92)';   \r\n   \r\n   \r\n  //containers\r\n  export const appContainer: Styles = {\r\n    // background: `url(${background})`,\r\n    backgroundColor: 'appMainbackground',\r\n    // backgroundBlendMode:'multiply,multiply',\r\n    axWidth: '100vw',\r\n    minHeight: '100vh'    \r\n  };\r\n\r\n  export const signInContainer: Styles = {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    backgroundColor: 'transparent'\r\n  };\r\n\r\n  export const signInFormContainer: Styles = {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    backgroundColor: 'transparent',\r\n    alignSelf: 'center'\r\n  };\r\n\r\n  export const signLogContainer: Styles = {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    \"@media (max-width: 780px)\": { \r\n      flexDirection: 'column',\r\n      position: 'relative'            \r\n   }\r\n  };\r\n\r\n  export const titleContainer: Styles = {\r\n    textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n    color: 'text2',\r\n    paddingTop: 60,\r\n    fontSize: 50,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap'      \r\n    };\r\n\r\n  export const headerContainer: Styles = {\r\n    display: 'flex',\r\n    justtifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    margin: 'auto'\r\n  };\r\n\r\n  export const todosContainer: Styles = {          \r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: '2',\r\n    opacity: '0.85',     \r\n  };\r\n\r\n  export const waveEffectContainer: Styles = {  \r\n    width: '100vw',\r\n    position: 'absolute',\r\n    top: 220,\r\n    left: 0,\r\n    maxWidth: '100%',\r\n    zIndex: 0\r\n  };\r\n\r\n  export const waveEffectContainer2: Styles = {  \r\n    width: '100vw',\r\n    position: 'absolute',\r\n    top: 200,\r\n    left: 0,\r\n    maxWidth: '100%',\r\n    zIndex: 0\r\n  };\r\n\r\n  export const todoFiltersContainer: Styles = {  \r\n    margin: 'auto',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: `todoTaskBackground`,\r\n    color: 'todoText',\r\n    width: '80vw',\r\n    wordBreak: 'break-word',\r\n    position: 'relative',    \r\n    padding: 2, \r\n    marginTop: 50,    \r\n    minHeight: 100,\r\n    boxShadow: itemBoxShadow   \r\n  };\r\n\r\n  export const todoStatusContainer: Styles = {  \r\n    flexDirection: 'column',\r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: `todoTaskBackground`,\r\n    color: 'todoText',\r\n    width: '80vw',\r\n    wordBreak: 'break-word',\r\n    position: 'relative',   \r\n    margin: 'auto', \r\n    padding: 2, \r\n    marginTop: 50,\r\n    marginBottom: 80,\r\n    minHeight: 100,\r\n    boxShadow: itemBoxShadow   \r\n  };\r\n\r\n  export const addTaskContainer: Styles = {  \r\n    position: 'relative'     \r\n  };\r\n\r\n  export const itemsBtnsContainer: Styles = {      \r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    flexWrap: 'wrap', \r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: 'buttonsBackground' ,\r\n    border:'1px solid',\r\n    borderColor: 'borderColor'\r\n  };\r\n\r\n  export const todoItemContainer: Styles = {\r\n    margin: 'auto', \r\n    flexDirection: 'column',\r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: `todoTaskbackground`,\r\n    color: 'todoText',\r\n    width: '100%',\r\n    wordBreak: 'break-word',\r\n    position: 'relative',    \r\n    padding: 2, \r\n    marginTop: 50,\r\n    marginBottom: 80,\r\n    minHeight: 100,\r\n    boxShadow: itemBoxShadow\r\n  };\r\n\r\n  export const welcomeUserWrapper: Styles = {\r\n    margin: '0 auto'\r\n  };\r\n\r\n  export const displayBar: Styles = {    \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,  \r\n    marginTop: 1,\r\n    padding: 2     \r\n  };\r\n\r\n  export const todoLisTWrapper: Styles= {\r\n    flexDirection: 'column',\r\n    width: '100vw'\r\n  };\r\n\r\n  export const editItemDateAndTaskTypeWrapper: Styles= {\r\n    flexDirection: 'row',                           \r\n    backgroundColor: 'buttonsBackground',\r\n    borderRadius: boxBorderRadius,\r\n    paddingLeft: 3,\r\n    marginLeft: 1,\r\n    position: 'relative',\r\n           };\r\n\r\n// buttons\r\nexport const btnPrimary: Styles = {\r\n    display: 'flex',\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    margin: '10px',\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'white',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: btnBorderRadius,\r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   }\r\n  };\r\n\r\n  export const btnScrollUp: Styles = {\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'white',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: '50%',\r\n    position: 'fixed',\r\n    right: 8,\r\n    bottom: 65,      \r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   }\r\n  };\r\n\r\n  export const btnAddTask: Styles = {\r\n    position: 'fixed',\r\n    bottom: 115,\r\n    right: 0,\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    padding: '15px',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'text2',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: btnBorderRadius,      \r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   },\r\n       \"@media (max-width: 780px)\": { \r\n      bottom: 1,\r\n      opacity: 0.9              \r\n   }\r\n  };\r\n\r\n  export const btnLogOut: Styles = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    margin: '10px',\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'white',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: btnBorderRadius,      \r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   }\r\n  };\r\n\r\n// forms\r\n  export const addTodoForm: Styles = {\r\n    display: 'flex',  \r\n    justifyContent: 'center',\r\n    alignItems: 'center',   \r\n    marginTop: '3',        \r\n    position: 'fixed',\r\n    right: 0,\r\n    bottom: 0   \r\n  };\r\n\r\n  export const inputGeneral: Styles = {    \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n    margin: 0,\r\n    marginTop: 2,\r\n    padding: 2,\r\n    width: '100%',\r\n    alignSelf: 'center'\r\n  };\r\n\r\n  export const inputTodoAdd: Styles = {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    right: 0,\r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n  };\r\n\r\n  export const inputTodoSearch: Styles = {    \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n    margin: 0\r\n  };\r\n\r\n  export const inputTodoEdit: Styles = { \r\n    fontFamily: 'body', \r\n    wordWrap: 'break-word',\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    maxWidth: '100%',\r\n    paddingTop: 20,\r\n    paddingLeft: 20,\r\n    marginTop: 15,\r\n    marginBottom: 20,  \r\n    \"@media (max-width: 780px)\": { \r\n      marginTop: 20,\r\n      marginBottom: 30            \r\n   }\r\n  } \r\n\r\n  export const optionBox: Styles = {    \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n    margin: '0 auto' ,\r\n    alignSelf: 'center',\r\n    \"@media (max-width: 780px)\": { \r\n     fontSize: 'small',              \r\n   }\r\n  };\r\n\r\n  //text\r\n  export const bigTitleTxt: Styles = {\r\n    alignText: 'center',\r\n    fontSize: [20, 14, 16, 20],   \r\n    textShadow: txtShadow,\r\n    color: 'text2',    \r\n    padding: 2\r\n    };\r\n\r\n    export const userWelcomeTxt: Styles = {\r\n      alignSelf: 'center',\r\n      fontSize: [12, 14, 16, 20],\r\n      maxWidth: '100vw',\r\n      whiteSpace: 'pre-wrap',\r\n      wordBreak: 'break-word',\r\n      textShadow: txtShadow,\r\n      color: 'text2',\r\n      marginTop: 40,\r\n      marginBottom: 40,\r\n      };\r\n\r\n      export const mockText: Styles = {\r\n        alignSelf: 'center',\r\n        fontSize: [12, 14, 16, 20],\r\n        maxWidth: '100vw',\r\n        whiteSpace: 'pre-wrap',\r\n        wordBreak: 'break-word',\r\n        color: 'text2',\r\n        // opacity: 0,\r\n        marginTop: 40,\r\n        marginBottom: 40,\r\n        };\r\n\r\n  export const smallTitleTxt: Styles = {\r\n    width: '100%',\r\n    color: 'text2',\r\n    fontWeight: '600',\r\n    textShadow: txtShadow,  \r\n    marginTop: '40px',    \r\n    padding: 2\r\n    };\r\n\r\n    export const copyrightTxt: Styles = {\r\n      width: '100%',\r\n      color: 'text2',\r\n      fontSize: 1,\r\n      textAlign: 'center',\r\n      textShadow: txtShadow,  \r\n      marginBottom: 10,\r\n      padding: 1\r\n      };\r\n\r\n    export const loginSignupTxt: Styles = {\r\n      width: '100%',\r\n      color: 'text2',\r\n      fontWeight: '600',\r\n      textShadow: txtShadow,\r\n      marginTop: 10,\r\n      marginBottom: 10 \r\n      };\r\n\r\n// avatar and user details \r\n  export const userImg: Styles = {\r\n    borderRadius: '50%',\r\n    width: '40px',\r\n    height: '40px',\r\n    position: 'absolute',\r\n    left: '-16px',\r\n    top: '-20px'\r\n  };\r\n\r\n  export const userName: Styles = {\r\n    borderRadius: boxBorderRadius,\r\n    width: '200px',\r\n    maxWidth: '240px',\r\n    overflow: 'hidden',\r\n    padding: 1,\r\n    position: 'absolute',\r\n    left: '40px',\r\n    top: '-20px',\r\n    backgroundColor: 'userBackground'\r\n  };\r\n\r\n// animations\r\nexport const clickedBtnAnimJump = keyframes`\r\nfrom, 20%, 53%, 80%, to {\r\n  transform: translate3d(0,0,0);\r\n}\r\n\r\n40%, 43% {\r\n  transform: translate3d(0, -30px, 0);\r\n}\r\n\r\n70% {\r\n  transform: translate3d(0, -15px, 0);\r\n}\r\n\r\n90% {\r\n  transform: translate3d(0,-4px,0);\r\n}\r\n` ;\r\n\r\nexport const clickedBtnAnimShrink = keyframes`\r\nfrom {\r\n  transform: scale(1);\r\n}\r\nto {\r\n  transform: scale(0);\r\n}\r\n` ;\r\n\r\n ","import { Flex, Paragraph } from \"@theme-ui/components\";\r\nimport { copyrightTxt, titleContainer } from \"../../styles/elements\";\r\n\r\nconst TitleBanner = () => {\r\n    return (\r\n        <Flex sx={titleContainer}><Paragraph>The</Paragraph><Paragraph sx={{\r\n            color: 'text3'\r\n          }}>Eazzy</Paragraph><Paragraph sx={{\r\n            color: 'text4'\r\n          }}>Todo</Paragraph>\r\n          <Paragraph sx={copyrightTxt}>© 2021 HFM</Paragraph>            \r\n    </Flex>\r\n        )  \r\n}\r\n\r\nexport default TitleBanner;","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nrequire('firebase/auth');\r\n\r\ntype FireConfig = {\r\n    [key: string]: string;\r\n  };\r\n\r\nexport const config: FireConfig = {\r\n    apiKey: \"AIzaSyDNbdVmZVmzNzEWw_eqHT6jMLeAa788Rgk\",\r\n    authDomain: \"eazzy-todo.firebaseapp.com\",\r\n    projectId: \"eazzy-todo\",\r\n    storageBucket: \"eazzy-todo.appspot.com\",\r\n    messagingSenderId: \"461379999354\",\r\n    appId: \"1:461379999354:web:0b5aad7eaa090b4fb34dc3\",\r\n    measurementId: \"G-8M0LZN0HLX\"\r\n    };\r\n\r\n!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();    \r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();  \r\n\r\nlet instance: any;\r\n\r\nexport default function getFirebase() {\r\n  if (typeof window !== \"undefined\") {\r\n    if (instance) return instance;\r\n    if (!firebase.apps.length) {\r\n        instance = firebase.initializeApp(config);\r\n     }else {\r\n        instance = firebase.app(); \r\n     }\r\n    return instance;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// if (!firebase.apps.length) {\r\n//     instance = firebase.initializeApp(config);\r\n//  }else {\r\n//     instance = firebase.app(); // if already initialized, use that one\r\n//  }\r\n\r\n","import { AiOutlineAppstoreAdd, AiOutlineClose, AiOutlineDelete, AiOutlinePlus } from 'react-icons/ai';\r\nimport { FaFlagCheckered } from 'react-icons/fa';\r\nimport { MdSystemUpdateAlt } from 'react-icons/md';\r\nimport { BiLogOutCircle, BiLogInCircle, BiUserPlus } from 'react-icons/bi';\r\nimport { RiLockPasswordLine, RiMailSendLine } from 'react-icons/ri';\r\nimport { CgCalendarDates } from 'react-icons/cg';\r\n\r\n\r\n\r\n\r\nexport const iconAddTaskBtn: JSX.Element = <AiOutlineAppstoreAdd />;\r\n\r\nexport const iconCompleteTaskBtn: JSX.Element = <FaFlagCheckered />;\r\n\r\nexport const iconEditTaskBtn: JSX.Element = <MdSystemUpdateAlt />;\r\n\r\nexport const iconDeleteTaskBtn: JSX.Element = <AiOutlineDelete />;\r\n\r\nexport const iconSignInBtn: JSX.Element = <BiLogInCircle />;\r\n\r\nexport const iconSignUpBtn: JSX.Element = <BiUserPlus />;\r\n\r\nexport const iconAddUser: JSX.Element = <AiOutlinePlus />;\r\n\r\nexport const iconSignOutBtn: JSX.Element = <BiLogOutCircle />;\r\n\r\nexport const iconCloseBtn: JSX.Element = <AiOutlineClose />;\r\n\r\nexport const iconForgotpassBtn: JSX.Element = <RiLockPasswordLine />;\r\n\r\nexport const iconSendMailBtn: JSX.Element = <RiMailSendLine />;\r\n\r\nexport const iconDateBtn: JSX.Element = <CgCalendarDates />;\r\n\r\n","import React from \"react\";\r\nimport { Button } from \"theme-ui\";\r\nimport { btnBorderRadius } from \"../../styles/elements\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst PropsyBtn = React.memo(({animTime,\r\n                               background,\r\n                               animation, \r\n                               onClick, \r\n                               content, \r\n                               isDisabled, \r\n                               opacity, \r\n                               transition,\r\n                               type,\r\n                               display = 'flex',\r\n                               borderRadius = btnBorderRadius,\r\n                               tooltipId,\r\n                               tooltipTxt,\r\n                               size = '1',\r\n                               position,\r\n                               top,\r\n                               right,\r\n                               fontSize = '[16, 20]',\r\n                               margin = '10px'\r\n                              }: any ) => {  \r\n    return (<>\r\n        <Button disabled={isDisabled} \r\n                type={type}                \r\n        sx={{\r\n          transform: `scale(${size})`,\r\n          backgroundImage: `${background}`,\r\n          display: display,\r\n          fontSize: fontSize,\r\n          cursor: 'pointer',\r\n          margin: margin,\r\n          padding: '15px',\r\n          textAlign: 'center',          \r\n          transition: `${transition}`,\r\n          backgroundSize: '200% auto',\r\n          color: 'white',            \r\n          boxShadow: '0 0 20px #eee',\r\n          borderRadius: borderRadius,\r\n          animation: `${animation} ${animTime} ease 1`,\r\n          opacity: `${opacity}`,\r\n          position: position,\r\n          top: top,\r\n          right: right,\r\n          '&:hover, &:focus': {  \r\n            backgroundPosition: 'right center', \r\n            color: '#fff',\r\n            textDecoration: 'none'\r\n         }\r\n        }}\r\n          onClick={onClick}\r\n        >{<div style={{display: 'flex'}} data-tip data-for={tooltipId}>{content}</div>}</Button>\r\n        <ReactTooltip id={tooltipId} place=\"bottom\" effect=\"solid\">\r\n       {tooltipTxt}\r\n      </ReactTooltip>\r\n    </>)    \r\n});\r\n\r\nexport default PropsyBtn ","import React from \"react\";\r\nimport { Box } from \"theme-ui\";\r\nimport { boxBorderRadius, itemBoxShadow } from \"../../styles/elements\";\r\n\r\n\r\nconst PropsyFlexBox = React.memo(({display = 'flex',\r\n                                   margin,\r\n                                   marginTop = 50,\r\n                                   marginBottom = 80,\r\n                                   width, \r\n                                   animation, \r\n                                   transition, \r\n                                   onClick, \r\n                                   content, \r\n                                   opacity = 0.8,\r\n                                   backgroundColor = 'todoTaskBackground' \r\n                                }: any) => {\r\n    return (\r\n        <Box \r\n        sx={{\r\n            flexDirection: 'column',\r\n            display: `${display}`,\r\n            borderRadius: boxBorderRadius,\r\n            backgroundColor: `${backgroundColor}`,\r\n            color: 'todoText',\r\n            width: `${width}`,\r\n            wordBreak: 'break-word',\r\n            position: 'relative',             \r\n            padding: 2, \r\n            margin: `${margin}`,\r\n            marginTop: `${marginTop}`,\r\n            marginBottom: `${marginBottom}`,\r\n            minHeight: 100,\r\n            boxShadow: itemBoxShadow,\r\n            opacity: `${opacity}`,\r\n            animation: `${animation}`,\r\n            transition: `${transition}`, \r\n                }}\r\n          onClick={onClick}\r\n        >{content}</Box>\r\n    )    \r\n});\r\n\r\nexport default PropsyFlexBox;","import React from \"react\";\r\nimport { Input } from \"theme-ui\";\r\nimport { inputBorderRadius } from \"../../styles/elements\";\r\n\r\n\r\nconst PropsyInput = React.memo(({text,\r\n                                 onChange,\r\n                                 display,\r\n                                 type,\r\n                                 marginTop =  0,\r\n                                 width = '100%',\r\n                                 placeholder=\"...\",\r\n                                 value\r\n                                       }: any) => {\r\n    return (\r\n               <Input type={type}                     \r\n                sx={{\r\n                    display: `${display}`,\r\n                    wordWrap: 'wrap',\r\n                    fontFamily: 'body',\r\n                    backgroundColor: 'inputBackground',\r\n                    color: 'text2',   \r\n                    borderRadius: inputBorderRadius,\r\n                    margin: 0,\r\n                    marginTop: marginTop,\r\n                    padding: 2,\r\n                    width: `${width}`,\r\n                    alignSelf: 'center',\r\n                    \"@media (max-width: 780px)\": { \r\n                        fontSize: \"12px\",\r\n                        width: '103px'             \r\n                      }\r\n            }} onChange={onChange}\r\n               placeholder={placeholder}\r\n               {...text}\r\n                value={value} />\r\n)});\r\n\r\nexport default PropsyInput;","/** @jsxImportSource theme-ui */\r\nimport { useState, useCallback, useEffect } from 'react';\r\n\r\nimport { Image, Textarea, Paragraph, Select, Flex, Box } from 'theme-ui'; \r\n\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { btnGradient,        \r\n         btnCheckedGradient,\r\n         clickedBtnAnimJump,         \r\n         inputTodoEdit,\r\n         itemsBtnsContainer,         \r\n         userImg, \r\n         userName,\r\n         optionBox,\r\n         clickedBtnAnimShrink,\r\n         editItemDateAndTaskTypeWrapper} from '../styles/elements';\r\nimport { firestore } from '../firebase/firebase';\r\nimport { iconCompleteTaskBtn, iconDateBtn,  iconDeleteTaskBtn, iconEditTaskBtn } from '../content/icons';\r\nimport PropsyBtn from './propsyComps/PropsyBtn';\r\nimport PropsyFlexBox from './propsyComps/PropsyFlexBox';\r\nimport firebase from 'firebase';\r\nimport PropsyInput from './propsyComps/PropsyInput';\r\nrequire('firebase/auth');  \r\n\r\ntype AppProps = {\r\n  todo: any;     \r\n}; \r\n\r\nfunction TodoItem(props: AppProps) {  \r\n    const [ todoTxt, setTodoTxt ] = useState(\"\");\r\n    const [ deadline, setDeadline ] = useState(\"\");\r\n\r\n    const [ animBtn1, setAnimBtn1 ] = useState(\"\");\r\n    const [ animBtn2, setAnimBtn2 ] = useState(\"\");\r\n    const [ animBtn3, setAnimBtn3 ] = useState(\"\");\r\n\r\n    const [ opacity1, setOpacity1 ] = useState(1);\r\n\r\n    const [ taskTypeColor, setTaskTypeColor ] = useState(\"todoTaskBackground\");\r\n\r\n    const [ btnCompletedColor, setBtnCompletedColor ] = useState(() => {\r\n      if (props.todo.isCompleted === true) {\r\n        return btnCheckedGradient;\r\n      }\r\n      else {\r\n        return btnGradient;\r\n      }\r\n    });    \r\n\r\n    const {  photoURL }: any = props.todo;    \r\n\r\n    useEffect(() => {\r\n      if (props.todo.type === \"Task\") {\r\n        setTaskTypeColor(\"todoTaskBackground\"); \r\n      }\r\n      else if (props.todo.type === \"Idea\") {\r\n        setTaskTypeColor(\"todoIdeaBackground\"); \r\n      }\r\n      else if (props.todo.type === \"Problem\") {\r\n        setTaskTypeColor(\"todoProblemBackground\"); \r\n      }\r\n      else if (props.todo.type === \"Recipe\") {\r\n        setTaskTypeColor(\"todoRecipeBackground\");\r\n      }\r\n      else if (props.todo.type === \"Schedule\") {\r\n        setTaskTypeColor(\"todoScheduleBackground\");        \r\n      } \r\n      setTodoTxt(props.todo.text);\r\n      setDeadline(props.todo.deadline);\r\n    }, []);\r\n\r\n    const updateFirestoreData = (collection: string, item: any, data: any, keyValue: any) => {\r\n      firestore.collection(collection).doc(item).update({[data]: keyValue,\r\n        updatedAt: firebase.firestore.FieldValue.serverTimestamp()\r\n      });\r\n    };\r\n\r\n    const userNameParsedFunc = useCallback(() => {\r\n      const userNameParsed = props.todo.userName.match(/^(.+)@/)[1];\r\n      return userNameParsed;\r\n    },[props]);\r\n    \r\n    const onUpdate = useCallback(\r\n      () => {\r\n          updateFirestoreData('todos', props.todo.id, 'text', todoTxt);       \r\n        setAnimBtn1(clickedBtnAnimJump);\r\n        setTimeout(() => {\r\n          setAnimBtn1(\"\");\r\n        }, 1000);\r\n      },\r\n      [todoTxt],\r\n    );  \r\n\r\n    const onComplete = useCallback(\r\n      () => {\r\n        if (props.todo.isCompleted === false) {\r\n          updateFirestoreData('todos', props.todo.id, 'isCompleted', true);           \r\n          setBtnCompletedColor(btnCheckedGradient);\r\n        }        \r\n        else if (props.todo.isCompleted === true){\r\n          updateFirestoreData('todos', props.todo.id, 'isCompleted', false);\r\n          setBtnCompletedColor(btnGradient);\r\n           }  \r\n      },\r\n      [props],\r\n    );\r\n    \r\n    const onDelete = useCallback(\r\n      () => {\r\n        setAnimBtn2(clickedBtnAnimShrink);\r\n        setTimeout(() => {\r\n          setAnimBtn2(\"\");\r\n        }, 1000);\r\n        setOpacity1(0);\r\n        setTimeout(() => {\r\n          firestore.collection('todos').doc(props.todo.id).delete();   \r\n        }, 2000);\r\n      },\r\n      [props],\r\n    );  \r\n  \r\n    const handleTaskTypeChange = useCallback((e: any) => {\r\n      if (e.target.value === \"Task\") {\r\n        setTaskTypeColor(\"todoTaskBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Task\");       \r\n      }\r\n      else if (e.target.value === \"Idea\") {\r\n        setTaskTypeColor(\"todoIdeaBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Idea\");    \r\n      }\r\n      else if (e.target.value === \"Problem\") {\r\n        setTaskTypeColor(\"todoProblemBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Problem\");    \r\n      }\r\n      else if (e.target.value === \"Recipe\") {\r\n        setTaskTypeColor(\"todoRecipeBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Recipe\");   \r\n      }\r\n      else if (e.target.value === \"Schedule\") {\r\n        setTaskTypeColor(\"todoScheduleBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Schedule\");\r\n      }\r\n    },[props]);\r\n\r\n    const handleSetDeadline = useCallback((e: any) => {\r\n      setDeadline(e.target.value);\r\n    },[deadline]);\r\n\r\n    const handleDeadline = useCallback((e: any) => {\r\n      updateFirestoreData('todos', props.todo.id, 'deadline', deadline);  \r\n      setAnimBtn3(clickedBtnAnimShrink);\r\n      setTimeout(() => {\r\n        setAnimBtn3(\"\");\r\n      }, 1000);       \r\n    },[deadline]);\r\n\r\n        \r\n    return (<>  \r\n      <PropsyFlexBox \r\n        opacity={opacity1}\r\n        width={'80vw'}\r\n        transition={'1s'}\r\n        marginBottom={\"100px\"}\r\n        backgroundColor={taskTypeColor}\r\n        content={<>\r\n  <Image src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} sx={userImg} />\r\n  <Paragraph sx={userName}>{userNameParsedFunc()}</Paragraph>\r\n        <Textarea sx={inputTodoEdit}\r\n             defaultValue={todoTxt}\r\n             placeholder={todoTxt}\r\n             onChange={e => {\r\n              setTodoTxt(e.target.value);\r\n             }}\r\n        />\r\n          <Flex sx={itemsBtnsContainer}>      \r\n              <PropsyBtn \r\n                tooltipId={'status'}\r\n                tooltipTxt={'switch completion status'}\r\n                background={btnCompletedColor}\r\n                onClick={onComplete}\r\n                content={iconCompleteTaskBtn}\r\n              />       \r\n              <PropsyBtn \r\n                 tooltipId={'update'}\r\n                 tooltipTxt={'confirm content update'}\r\n                 background={btnGradient}\r\n                 onClick={onUpdate}\r\n                 content={iconEditTaskBtn}\r\n                 animation={animBtn1} \r\n                 animTime={'1s'}               \r\n              />\r\n              <PropsyBtn \r\n                 tooltipId={'delete'}\r\n                 tooltipTxt={'delete this task'}\r\n                 background={btnGradient}\r\n                 onClick={onDelete}\r\n                 content={iconDeleteTaskBtn}\r\n                 animation={animBtn2}\r\n                 animTime={'2s'}\r\n              />    \r\n              <Flex sx={{flexDirection: 'row', flexWrap: 'wrap'}}>\r\n              <Select data-tip data-for=\"task-type\" sx={optionBox} defaultValue={props.todo.type}\r\n                                      onChange={handleTaskTypeChange} >\r\n                  <option value=\"Task\" >Task</option>\r\n                  <option value=\"Idea\" >Idea</option>\r\n                  <option value=\"Problem\" >Problem</option> \r\n                  <option value=\"Schedule\" >Schedule</option> \r\n                  <option value=\"Recipe\" >Recipe</option>           \r\n                </Select>  \r\n                <ReactTooltip id=\"task-type\" place=\"bottom\" effect=\"solid\">\r\n                  change type of task\r\n                </ReactTooltip> \r\n                <ReactTooltip id=\"deadline\" place=\"bottom\" effect=\"solid\">\r\n                  set date marker/date due\r\n                </ReactTooltip> \r\n                <Flex sx={editItemDateAndTaskTypeWrapper}>\r\n                      <PropsyInput type={'date'}\r\n                                   width={'130px'} \r\n                                   onChange={handleSetDeadline}\r\n                                   value={deadline}\r\n                                            />                             \r\n                      <PropsyBtn onClick={handleDeadline}\r\n                                 tooltipId={'set-date'}\r\n                                 tooltipTxt={'confirm date marker/due date setting'}\r\n                                 background={btnGradient}\r\n                                 animation={animBtn3}\r\n                                 animTime={'2s'}\r\n                                 content={iconDateBtn}\r\n                                 size={0.8}\r\n                                 margin={0}                                \r\n                                          />                \r\n                </Flex>            \r\n              </Flex>              \r\n          </Flex>  \r\n        </>}\r\n      />   \r\n    </>)\r\n  }\r\n\r\n  export default TodoItem;","import { iconSignOutBtn } from \"../../content/icons\";\r\nimport getFirebase from \"../../firebase/firebase\";\r\nimport { btnGradient } from \"../../styles/elements\";\r\nimport PropsyBtn from \"../propsyComps/PropsyBtn\";\r\n\r\nconst SignOutButton = () => {\r\n  const firebaseInstance = getFirebase();\r\n\r\n  const signOut = async () => {\r\n    try {\r\n      if (firebaseInstance) {\r\n        await firebaseInstance.auth().signOut();   \r\n      }\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>    \r\n      <PropsyBtn onClick={() => signOut()}\r\n                 tooltipId={'logout'}\r\n                 tooltipTxt={'log out and exit'}\r\n                 content={iconSignOutBtn}\r\n                 background={btnGradient}\r\n                 />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignOutButton;\r\n\r\n\r\n","/** @jsxImportSource theme-ui */\r\nimport { \r\n  Flex,  \r\n  Box, \r\n  Textarea,\r\n  Input,\r\n  Select,\r\n  Paragraph  \r\n  } from 'theme-ui';  \r\n\r\nimport ScrollTop from \"react-scrolltop-button\";  \r\nimport { BsArrowBarUp } from 'react-icons/bs'; \r\nimport Typist from 'react-typist';\r\nimport ReactLoading from 'react-loading';\r\n\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';  \r\n\r\nimport TodoItem from './TodoItem';\r\n\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nimport { auth, firestore } from '../firebase/firebase'; \r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport { addTaskContainer,\r\n         addTodoForm,          \r\n          welcomeUserWrapper,\r\n          btnGradient,         \r\n          btnScrollUp,\r\n          displayBar,\r\n          inputTodoAdd,\r\n          inputTodoSearch,         \r\n          optionBox,\r\n          todoFiltersContainer,\r\n          todoLisTWrapper,\r\n          todosContainer,\r\n          todoStatusContainer, \r\n          userWelcomeTxt,\r\n          mockText,\r\n          clickedBtnAnimShrink,    \r\n          } from '../styles/elements';\r\nimport { txtSearchInputEng, txtTodoInputEng } from '../content/content';\r\nimport { iconAddTaskBtn } from '../content/icons';\r\nimport SignOutButton from './UserAuth/SignOutButton';\r\nimport PropsyBtn from './propsyComps/PropsyBtn';\r\nimport { setTimeout } from 'timers';\r\nrequire('firebase/auth');  \r\n\r\n\r\nfunction TodoList() {\r\n    const userEmail = localStorage.getItem('userEmail'); \r\n    const dummy = useRef<null | HTMLDivElement>(null); \r\n    const todosRef = firestore.collection('todos');\r\n    const query = todosRef.orderBy('createdAt').limit(100);\r\n  \r\n    const [todos] = useCollectionData(query, { idField: 'id' });\r\n  \r\n    const [formValue, setFormValue] = useState('');\r\n\r\n    const [searchByTxt, setSearchByTxt] = useState('');  \r\n\r\n    const [filterCompleted, setFilterCompleted] = useState(\"Show\");   \r\n    \r\n    const [animBtn1, setAnimBtn1] = useState(\"\");\r\n\r\n  \r\n    const RenderUserName = ({userName}: any) => {\r\n      const [loadingDisplay, setLoadingDisplay] = useState('flex');\r\n      const [userDisplay, setUserDisplay] = useState('none');\r\n      const timeoutTime = 1500;\r\n      useEffect(() => {\r\n        setTimeout(() => {\r\n          setLoadingDisplay('none');\r\n          setUserDisplay('flex');\r\n        }, timeoutTime);\r\n      }, []);\r\n\r\n\r\n      return  (<>\r\n                <Box sx={{display: loadingDisplay}}>\r\n                     <Paragraph sx={mockText}>\r\n                       <ReactLoading type={'spin'} height={30} width={30} />\r\n                     </Paragraph>\r\n               </Box>\r\n              \r\n              \r\n                <Box sx={{display: userDisplay}}>\r\n                  {/* <Typist cursor={{ show: false, hideWhenDone: true, hideWhenDoneDelay: 0 }} > */}\r\n                     <Paragraph sx={userWelcomeTxt}>{`Currently logged user: ${userName}`}</Paragraph>\r\n                  {/* </Typist> */}\r\n                </Box>\r\n\r\n              </>);  \r\n    };       \r\n\r\nconst getPrecentCompleted: any = (data: any, precision: number) => {\r\n  let alltodos: any = data?.length;\r\n  let completed: any = data?.filter((item: any) => item.isCompleted).length;\r\n  let percentage = alltodos === 0 ? 0 : (completed / alltodos) * 100\r\n      return  parseFloat(percentage.toFixed(precision));  \r\n};\r\n\r\nconst filteredStatus = (status: string): any => {\r\n  setFilterCompleted(status);\r\n};\r\n\r\nconst renderFiltered = (data: any, filterCompleted: string, searchBy: string): JSX.Element => {\r\n  const TodoJsx = (keyId: any, todo: any): JSX.Element => {\r\n    return <TodoItem key={keyId} todo={todo} />;\r\n   };\r\n  const searchIt = (task: any, searchItTxt: string) => {\r\n    return task.includes(searchItTxt);\r\n  };\r\n\r\n    switch (filterCompleted) {\r\n    case \"Show all\":\r\n      return data && data.filter((task: any) => \r\n      searchIt(task.text, searchBy))\r\n      .map((task: any): JSX.Element => TodoJsx(task.id, task));\r\n    case \"In progress only\":\r\n      return data && data.filter((task: any): JSX.Element => \r\n      searchIt(task.text, searchBy) && task.isCompleted === false)\r\n      .map((task: any): JSX.Element => TodoJsx(task.id, task));       \r\n    case \"Completed only\":\r\n      return data && data.filter((task: any) => \r\n      searchIt(task.text, searchBy) && task.isCompleted === true)\r\n      .map((task: any): JSX.Element => TodoJsx(task.id, task)); \r\n    default:\r\n      return data && data.filter((task: any) => \r\n      searchIt(task.text, searchBy))\r\n      .map((task: any): JSX.Element => TodoJsx(task.id, task));\r\n  };\r\n}\r\n\r\n    const sendTodo = async (e: any) => {\r\n      e.preventDefault();\r\n  \r\n      const { uid, photoURL } = auth.currentUser!;\r\n  \r\n      await todosRef.add({\r\n        userName: userEmail,        \r\n        type: \"Task\",\r\n        assignedTo: \"Not assigned yet\",\r\n        assignedBy: \"Not set yet\",\r\n        text: formValue,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        isCompleted: false,\r\n        updatedAt: \"Not updated yet\",\r\n        completedAt: \"Not completed yet\",\r\n        deadline: \"No deadline set\",\r\n        uid,\r\n        photoURL\r\n      });    \r\n      setFormValue(\"\"); \r\n      \r\n      if (dummy) dummy!.current!.scrollIntoView({ behavior: 'smooth' }); \r\n    };\r\n\r\n    const handleAddTaskButtonClick = () => {\r\n      setAnimBtn1(clickedBtnAnimShrink);\r\n      setTimeout(() => {\r\n        setAnimBtn1(\"\");        \r\n      }, 1000);   \r\n    };\r\n  \r\n    return (<Flex sx={todoLisTWrapper}>                 \r\n          <Box sx={welcomeUserWrapper} >\r\n            <RenderUserName userName={userEmail} />             \r\n          </Box> \r\n          <Flex sx={{alignSelf: 'center'}}>\r\n            <SignOutButton />  \r\n          </Flex>  \r\n          <Flex id={'main'} sx={todosContainer}>\r\n            <Flex sx={todoFiltersContainer} >\r\n              <Input sx={inputTodoSearch}\r\n                    type={'text'}\r\n                    placeholder={txtSearchInputEng}\r\n                    onChange={(e) => setSearchByTxt(e.target.value)} />\r\n              <Flex sx={{\r\n                flexDirection: 'row',\r\n                alignSelf: 'baseline',\r\n                marginTop: 2\r\n              }} >\r\n                <Select sx={optionBox} defaultValue=\"Show all\" onChange={(e) => filteredStatus(e.target.value)}>\r\n                  <option value=\"Show all\" >{`Show all`}</option>\r\n                  <option value=\"In progress only\" >In progress only</option>\r\n                  <option value=\"Completed only\" >Completed only</option>           \r\n                </Select>           \r\n              </Flex>\r\n         \r\n            </Flex>\r\n            <Flex sx={todoStatusContainer} >\r\n             <Box sx={displayBar}>\r\n               \r\n               {`All tasks: ${todos?.length}`}\r\n\r\n             </Box>\r\n             <Box sx={displayBar}>\r\n             \r\n               {`In progress: ${todos?.filter((item) => !item.isCompleted).length}`}\r\n\r\n             </Box>\r\n             <Box sx={displayBar}>\r\n               \r\n               {`Completed: ${todos?.filter((item) => item.isCompleted).length}`}                      \r\n             \r\n             </Box>\r\n             <Box sx={displayBar}>\r\n               \r\n               {`You have finished ${getPrecentCompleted(todos)}% of the job`}            \r\n             \r\n             </Box>\r\n            </Flex>             \r\n\r\n             {renderFiltered(todos, filterCompleted, searchByTxt)}\r\n\r\n            <span ref={dummy}></span>\r\n      \r\n          </Flex>  \r\n          <form className='form' onSubmit={sendTodo} >\r\n              <Flex  sx={addTodoForm}>\r\n                <Box sx={addTaskContainer}>\r\n                <Textarea sx={inputTodoAdd}                     \r\n                      onChange={(e: any) => setFormValue(e.target.value)} \r\n                      placeholder={txtTodoInputEng}               \r\n                >{formValue}\r\n                </Textarea>               \r\n                  <PropsyBtn type={\"submit\"}\r\n                             tooltipId={'add'}\r\n                             tooltipTxt={'add task'} \r\n                             animation={animBtn1} \r\n                             animTime={'1s'} \r\n                             onClick={handleAddTaskButtonClick}   \r\n                             isDisabled={!formValue}\r\n                             background={btnGradient}\r\n                             content={iconAddTaskBtn} />               \r\n                </Box>             \r\n              <Flex>            \r\n          </Flex>         \r\n            </Flex>\r\n          </form>  \r\n          <ScrollTop\r\n        text={<BsArrowBarUp />}\r\n        distance={0}\r\n        breakpoint={0}\r\n        style={btnScrollUp}\r\n        className=\"scroll-your-role\"\r\n        speed={1000}\r\n        target={75}\r\n        icon={<BsArrowBarUp />}\r\n      />          \r\n        </Flex>)\r\n  }  \r\n      \r\nexport default TodoList;     \r\n\r\n","export const txtSignInGoogleEng: string = \"Sign in with Google\";\r\n\r\nexport const txtSignOutEng: string = \"Sign out\";\r\n\r\nexport const txtSearchInputEng: string = \"Search for task..\";\r\n\r\nexport const txtTitleSmallEng: string = \"Welcome to ever evolving Eazzy Todo List. Set Yourself a goal and make it done. Multipurpose usage. Have a happy todoing!\";\r\n\r\nexport const txtTitleBigEng: string = \"This app is currently in test mode. Mock email recommended.\\\r\n Feel free to sign in, assign Yourself some task, modify it at will, and of course try to make it completed.\\\r\n  Maximum number of tasks is currently set to 50...have fun! \"\r\n\r\nexport const txtAddTaskBtnEng: string = \"Add Task\";\r\n\r\nexport const txtCompleteTaskBtnEng: string = \"Complete\";\r\n\r\nexport const txtEditTaskBtnEng: string = \"Update\";\r\n\r\nexport const txtDeleteTaskBtnEng: string = \"Delete\";\r\n\r\nexport const txtTodoInputEng: string = \"What needs to be done?\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n ","export default {\r\n    fonts: {\r\n      body: 'system-ui, sans-serif',\r\n      heading: '\"Avenir Next\", sans-serif',\r\n      monospace: 'Menlo, monospace',\r\n    },\r\n    fontSizes: [\r\n      12, 14, 16, 18, 24, 32, 48, 64, 72,\r\n    ],\r\n    colors: {\r\n      text: '#000',\r\n      text2: '#fff',\r\n      text3: 'red',\r\n      text4: 'blue',\r\n      borderColor: '#fff',\r\n      appMainbackground: 'rgb(102, 0, 102)',\r\n      todoTaskBackground: 'rgba(51, 51, 255, 0.8)',\r\n      todoIdeaBackground: 'rgba(0, 153, 51, 0.8)',\r\n      todoProblemBackground: 'rgba(204, 51, 0, 0.8)',\r\n      todoRecipeBackground: 'rgba(102, 102, 51, 0.8)',\r\n      todoScheduleBackground: 'rgba(153, 0, 204, 0.8)',\r\n      inputBackground: '#000',\r\n      userBackground: 'rgba(255, 255, 0, 0.8)',\r\n      dateSetBackground1: 'rgb(0, 102, 102)',\r\n      buttonsBackground: 'rgb(0, 51, 51)',\r\n      patch: '#000',\r\n      primary: '#33e',\r\n      sent: 'teal',\r\n      received: '#000',\r\n      messageText: '#fff',\r\n      underwater: '#1277b0',\r\n      border: \"#000\"\r\n    },\r\n    images: {\r\n        avatar: {\r\n          width: 48,\r\n          height: 48,\r\n          borderRadius: 99999,\r\n        },\r\n        background: {\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundRepeat: 'repeat'\r\n          },\r\n      }\r\n  }","import { atom, selector } from 'recoil';\r\n\r\n  export const recoilUser = atom({\r\n    key: 'recoilUser', // unique ID (with respect to other atoms/selectors)\r\n    default: '', // default value (aka initial value)\r\n  });\r\n\r\n  export const displayAlertBoxState = atom({\r\n    key: 'displayAlertBoxState', // unique ID (with respect to other atoms/selectors)\r\n    default: 'none', // default value (aka initial value)\r\n  });\r\n\r\n  export const displayLoginBoxState = atom({\r\n    key: 'displayLoginBoxState', // unique ID (with respect to other atoms/selectors)\r\n    default: 'flex', // default value (aka initial value)\r\n  });\r\n\r\n  export const displaySignupBoxState = atom({\r\n    key: 'displaySignupBoxState', // unique ID (with respect to other atoms/selectors)\r\n    default: 'none', // default value (aka initial value)\r\n  });\r\n\r\n  export const loggedUser = selector({\r\n    key: 'charCountState', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const text = get(recoilUser);\r\n  \r\n      return text;\r\n    },\r\n  });\r\n\r\n  export const loggedUserText = selector({\r\n    key: 'charCountState', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const text = get(recoilUser);\r\n  \r\n      return `Currently logged user: ${text}`;\r\n    },\r\n  });\r\n\r\n  export const displayAlertBoxValue = selector({\r\n    key: 'displayAlertBoxValue', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const displayed = get(displayAlertBoxState);\r\n  \r\n      return displayed;\r\n    },\r\n  });\r\n\r\n  export const displayLoginBoxValue = selector({\r\n    key: 'displayLoginBoxValue', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const displayed = get(displayAlertBoxState);\r\n  \r\n      return displayed;\r\n    },\r\n  });\r\n\r\n  export const displaySignupBoxValue = selector({\r\n    key: 'displaySignupBoxValue', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const displayed = get(displayAlertBoxState);\r\n  \r\n      return displayed;\r\n    },\r\n  });","import React from \"react\";\r\nimport { Box } from \"theme-ui\";\r\nimport { boxBorderRadius, itemBoxShadow } from \"../../styles/elements\";\r\n\r\n\r\nconst PropsyAlertBox = React.memo(({content, display = 'none'}: any ) => {\r\n\r\n    return (\r\n        <Box\r\n        sx={{  \r\n        display: `${display}`,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: boxBorderRadius,\r\n        backgroundColor: `todoTaskBackground`,\r\n        color: 'todoText',     \r\n        wordBreak: 'break-word',        \r\n        padding: 2,        \r\n        boxShadow: itemBoxShadow,\r\n        transition: '1s',\r\n        position: 'absolute',\r\n        top:'50%',    \r\n        zIndex: 20    \r\n    }}       \r\n        >{content}</Box>\r\n    )\r\n    \r\n});\r\n\r\nexport default PropsyAlertBox","import React from \"react\";\r\nimport { Flex, Input, Paragraph } from \"theme-ui\";\r\nimport { btnGradient, btnPrimary, inputGeneral, loginSignupTxt } from \"../../styles/elements\";\r\nimport PropsyBtn from \"./PropsyBtn\";\r\nimport PropsyFlexBox from \"./PropsyFlexBox\";\r\n\r\n\r\nconst PropsySignLogForm = React.memo(({textHead,\r\n                                       transition,\r\n                                       opacity,\r\n                                       display,\r\n                                       buttonContent,\r\n                                       onSubmit,\r\n                                       onChangeEmail,\r\n                                       onChangePass, \r\n                                       emailInputTxt,\r\n                                       passInputTxt,\r\n                                       margin, \r\n                                       extraContent,\r\n                                       animationBtn,\r\n                                       tooltipId,\r\n                                       tooltipTxt,\r\n                                       width\r\n                                       }: any) => {\r\n    return (\r\n        <PropsyFlexBox \r\n        width={width}\r\n        transition={transition}\r\n        opacity={opacity}\r\n        display={display}\r\n        margin={margin}\r\n        content={<>\r\n            <form onSubmit={onSubmit}>\r\n               <Paragraph sx={loginSignupTxt}>{textHead}</Paragraph>\r\n               <Input  sx={inputGeneral}\r\n                       onChange={onChangeEmail}\r\n                       placeholder=\"Email\" \r\n                       {...emailInputTxt} />\r\n               <Input sx={inputGeneral}\r\n                      onChange={onChangePass}\r\n                      placeholder=\"Password\" \r\n                      type=\"password\"\r\n                      {...passInputTxt} />              \r\n             <Flex>\r\n             <PropsyBtn sx={btnPrimary}\r\n                          tooltipTxt={tooltipTxt}\r\n                          tooltipId={tooltipId}\r\n                          type=\"submit\"\r\n                          background={btnGradient}\r\n                          content={buttonContent}\r\n                          onSubmit={onSubmit}\r\n                          animation={animationBtn}\r\n                          >Sign in</PropsyBtn>\r\n                {extraContent}\r\n             </Flex>\r\n               </form>\r\n         </>} />   \r\n    )\r\n    \r\n});\r\n\r\nexport default PropsySignLogForm;","import { useState } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { Flex } from \"theme-ui\";\r\nimport { iconCloseBtn, iconSignUpBtn } from \"../../content/icons\";\r\n\r\nimport getFirebase from \"../../firebase/firebase\";\r\nimport {  displayLoginBoxState, displaySignupBoxState } from \"../../recoil/recoil\";\r\nimport { btnGradient } from \"../../styles/elements\";\r\nimport PropsyAlertBox from \"../propsyComps/PropsyAlertBox\";\r\nimport PropsyBtn from \"../propsyComps/PropsyBtn\";\r\nimport PropsySignLogForm from \"../propsyComps/PropsySignLogForm\";\r\n\r\nconst SignUpForm = () => {      \r\n\r\n    const [emailValue, setEmailValue] = useState(\"\");\r\n    const [passwordlValue, setPasswordValue] = useState(\"\");\r\n\r\n    const [alertDisplay, setAlertDiaspaly] = useState('none');\r\n    const [alertContent, setAlerContent] = useState(\"\");\r\n\r\n    const setLoginBoxDisplay = useSetRecoilState(displayLoginBoxState);\r\n\r\n    const [SignupBoxDisplay, setSignupBoxDisplay] = useRecoilState(displaySignupBoxState);  \r\n\r\n    const handleChangeEmail = (event: any) => {\r\n        setEmailValue(event.target.value);\r\n      };\r\n\r\n      const handleChangePassword = (event: any) => {\r\n        setPasswordValue(event.target.value);\r\n      };       \r\n      \r\n      const setLoginOn = () => {\r\n        setLoginBoxDisplay('flex');\r\n        setSignupBoxDisplay('none');\r\n      };  \r\n\r\n    const firebaseInstance = getFirebase();\r\n    const email = emailValue;\r\n    const password = passwordlValue;\r\n\r\n    const signUp = async (event: any) => {\r\n      event.preventDefault();   \r\n\r\n    try {\r\n      if (firebaseInstance) {\r\n        const user = await firebaseInstance\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email, password);\r\n          localStorage.setItem('userEmail', email);\r\n          console.log(\"user\", user);        \r\n      }\r\n    } catch (error: any) {\r\n      console.log(\"error\", error);\r\n      setAlertDiaspaly('flex');\r\n      setAlerContent(`${error.message}`);\r\n      setTimeout(() => {\r\n        setAlertDiaspaly('none');\r\n      }, 2000);\r\n     \r\n    }\r\n  };\r\n\r\n\r\n  return (<>\r\n    <PropsySignLogForm \r\n    tooltipId={'register-new'}\r\n    tooltipTxt={'register new user'}\r\n    display={SignupBoxDisplay}\r\n    textHead={'Sign up'}\r\n    buttonContent={iconSignUpBtn}\r\n    emailInputTxt={emailValue}\r\n    passInputTxt={passwordlValue}\r\n    onChangeEmail={handleChangeEmail}\r\n    onChangePass ={handleChangePassword}\r\n    onSubmit={signUp}\r\n    // margin={'0 auto'}\r\n    extraContent={<PropsyBtn type='button'\r\n                             tooltipId={'register-close'}\r\n                             tooltipTxt={'close register window'}\r\n                             content={iconCloseBtn}\r\n                             background={btnGradient}\r\n                              onClick={setLoginOn} />}\r\n/>\r\n<PropsyAlertBox display={alertDisplay}\r\n                    content={alertContent}\r\n    />\r\n  </>);\r\n};\r\n\r\nexport default SignUpForm;\r\n\r\n\r\n","import firebase from \"firebase\";\r\nimport { useState } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\n\r\nimport { iconAddUser, iconCloseBtn, iconForgotpassBtn, iconSendMailBtn, iconSignInBtn } from \"../../content/icons\";\r\n\r\nimport getFirebase from \"../../firebase/firebase\";\r\nimport { displayAlertBoxState, displayLoginBoxState, displaySignupBoxState } from \"../../recoil/recoil\";\r\nimport { btnGradient } from \"../../styles/elements\";\r\nimport PropsyAlertBox from \"../propsyComps/PropsyAlertBox\";\r\nimport PropsyBtn from \"../propsyComps/PropsyBtn\";\r\n\r\nimport PropsySignLogForm from \"../propsyComps/PropsySignLogForm\";\r\n\r\nconst SignInForm = () => {\r\n\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordlValue, setPasswordValue] = useState(\"\");\r\n\r\n  const [alertDisplay, setAlertDiaspaly] = useState('none');\r\n  const [alertContent, setAlerContent] = useState(\"\");\r\n\r\n  const [forgotPasswordDisplay, setForgotPasswordDisplay] = useState('none');\r\n  \r\n  const setRecoilAlertBoxDisplay = useSetRecoilState(displayAlertBoxState);\r\n\r\n  const [loginBoxDisplay, setLoginBoxDisplay] = useRecoilState(displayLoginBoxState);\r\n\r\n  const setSignupBoxDisplay = useSetRecoilState(displaySignupBoxState);\r\n\r\n\r\n  const handleEnableDisableSignUp = () => {\r\n      setRecoilAlertBoxDisplay('flex');\r\n    \r\n      setLoginBoxDisplay('none');\r\n      setSignupBoxDisplay('flex');\r\n  \r\n  };\r\n  \r\n  const handleChangeEmail = (event: any) => {\r\n    setEmailValue(event.target.value);\r\n  };\r\n\r\n  const handleChangePassword = (event: any) => {\r\n    setPasswordValue(event.target.value);\r\n  };  \r\n\r\n  const handleForgotPassword = () => {\r\n    setForgotPasswordDisplay('flex');\r\n  };\r\n\r\n  const handleForgotPasswordClose = () => {\r\n    setForgotPasswordDisplay('none');\r\n  };\r\n\r\n  const handleForgotPasswordSend = () => {\r\n    firebase.auth().sendPasswordResetEmail(emailValue);\r\n    setTimeout(() => {\r\n      setForgotPasswordDisplay('none');\r\n    }, 2000);\r\n  };\r\n \r\n  const firebaseInstance = getFirebase();\r\n  const email = emailValue;\r\n  const password = passwordlValue;\r\n\r\n  const signIn = async (event: any) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      if (firebaseInstance) {\r\n        const user = await firebaseInstance\r\n          .auth()\r\n          .signInWithEmailAndPassword(email, password);\r\n          localStorage.setItem('userEmail', email);          \r\n        console.log(\"user\", user);     \r\n      }\r\n    } catch (error: any) {\r\n      console.log(\"error\", error);\r\n      setAlertDiaspaly('flex');\r\n      setAlerContent(`${error.message}`);\r\n      setTimeout(() => {\r\n        setAlertDiaspaly('none');\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const ResetPasswordPopup = ({display, onClick, onClickClose}: any) => {\r\n    return <PropsyAlertBox  display={display} \r\n                            margin={'0 auto'} \r\n                            content={<> \r\n    <PropsyBtn onClick={onClick}\r\n              tooltipId={'reset-password'}\r\n              tooltipTxt={`send reset password request(enter email above): ${emailValue}`}\r\n               content={iconSendMailBtn}\r\n               background={btnGradient} />\r\n      <PropsyBtn content={iconCloseBtn}\r\n       tooltipId={'reset-password-close'}\r\n       tooltipTxt={`close reset password window`}\r\n                 onClick={onClickClose}\r\n                 background={btnGradient} />\r\n      </>} />\r\n  };\r\n\r\n\r\n  return (<>   \r\n    <PropsySignLogForm\r\n        tooltipId={'login'}\r\n        tooltipTxt={'login'}\r\n        transition={'2s'}\r\n        display={loginBoxDisplay}\r\n        textHead={'Log in'}\r\n        buttonContent={iconSignInBtn}\r\n        emailInputTxt={emailValue}\r\n        passInputTxt={passwordlValue}\r\n        onChangeEmail={handleChangeEmail}\r\n        onChangePass ={handleChangePassword}\r\n        onSubmit={signIn}\r\n        // margin={'0 auto'}\r\n        extraContent={<>\r\n        <PropsyBtn background={btnGradient}\r\n                   tooltipId={'register'}\r\n                   tooltipTxt={'open register window'}\r\n                   content={iconAddUser}\r\n                   type={'button'} \r\n                   onClick={handleEnableDisableSignUp}\r\n        />\r\n        <PropsyBtn background={btnGradient}\r\n                   size={'0.5'}\r\n                   tooltipId={'forgot-password'}\r\n                   tooltipTxt={'forgot password'}\r\n                   content={iconForgotpassBtn}\r\n                   tooltipText={\"forgotPassword\"}\r\n                   type={'button'} \r\n                   onClick={handleForgotPassword} />\r\n        </>}\r\n    />   \r\n    <PropsyAlertBox display={alertDisplay}\r\n                    content={alertContent}\r\n    />   \r\n    <ResetPasswordPopup display={forgotPasswordDisplay} \r\n    onClick={handleForgotPasswordSend}\r\n    onClickClose={handleForgotPasswordClose}\r\n     />\r\n  </>);\r\n};\r\n\r\nexport default SignInForm;\r\n\r\n\r\n","/** @jsxImportSource theme-ui */\r\nimport './App.css';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { txtTitleBigEng, txtTitleSmallEng } from './content/content';\r\n\r\nimport { Header } from 'semantic-ui-react';\r\n\r\nimport TitleBanner from './components/propsyComps/TitleBanner';\r\n\r\nimport { appContainer,\r\n  bigTitleTxt,\r\n  headerContainer, \r\n  signInFormContainer, \r\n  signLogContainer, \r\n  smallTitleTxt, \r\n  waveEffectContainer } from './styles/elements';\r\n\r\nimport {  RecoilRoot } from 'recoil';\r\n\r\nimport TodoList from './components/TodoList';\r\n\r\nimport { Box, Flex, Heading, Paragraph, ThemeProvider } from 'theme-ui';\r\nimport theme from './styles/theme';\r\n\r\nimport ScrollText from 'react-scroll-text';\r\nimport Typist from 'react-typist';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport getFirebase from './firebase/firebase';\r\nimport SignUpForm from './components/UserAuth/SignUpForm';\r\nimport SignInForm from './components/UserAuth/SignInForm';\r\nrequire('firebase/auth');\r\n\r\n\r\nfunction App() {\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const firebase = getFirebase();\r\n\r\n    if (firebase) {\r\n      firebase.auth().onAuthStateChanged((authUser: any) => {\r\n        if (authUser) {\r\n          setCurrentUser(authUser.email);\r\n        } else {\r\n          setCurrentUser(null);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (  \r\n      <ThemeProvider theme={theme}>    \r\n      <RecoilRoot>\r\n      <Box sx={appContainer} >\r\n        <TitleBanner />\r\n        <Header sx={headerContainer} >    \r\n          <Box sx={{margin: 'auto'}}>    \r\n              {currentUser ? <TodoList /> : <>\r\n                  <Flex sx={signInFormContainer}>                \r\n                    <Flex sx={signLogContainer}>\r\n                      <SignUpForm />\r\n                      <SignInForm /> \r\n                    </Flex>                                   \r\n                </Flex>\r\n                <Box sx={waveEffectContainer}>                 \r\n                </Box>           \r\n                <Typist cursor={{ show: false, hideWhenDone: true, hideWhenDoneDelay: 0 }}>\r\n                  <Paragraph sx={smallTitleTxt}>{txtTitleSmallEng}</Paragraph>                  \r\n                </Typist>\r\n                <ScrollText><Heading sx={bigTitleTxt}>{txtTitleBigEng}</Heading></ScrollText>  \r\n          </>}\r\n          </Box>\r\n        </Header>\r\n      </Box>\r\n      </RecoilRoot>\r\n      </ThemeProvider>  \r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}