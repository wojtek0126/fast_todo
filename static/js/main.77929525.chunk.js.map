{"version":3,"sources":["assets/bee2.webp","styles/elements.tsx","components/propsyComps/TitleBanner.tsx","firebase/firebase.tsx","content/icons.tsx","components/propsyComps/PropsyBtn.tsx","components/propsyComps/PropsyFlexBox.tsx","components/propsyComps/PropsyInput.tsx","components/UserAuth/SignOutButton.tsx","components/TodoItem.tsx","components/propsyComps/TypistText.tsx","components/propsyComps/RenderUserName.tsx","components/propsyComps/ProgressBar.tsx","components/TodoList.tsx","content/content.tsx","styles/theme.tsx","recoil/recoil.tsx","components/propsyComps/PropsyAlertBox.tsx","components/propsyComps/PropsySignLogForm.tsx","components/UserAuth/SignUpForm.tsx","components/propsyComps/ResetPasswordPopup.tsx","components/UserAuth/SignInForm.tsx","components/propsyComps/ParticleBackground.tsx","App.tsx","reportWebVitals.ts","assets/fonts/Digitag.ttf","assets/fonts/DIGITALDREAM.ttf","assets/fonts/progbot.ttf","index.tsx"],"names":["btnBorderRadius","inputBorderRadius","boxBorderRadius","userNameMinHeight","btnGradient","btnCheckedGradient","txtShadow","itemBoxShadow","appContainer","backgroundColor","maxWidth","minHeight","signInFormContainer","justifyContent","alignItems","flexDirection","alignSelf","signLogContainer","position","titleContainer","textShadow","color","paddingTop","fontSize","flexWrap","headerContainer","display","justtifyContent","textAlign","margin","todosContainer","opacity","waveEffectContainer","width","top","left","zIndex","todoFiltersContainer","borderRadius","wordBreak","padding","marginTop","boxShadow","todoStatusContainer","marginBottom","addTaskContainer","itemsBtnsContainer","background","backgroundSize","border","borderColor","welcomeUserWrapper","displayBar","wordWrap","fontFamily","displayStatusBar","todoLisTWrapper","editItemDateAndTaskTypeWrapper","paddingLeft","marginLeft","btnPrimary","backgroundImage","cursor","textTransform","transition","backgroundPosition","textDecoration","btnScrollUp","right","bottom","addTodoForm","inputGeneral","inputTodoAdd","inputTodoSearch","inputTodoEdit","optionBox","bigTitleTxt","alignText","userWelcomeTxt","whiteSpace","loadingBox","smallTitleTxt","fontWeight","copyrightTxt","loginSignupTxt","userImg","height","userNameInTask","overflow","clickedBtnAnimJump","keyframes","clickedBtnAnimShrink","TitleBanner","sx","require","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","app","initializeApp","instance","auth","firestore","getFirebase","window","iconAddTaskBtn","iconCompleteTaskBtn","iconEditTaskBtn","iconDeleteTaskBtn","iconSignInBtn","iconSignUpBtn","iconAddUser","iconSignOutBtn","iconCloseBtn","iconForgotpassBtn","iconSendMailBtn","iconDateBtn","iconRetroModeBtn","PropsyBtn","React","memo","animTime","animation","onClick","content","isDisabled","type","tooltipId","tooltipTxt","size","disabled","transform","style","id","place","effect","PropsyFlexBox","PropsyInput","text","onChange","placeholder","value","inputType","handleButtonAnimation","setButtonState","animationName","delay","setTimeout","SignOutButton","useState","animBtn1","setAnimBtn1","firebaseInstance","signOut","a","console","log","TodoItem","props","todoTxt","setTodoTxt","deadline","setDeadline","animBtn2","setAnimBtn2","animBtn3","setAnimBtn3","opacity1","setOpacity1","taskTypeColor","setTaskTypeColor","todo","isCompleted","btnCompletedColor","setBtnCompletedColor","photoURL","useEffect","updateFirestoreData","collection","item","data","keyValue","doc","update","FieldValue","serverTimestamp","onUpdate","useCallback","onComplete","onDelete","delete","handleTaskTypeChange","e","target","handleSetDeadline","handleDeadline","src","userName","defaultValue","TypistText","typistText","typistStyle","show","RenderUserName","userEmail","localStorage","getItem","loadingDisplay","setLoadingDisplay","userDisplay","setUserDisplay","ProgressBar","progress","progressColor","TodoList","dummy","useRef","todosRef","query","orderBy","limit","useCollectionData","idField","todos","formValue","setFormValue","searchByTxt","setSearchByTxt","filterCompleted","setFilterCompleted","progressBarCount","setProgressBarCount","getPrecentCompleted","precision","alltodos","completed","filter","parseFloat","toFixed","percent","userNameParsedFunc","match","sendTodo","preventDefault","currentUser","uid","add","assignedTo","assignedBy","createdAt","updatedAt","completedAt","current","scrollIntoView","behavior","status","searchBy","TodoJsx","keyId","searchIt","task","searchItTxt","includes","map","renderFiltered","ref","className","onSubmit","theme","fonts","body","heading","monospace","digitag","DigiDream","led","bot","fontSizes","colors","text2","text3","text4","appMainbackground","todoEditArea","todoTaskBackground","todoIdeaBackground","todoProblemBackground","todoRecipeBackground","todoScheduleBackground","inputBackground","userBackground","dateSetBackground1","buttonsBackground","progressBarColor","progressGrad","progressBarFullColor","patch","primary","sent","received","messageText","underwater","alert","images","avatar","backgroundRepeat","themeRetro","bulbOnColor","recoilUser","atom","key","default","displayAlertBoxState","displayLoginBoxState","displaySignupBoxState","PropsyAlertBox","selector","get","PropsySignLogForm","textHead","buttonContent","onChangeEmail","onChangePass","emailInputTxt","passInputTxt","extraContent","btnAnimation","btnAnimTime","SignUpForm","emailValue","setEmailValue","passwordlValue","setPasswordValue","alertDisplay","setAlertDiaspaly","alertContent","setAlerContent","setLoginBoxDisplay","useSetRecoilState","useRecoilState","SignupBoxDisplay","setSignupBoxDisplay","email","password","signUp","event","createUserWithEmailAndPassword","user","setItem","message","ResetPasswordPopup","onClickClose","animBtnState1","animBtnState2","SignInForm","animBtn4","setAnimBtn4","animBtn5","setAnimBtn5","setAlertContent","forgotPasswordDisplay","setForgotPasswordDisplay","setRecoilAlertBoxDisplay","loginBoxDisplay","signIn","signInWithEmailAndPassword","tooltipText","sendPasswordResetEmail","ParticleBackground","params","App","setCurrentUser","themeUI","setThemeUI","onAuthStateChanged","authUser","Header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77929525.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bee2.33061ea5.webp\";","  // unified styles control center, fused with theme-ui\r\n  import background from '../assets/bee2.webp'\r\n  import { keyframes } from '@emotion/react'  \r\n\r\n  \r\n  export type Styles = {\r\n    [key: string]: any;\r\n  };\r\n\r\n  //common styles\r\n  export const btnBorderRadius: string = '50%';\r\n  export const inputBorderRadius: string = '10px';\r\n  export const boxBorderRadius: string = '10px';\r\n  export const userNameMinHeight: string = '85px';\r\n  export const btnGradient: string = 'linear-gradient(to right, #232526 0%, #414345  51%, #232526  100%)';\r\n  export const btnCheckedGradient: string = 'linear-gradient(to right, #50C9C3 0%, #96DEDA  51%, #50C9C3  100%)';\r\n  export const btnAlertgradient: string = 'linear-gradient(to right, #e52d27 0%, #b31217  51%, #e52d27  100%)}';\r\n  export const txtShadow: string = '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000';\r\n  export const itemBoxShadow: string = '24px 33px 46px 3px rgba(0,0,0,0.92)';   \r\n   \r\n   \r\n  //containers\r\n  export const appContainer: Styles = {\r\n    // background: `url(${background})`,\r\n    backgroundColor: 'appMainbackground',\r\n    // backgroundBlendMode:'multiply,multiply',\r\n    maxWidth: '100vw',\r\n    minHeight: '100vh'    \r\n  };\r\n\r\n  export const signInContainer: Styles = {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    backgroundColor: 'transparent'\r\n  };\r\n\r\n  export const signInFormContainer: Styles = {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    backgroundColor: 'transparent',\r\n    alignSelf: 'center'\r\n  };\r\n\r\n  export const signLogContainer: Styles = {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    \"@media (max-width: 780px)\": { \r\n      flexDirection: 'column',\r\n      position: 'relative'            \r\n   }\r\n  };\r\n\r\n  export const titleContainer: Styles = {\r\n    textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n    color: 'text2',\r\n    paddingTop: 60,\r\n    fontSize: 50,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap'      \r\n    };\r\n\r\n  export const headerContainer: Styles = {\r\n    display: 'flex',\r\n    justtifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    margin: 'auto'\r\n  };\r\n\r\n  export const todosContainer: Styles = {          \r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: '2',\r\n    opacity: '0.85',     \r\n  };\r\n\r\n  export const waveEffectContainer: Styles = {  \r\n    width: '100vw',\r\n    position: 'absolute',\r\n    top: 220,\r\n    left: 0,\r\n    maxWidth: '100%',\r\n    zIndex: 0\r\n  };\r\n\r\n  export const waveEffectContainer2: Styles = {  \r\n    width: '100vw',\r\n    position: 'absolute',\r\n    top: 200,\r\n    left: 0,\r\n    maxWidth: '100%',\r\n    zIndex: 0\r\n  };\r\n\r\n  export const todoFiltersContainer: Styles = {  \r\n    margin: 'auto',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: `todoTaskBackground`,\r\n    color: 'todoText',\r\n    width: '80vw',\r\n    wordBreak: 'break-word',\r\n    position: 'relative',    \r\n    padding: 2, \r\n    marginTop: 50,    \r\n    minHeight: 100,\r\n    boxShadow: itemBoxShadow   \r\n  };\r\n\r\n  export const todoStatusContainer: Styles = {  \r\n    flexDirection: 'column',\r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: `todoTaskBackground`,\r\n    color: 'todoText',\r\n    width: '80vw',\r\n    wordBreak: 'break-word',\r\n    position: 'relative',   \r\n    margin: 'auto', \r\n    padding: 2, \r\n    marginTop: 50,\r\n    marginBottom: 80,\r\n    minHeight: 100,\r\n    boxShadow: itemBoxShadow   \r\n  };\r\n\r\n  export const addTaskContainer: Styles = {  \r\n    position: 'relative'     \r\n  };\r\n\r\n  export const itemsBtnsContainer: Styles = {      \r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    flexWrap: 'wrap', \r\n    borderRadius: boxBorderRadius,\r\n    background: `url(${background})`,\r\n    backgroundSize: 'cover',\r\n    // backgroundBlendMode:'multiply,multiply',\r\n    // backgroundColor: 'buttonsBackground' ,\r\n    border:'1px solid',\r\n    borderColor: 'borderColor',\r\n    position: 'relative'\r\n  };\r\n\r\n  export const todoItemContainer: Styles = {\r\n    margin: 'auto', \r\n    flexDirection: 'column',\r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: `todoTaskbackground`,\r\n    color: 'todoText',\r\n    width: '100%',\r\n    wordBreak: 'break-word',\r\n    position: 'relative',    \r\n    padding: 2, \r\n    marginTop: 50,\r\n    marginBottom: 80,\r\n    minHeight: 100,\r\n    boxShadow: itemBoxShadow\r\n  };\r\n\r\n  export const welcomeUserWrapper: Styles = {\r\n    margin: '0 auto'\r\n  };\r\n\r\n  export const displayBar: Styles = { \r\n    position: 'relative',   \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    // background: `url(${background})`,\r\n    // backgroundSize: 'contain',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,  \r\n    marginTop: 1,\r\n    padding: 2,       \r\n  }; \r\n\r\n  export const displayStatusBar: Styles = { \r\n    position: 'relative',   \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,  \r\n    marginTop: 1,\r\n    padding: 20,       \r\n  };\r\n\r\n  export const todoLisTWrapper: Styles= {\r\n    flexDirection: 'column',\r\n    width: '100vw'\r\n  };\r\n\r\n  export const editItemDateAndTaskTypeWrapper: Styles= {\r\n    flexDirection: 'row',                           \r\n    backgroundColor: 'buttonsBackground',\r\n    borderRadius: boxBorderRadius,\r\n    paddingLeft: 3,\r\n    marginLeft: 1,\r\n    position: 'relative',\r\n           };\r\n\r\n// buttons\r\nexport const btnPrimary: Styles = {\r\n    display: 'flex',\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    margin: '10px',\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'white',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: btnBorderRadius,\r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   }\r\n  };\r\n\r\n  export const btnScrollUp: Styles = {\r\n    cursor: 'pointer',\r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: '50%',\r\n    position: 'fixed',\r\n    right: 8,\r\n    bottom: 65,  \r\n  };\r\n\r\n  export const btnAddTask: Styles = {\r\n    position: 'fixed',\r\n    bottom: 115,\r\n    right: 0,\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    padding: '15px',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'text2',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: btnBorderRadius,      \r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   },\r\n       \"@media (max-width: 780px)\": { \r\n      bottom: 1,\r\n      opacity: 0.9              \r\n   }\r\n  };\r\n\r\n  export const btnLogOut: Styles = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    margin: '10px',\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'white',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: btnBorderRadius,      \r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   }\r\n  };\r\n\r\n// forms\r\n  export const addTodoForm: Styles = {\r\n    display: 'flex',  \r\n    justifyContent: 'center',\r\n    alignItems: 'center',   \r\n    marginTop: '3',        \r\n    position: 'fixed',\r\n    right: 0,\r\n    bottom: 0   \r\n  };\r\n\r\n  export const inputGeneral: Styles = {    \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n    margin: 0,\r\n    marginTop: 2,\r\n    padding: 2,\r\n    width: '100%',\r\n    alignSelf: 'center'\r\n  };\r\n\r\n  export const inputTodoAdd: Styles = {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    right: 0,\r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n    minHeight: '65px'\r\n  };\r\n\r\n  export const inputTodoSearch: Styles = {    \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    // background: `url(${background})`,\r\n    // backgroundSize: 'cover',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n    margin: 0\r\n  };\r\n\r\n  export const inputTodoEdit: Styles = { \r\n    fontFamily: 'body', \r\n    wordWrap: 'break-word',\r\n    color: 'text2', \r\n    backgroundColor: 'todoEditArea',\r\n    borderRadius: inputBorderRadius,  \r\n    maxWidth: '100%',\r\n    paddingTop: 20,\r\n    paddingLeft: 20,\r\n    marginTop: 15,\r\n    marginBottom: 20,  \r\n    \"@media (max-width: 780px)\": { \r\n      marginTop: 20,\r\n      marginBottom: 30            \r\n   }\r\n  } \r\n\r\n  export const optionBox: Styles = {  \r\n    zIndex:15,  \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n    margin: '0 auto' ,\r\n    alignSelf: 'center',\r\n    \"@media (max-width: 780px)\": { \r\n     fontSize: 'small',              \r\n   }\r\n  };\r\n\r\n  //text\r\n  export const bigTitleTxt: Styles = {\r\n    alignText: 'center',\r\n    fontSize: [20, 14, 16, 20],   \r\n    textShadow: txtShadow,\r\n    color: 'alert',    \r\n    padding: 2,\r\n    marginTop: 20\r\n    };\r\n\r\n    export const userWelcomeTxt: Styles = {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      fontSize: [14, 16,20],\r\n      maxWidth: '100vw',\r\n      whiteSpace: 'pre-wrap',\r\n      wordBreak: 'break-word',\r\n      textShadow: txtShadow,\r\n      color: 'text2',\r\n      minHeight: userNameMinHeight\r\n      };\r\n\r\n      export const loadingBox: Styles = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: '100vw',\r\n        whiteSpace: 'pre-wrap',\r\n        wordBreak: 'break-word',\r\n        color: 'text2',\r\n        minHeight: userNameMinHeight\r\n        };\r\n\r\n  export const smallTitleTxt: Styles = {\r\n    width: '100%',\r\n    color: 'text2',\r\n    fontWeight: '600',\r\n    textShadow: txtShadow,  \r\n    marginTop: '40px',    \r\n    padding: 2\r\n    };\r\n\r\n    export const copyrightTxt: Styles = {\r\n      width: '100%',\r\n      color: 'text2',\r\n      fontSize: 1,\r\n      textAlign: 'center',\r\n      textShadow: txtShadow,  \r\n      marginBottom: 10,\r\n      padding: 1\r\n      };\r\n\r\n    export const loginSignupTxt: Styles = {\r\n      width: '100%',\r\n      color: 'text2',\r\n      fontWeight: '600',\r\n      textShadow: txtShadow,\r\n      marginTop: 10,\r\n      marginBottom: 10 \r\n      };\r\n\r\n// avatar and user details \r\n  export const userImg: Styles = {\r\n    borderRadius: '50%',\r\n    width: '40px',\r\n    height: '40px',\r\n    position: 'absolute',\r\n    left: '-16px',\r\n    top: '-20px'\r\n  };\r\n\r\n  export const userNameInTask: Styles = {\r\n    borderRadius: boxBorderRadius,\r\n    width: '200px',\r\n    maxWidth: '240px',\r\n    overflow: 'hidden',\r\n    padding: 1,\r\n    // position: 'absolute',\r\n    // left: '40px',\r\n    // top: '-20px',\r\n    backgroundColor: 'userBackground'\r\n  };\r\n\r\n// animations\r\nexport const clickedBtnAnimJump = keyframes`\r\nfrom, 20%, 53%, 80%, to {\r\n  transform: translate3d(0,0,0);\r\n}\r\n\r\n40%, 43% {\r\n  transform: translate3d(0, -30px, 0);\r\n}\r\n\r\n70% {\r\n  transform: translate3d(0, -15px, 0);\r\n}\r\n\r\n90% {\r\n  transform: translate3d(0,-4px,0);\r\n}\r\n` ;\r\n\r\nexport const clickedBtnAnimShrink = keyframes`\r\nfrom {\r\n  transform: scale(1);\r\n}\r\nto {\r\n  transform: scale(0);\r\n}\r\n` ;\r\n\r\n ","import { Flex, Paragraph } from \"@theme-ui/components\";\r\nimport { copyrightTxt, titleContainer } from \"../../styles/elements\";\r\n\r\nconst TitleBanner = () => {\r\n    return (\r\n        <Flex sx={titleContainer}>\r\n          <Paragraph sx={{fontFamily: 'body'}}>The\r\n        </Paragraph>\r\n        <Paragraph sx={{\r\n            fontFamily: 'body',\r\n            color: 'text3'\r\n          }}>Eazzy</Paragraph>\r\n          <Paragraph sx={{\r\n            fontFamily: 'body',\r\n            color: 'text4'\r\n          }}>Todo</Paragraph>\r\n          <Paragraph sx={copyrightTxt}>© 2021 HFM</Paragraph>            \r\n    </Flex>\r\n        )  \r\n}\r\n\r\nexport default TitleBanner;","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nrequire('firebase/auth');\r\n\r\ntype FireConfig = {\r\n    [key: string]: string;\r\n  };\r\n\r\nexport const config: FireConfig = {\r\n    apiKey: \"AIzaSyDNbdVmZVmzNzEWw_eqHT6jMLeAa788Rgk\",\r\n    authDomain: \"eazzy-todo.firebaseapp.com\",\r\n    projectId: \"eazzy-todo\",\r\n    storageBucket: \"eazzy-todo.appspot.com\",\r\n    messagingSenderId: \"461379999354\",\r\n    appId: \"1:461379999354:web:0b5aad7eaa090b4fb34dc3\",\r\n    measurementId: \"G-8M0LZN0HLX\"\r\n    };\r\n\r\n!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();    \r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();  \r\n\r\nlet instance: any;\r\n\r\nexport default function getFirebase() {\r\n  if (typeof window !== \"undefined\") {\r\n    if (instance) return instance;\r\n    if (!firebase.apps.length) {\r\n        instance = firebase.initializeApp(config);\r\n     }else {\r\n        instance = firebase.app(); \r\n     }\r\n    return instance;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// if (!firebase.apps.length) {\r\n//     instance = firebase.initializeApp(config);\r\n//  }else {\r\n//     instance = firebase.app(); // if already initialized, use that one\r\n//  }\r\n\r\n","import { AiOutlineAppstoreAdd, AiOutlineClose, AiOutlineDelete, AiOutlinePlus } from 'react-icons/ai';\r\nimport { FaFlagCheckered } from 'react-icons/fa';\r\nimport { MdSystemUpdateAlt } from 'react-icons/md';\r\nimport { BiLogOutCircle, BiLogInCircle, BiUserPlus } from 'react-icons/bi';\r\nimport { RiLockPasswordLine, RiMailSendLine } from 'react-icons/ri';\r\nimport { CgCalendarDates } from 'react-icons/cg';\r\nimport { SiRetroarch } from 'react-icons/si';\r\n\r\n\r\n\r\n\r\n\r\nexport const iconAddTaskBtn: JSX.Element = <AiOutlineAppstoreAdd />;\r\n\r\nexport const iconCompleteTaskBtn: JSX.Element = <FaFlagCheckered />;\r\n\r\nexport const iconEditTaskBtn: JSX.Element = <MdSystemUpdateAlt />;\r\n\r\nexport const iconDeleteTaskBtn: JSX.Element = <AiOutlineDelete />;\r\n\r\nexport const iconSignInBtn: JSX.Element = <BiLogInCircle />;\r\n\r\nexport const iconSignUpBtn: JSX.Element = <BiUserPlus />;\r\n\r\nexport const iconAddUser: JSX.Element = <AiOutlinePlus />;\r\n\r\nexport const iconSignOutBtn: JSX.Element = <BiLogOutCircle />;\r\n\r\nexport const iconCloseBtn: JSX.Element = <AiOutlineClose />;\r\n\r\nexport const iconForgotpassBtn: JSX.Element = <RiLockPasswordLine />;\r\n\r\nexport const iconSendMailBtn: JSX.Element = <RiMailSendLine />;\r\n\r\nexport const iconDateBtn: JSX.Element = <CgCalendarDates />;\r\n\r\nexport const iconRetroModeBtn: JSX.Element = <SiRetroarch />;\r\n\r\n\r\n","import React from \"react\";\r\nimport { Button } from \"theme-ui\";\r\nimport { btnBorderRadius } from \"../../styles/elements\";\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { PropsyCompProps } from \"./propsyCompsInterface\";\r\n\r\n\r\nconst PropsyBtn = React.memo(({animTime,\r\n                               background,\r\n                               animation, \r\n                               onClick, \r\n                               content, \r\n                               isDisabled, \r\n                               opacity, \r\n                               transition,\r\n                               type,\r\n                               display = 'flex',\r\n                               borderRadius = btnBorderRadius,\r\n                               tooltipId,\r\n                               tooltipTxt,\r\n                               size = '1',\r\n                               position,\r\n                               top,\r\n                               right,\r\n                               left,\r\n                               fontSize = '[16, 20]',\r\n                               margin = '10px',\r\n                               color = 'white'\r\n                              }: PropsyCompProps ) => {  \r\n    return (<>\r\n        <Button disabled={isDisabled} \r\n                type={type}                \r\n        sx={{\r\n          transform: `scale(${size})`,\r\n          backgroundImage: `${background}`,\r\n          display: display,\r\n          fontSize: fontSize,\r\n          cursor: 'pointer',\r\n          margin: margin,\r\n          padding: '15px',\r\n          textAlign: 'center',          \r\n          transition: `${transition}`,\r\n          backgroundSize: '200% auto',\r\n          color: color,            \r\n          boxShadow: '0 0 20px #eee',\r\n          borderRadius: borderRadius,\r\n          animation: `${animation} ${animTime} ease 1`,\r\n          opacity: `${opacity}`,\r\n          position: position,\r\n          top: top,\r\n          right: right,\r\n          left: left,\r\n          '&:hover, &:focus': {  \r\n            backgroundPosition: 'right center', \r\n            color: '#fff',\r\n            textDecoration: 'none'\r\n         }\r\n        }}\r\n          onClick={onClick}\r\n        >{<div style={{display: 'flex'}} data-tip data-for={tooltipId}>{content}</div>}</Button>\r\n        <ReactTooltip id={tooltipId} place=\"bottom\" effect=\"solid\">\r\n       {tooltipTxt}\r\n      </ReactTooltip>\r\n    </>)    \r\n});\r\n\r\nexport default PropsyBtn ","import React from \"react\";\r\nimport { Box } from \"theme-ui\";\r\nimport { boxBorderRadius, itemBoxShadow } from \"../../styles/elements\";\r\nimport { PropsyCompProps } from \"./propsyCompsInterface\";\r\n\r\n\r\nconst PropsyFlexBox = React.memo(({display = 'flex',\r\n                                   margin,\r\n                                   marginTop = 50,\r\n                                   marginBottom = 80,\r\n                                   width, \r\n                                   animation, \r\n                                   transition, \r\n                                   onClick, \r\n                                   content, \r\n                                   opacity = 0.8,\r\n                                   backgroundColor = 'todoTaskBackground' \r\n                                }: PropsyCompProps) => {\r\n    return (\r\n        <Box \r\n        sx={{\r\n            flexDirection: 'column',\r\n            display: `${display}`,\r\n            borderRadius: boxBorderRadius,\r\n            backgroundColor: `${backgroundColor}`,\r\n            color: 'todoText',\r\n            width: `${width}`,\r\n            wordBreak: 'break-word',\r\n            position: 'relative',             \r\n            padding: 2, \r\n            margin: `${margin}`,\r\n            marginTop: `${marginTop}`,\r\n            marginBottom: `${marginBottom}`,\r\n            minHeight: 100,\r\n            boxShadow: itemBoxShadow,\r\n            opacity: `${opacity}`,\r\n            animation: `${animation}`,\r\n            transition: `${transition}`, \r\n                }}\r\n          onClick={onClick}\r\n        >{content}</Box>\r\n    )    \r\n});\r\n\r\nexport default PropsyFlexBox;","import React from \"react\";\r\nimport { Input } from \"theme-ui\";\r\nimport { inputBorderRadius } from \"../../styles/elements\";\r\nimport { PropsyCompProps } from \"./propsyCompsInterface\";\r\n\r\n\r\nconst PropsyInput = React.memo(({text,\r\n                                 fontSize = \"12px !important\",\r\n                                 onChange,\r\n                                 display,                                 \r\n                                 marginTop =  0,\r\n                                 width = '100%',\r\n                                 placeholder=\"...\",\r\n                                 fontFamily = 'body',\r\n                                 value,\r\n                                 wordWrap = \"wrap\",\r\n                                 inputType\r\n                                       }: PropsyCompProps) => {\r\n    return (\r\n               <Input type={inputType}                     \r\n                sx={{\r\n                    fontSize: fontSize,\r\n                    display: `${display}`,\r\n                    wordWrap: wordWrap,\r\n                    fontFamily: fontFamily,\r\n                    backgroundColor: 'inputBackground',\r\n                    color: 'text2',   \r\n                    borderRadius: inputBorderRadius,\r\n                    margin: 0,\r\n                    marginTop: marginTop,\r\n                    padding: 2,\r\n                    width: `${width}`,\r\n                    alignSelf: 'center',\r\n                    \"@media (max-width: 780px)\": { \r\n                        fontSize: \"8px !important\",\r\n                        width: '103px'             \r\n                      }\r\n            }} onChange={onChange}\r\n               placeholder={placeholder}\r\n               {...text}\r\n                value={value} />\r\n)});\r\n\r\nexport default PropsyInput;","import { useState } from \"react\";\r\nimport { iconSignOutBtn } from \"../../content/icons\";\r\nimport getFirebase from \"../../firebase/firebase\";\r\nimport { btnGradient, clickedBtnAnimShrink } from \"../../styles/elements\";\r\nimport PropsyBtn from \"../propsyComps/PropsyBtn\";\r\n\r\nexport const handleButtonAnimation = (setButtonState: React.Dispatch<React.SetStateAction<string>>, animationName: string, delay: number) => {\r\n  setButtonState(animationName);\r\n  setTimeout(() => {\r\n    setButtonState(\"\");\r\n  }, delay);  \r\n};\r\n\r\n\r\nconst SignOutButton = () => {\r\n  const [animBtn1, setAnimBtn1] = useState(\"\");\r\n\r\n  const firebaseInstance = getFirebase();\r\n     \r\n\r\n  const signOut = async () => {\r\n    handleButtonAnimation(setAnimBtn1, clickedBtnAnimShrink, 1000);\r\n    setTimeout(async () => {\r\n      try {\r\n        if (firebaseInstance) {\r\n          await firebaseInstance.auth().signOut();   \r\n        }\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div>    \r\n      <PropsyBtn onClick={() => signOut()}\r\n                 tooltipId={'logout'}\r\n                 tooltipTxt={'log out and exit'}\r\n                 content={iconSignOutBtn}\r\n                 background={btnGradient}\r\n                 animation={animBtn1} \r\n                 animTime={'1s'}  \r\n                 />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignOutButton;\r\n\r\n\r\n","/** @jsxImportSource theme-ui */\r\nimport { useState, useCallback, useEffect, ChangeEvent } from 'react';\r\n\r\nimport { Image, Textarea, Paragraph, Select, Flex } from 'theme-ui'; \r\n\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { btnGradient,        \r\n         btnCheckedGradient,\r\n         clickedBtnAnimJump,         \r\n         inputTodoEdit,\r\n         itemsBtnsContainer,         \r\n         userImg,         \r\n         optionBox,\r\n         clickedBtnAnimShrink,\r\n         editItemDateAndTaskTypeWrapper,\r\n         userNameInTask} from '../styles/elements';\r\nimport { firestore } from '../firebase/firebase';\r\nimport { iconCompleteTaskBtn, iconDateBtn,  iconDeleteTaskBtn, iconEditTaskBtn } from '../content/icons';\r\nimport PropsyBtn from './propsyComps/PropsyBtn';\r\nimport PropsyFlexBox from './propsyComps/PropsyFlexBox';\r\nimport firebase from 'firebase';\r\nimport PropsyInput from './propsyComps/PropsyInput';\r\nimport React from 'react';\r\nimport { handleButtonAnimation } from './UserAuth/SignOutButton';\r\nrequire('firebase/auth');  \r\n\r\nexport interface Todo {\r\n  isCompleted: boolean,\r\n  uid: string,\r\n  text: string,\r\n  type: string,\r\n  deadline: string,\r\n  id: string | undefined,\r\n  userName: string,\r\n  photoURL: string | null,\r\n  includes?: string, \r\n  match?: boolean\r\n};\r\n\r\ntype AppProps = {\r\n  todo: Todo;     \r\n}; \r\n\r\nconst TodoItem = (props: AppProps) => {  \r\n    const [ todoTxt, setTodoTxt ] = useState(\"\");\r\n    const [ deadline, setDeadline ] = useState(\"\");\r\n\r\n    const [ animBtn1, setAnimBtn1 ] = useState(\"\");\r\n    const [ animBtn2, setAnimBtn2 ] = useState(\"\");\r\n    const [ animBtn3, setAnimBtn3 ] = useState(\"\");\r\n\r\n    const [ opacity1, setOpacity1 ] = useState(1);\r\n\r\n    const [ taskTypeColor, setTaskTypeColor ] = useState(\"todoTaskBackground\");\r\n\r\n    const [ btnCompletedColor, setBtnCompletedColor ] = useState(() => {\r\n      if (props.todo.isCompleted === true) {\r\n        return btnCheckedGradient;\r\n      }\r\n      else {\r\n        return btnGradient;\r\n      }\r\n    });    \r\n\r\n    const {  photoURL } = props.todo;    \r\n\r\n    useEffect(() => {\r\n      if (props.todo.type === \"Task\") {\r\n        setTaskTypeColor(\"todoTaskBackground\"); \r\n      }\r\n      else if (props.todo.type === \"Idea\") {\r\n        setTaskTypeColor(\"todoIdeaBackground\"); \r\n      }\r\n      else if (props.todo.type === \"Problem\") {\r\n        setTaskTypeColor(\"todoProblemBackground\"); \r\n      }\r\n      else if (props.todo.type === \"Recipe\") {\r\n        setTaskTypeColor(\"todoRecipeBackground\");\r\n      }\r\n      else if (props.todo.type === \"Schedule\") {\r\n        setTaskTypeColor(\"todoScheduleBackground\");        \r\n      } \r\n      setTodoTxt(props.todo.text);\r\n      setDeadline(props.todo.deadline);\r\n    },[props.todo.type, props.todo.text, props.todo.deadline] );\r\n\r\n    const updateFirestoreData = (collection: string, item: string | undefined, data: string, keyValue: string | boolean) => {\r\n      firestore.collection(collection).doc(item).update({[data]: keyValue,\r\n        updatedAt: firebase.firestore.FieldValue.serverTimestamp()\r\n      });\r\n    };\r\n    \r\n    const onUpdate = useCallback(\r\n      () => {\r\n          updateFirestoreData('todos', props.todo.id, 'text', todoTxt);       \r\n          handleButtonAnimation(setAnimBtn1, clickedBtnAnimJump, 1000);\r\n      },\r\n      [todoTxt, props.todo.id],\r\n    );  \r\n\r\n    const onComplete = useCallback(\r\n      () => {\r\n        if (props.todo.isCompleted === false) {\r\n          updateFirestoreData('todos', props.todo.id, 'isCompleted', true);           \r\n          setBtnCompletedColor(btnCheckedGradient);\r\n        }        \r\n        else if (props.todo.isCompleted === true){\r\n          updateFirestoreData('todos', props.todo.id, 'isCompleted', false);\r\n          setBtnCompletedColor(btnGradient);\r\n           }  \r\n      },\r\n      [props],\r\n    );\r\n    \r\n    const onDelete = useCallback(\r\n      () => {\r\n        handleButtonAnimation(setAnimBtn2, clickedBtnAnimShrink, 1000);\r\n        setOpacity1(0);\r\n        setTimeout(() => {\r\n          firestore.collection('todos').doc(props.todo.id).delete();   \r\n        }, 2000);\r\n      },\r\n      [props],\r\n    );  \r\n  \r\n    const handleTaskTypeChange = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\r\n      if (e.target.value === \"Task\") {\r\n        setTaskTypeColor(\"todoTaskBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Task\");       \r\n      }\r\n      else if (e.target.value === \"Idea\") {\r\n        setTaskTypeColor(\"todoIdeaBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Idea\");    \r\n      }\r\n      else if (e.target.value === \"Problem\") {\r\n        setTaskTypeColor(\"todoProblemBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Problem\");    \r\n      }\r\n      else if (e.target.value === \"Recipe\") {\r\n        setTaskTypeColor(\"todoRecipeBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Recipe\");   \r\n      }\r\n      else if (e.target.value === \"Schedule\") {\r\n        setTaskTypeColor(\"todoScheduleBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Schedule\");\r\n      }\r\n    },[props]);\r\n\r\n    const handleSetDeadline = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setDeadline(e.target.value);\r\n    },[]);\r\n\r\n    const handleDeadline = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n      updateFirestoreData('todos', props.todo.id, 'deadline', deadline);  \r\n      handleButtonAnimation(setAnimBtn3, clickedBtnAnimShrink, 1000);    \r\n    },[deadline, props.todo.id]);\r\n\r\n        \r\n    return (<>  \r\n      <PropsyFlexBox \r\n        opacity={opacity1}\r\n        width={'80vw'}\r\n        transition={'1s'}\r\n        marginBottom={\"100px\"}\r\n        backgroundColor={taskTypeColor}\r\n        content={<>    \r\n  <Image src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} sx={userImg} />\r\n  <Paragraph sx={userNameInTask}>{props.todo.userName}</Paragraph>\r\n        <Textarea sx={inputTodoEdit}\r\n             defaultValue={todoTxt}\r\n             placeholder={todoTxt}\r\n             onChange={e => {\r\n              setTodoTxt(e.target.value);\r\n             }}\r\n        />\r\n          <Flex sx={itemsBtnsContainer}>       \r\n              <PropsyBtn \r\n                tooltipId={'status'}\r\n                tooltipTxt={'switch completion status'}\r\n                background={btnCompletedColor}\r\n                onClick={onComplete}\r\n                content={iconCompleteTaskBtn}\r\n              />       \r\n              <PropsyBtn \r\n                 tooltipId={'update'}\r\n                 tooltipTxt={'confirm content update'}\r\n                 background={btnGradient}\r\n                 onClick={onUpdate}\r\n                 content={iconEditTaskBtn}\r\n                 animation={animBtn1} \r\n                 animTime={'1s'}               \r\n              />\r\n              <PropsyBtn \r\n                 tooltipId={'delete'}\r\n                 tooltipTxt={'delete this task'}\r\n                 background={btnGradient}\r\n                 onClick={onDelete}\r\n                 content={iconDeleteTaskBtn}\r\n                 animation={animBtn2}\r\n                 animTime={'2s'}\r\n              />    \r\n              <Flex sx={{flexDirection: 'row', flexWrap: 'wrap'}}>\r\n              <Select data-tip data-for=\"task-type\" sx={optionBox} defaultValue={props.todo.type}\r\n                                      onChange={handleTaskTypeChange} >\r\n                  <option value=\"Task\" >Task</option>\r\n                  <option value=\"Idea\" >Idea</option>\r\n                  <option value=\"Problem\" >Problem</option> \r\n                  <option value=\"Schedule\" >Schedule</option> \r\n                  <option value=\"Recipe\" >Recipe</option>           \r\n                </Select>  \r\n                <ReactTooltip id=\"task-type\" place=\"bottom\" effect=\"solid\">\r\n                  change type of task\r\n                </ReactTooltip> \r\n                <ReactTooltip id=\"deadline\" place=\"bottom\" effect=\"solid\">\r\n                  set date marker/date due\r\n                </ReactTooltip> \r\n                <Flex sx={editItemDateAndTaskTypeWrapper}>\r\n                      <PropsyInput inputType={'date'}\r\n                                   width={'130px'} \r\n                                   onChange={handleSetDeadline}\r\n                                   value={deadline}\r\n                                   fontFamily={'body'}\r\n                                            />                             \r\n                      <PropsyBtn onClick={handleDeadline}\r\n                                 tooltipId={'set-date'}\r\n                                 tooltipTxt={'confirm date marker/due date setting'}\r\n                                 background={btnGradient}\r\n                                 animation={animBtn3}\r\n                                 animTime={'2s'}\r\n                                 content={iconDateBtn}\r\n                                 size={0.8}\r\n                                 margin={0}                                \r\n                                          />                \r\n                </Flex>            \r\n              </Flex>              \r\n          </Flex>  \r\n        </>}\r\n      />   \r\n    </>)\r\n  }\r\n\r\n  export default React.memo(TodoItem);","import Typist from 'react-typist';\r\nimport { Paragraph } from 'theme-ui';\r\nimport { PropsyCompProps } from \"./propsyCompsInterface\";\r\n\r\n\r\nconst TypistText = ({typistText, typistStyle}: PropsyCompProps) => { \r\n    \r\n\r\n    return (\r\n      <Typist cursor={{show: false}}>\r\n        <Paragraph sx={typistStyle}>{typistText}</Paragraph>                  \r\n      </Typist>\r\n        )  \r\n};\r\n\r\nexport default TypistText;","import { Container, Flex } from \"@theme-ui/components\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { loadingBox, userWelcomeTxt } from \"../../styles/elements\";\r\n\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport TypistText from \"./TypistText\";\r\n\r\n\r\nconst RenderUserName = () => {\r\n    const userEmail = localStorage.getItem('userEmail'); \r\n    const [loadingDisplay, setLoadingDisplay] = useState('flex');\r\n    const [userDisplay, setUserDisplay] = useState('none');\r\n    const timeoutTime = 100;\r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        setLoadingDisplay('none');\r\n        setUserDisplay('flex');\r\n      }, timeoutTime);\r\n    }, []);\r\n\r\n\r\n    return  (<>\r\n\r\n              <Container sx={{display: loadingDisplay}}>\r\n                   <Flex sx={loadingBox}>\r\n                     <ReactLoading type={'spin'} height={30} width={30} />\r\n                   </Flex>\r\n              </Container>            \r\n            \r\n              <Container sx={{display: userDisplay}}>\r\n                <TypistText typistText={`Currently logged user: ${userEmail}`} typistStyle={userWelcomeTxt} />               \r\n              </Container>\r\n\r\n            </>);  \r\n  };       \r\n\r\n  export default RenderUserName;","import { Box } from \"@theme-ui/components\";\r\nimport { boxBorderRadius } from \"../../styles/elements\";\r\nimport { PropsyCompProps } from \"./propsyCompsInterface\";\r\n\r\n\r\nconst ProgressBar = ({progress, progressColor}: PropsyCompProps) => { \r\n\r\n    return (\r\n        <Box sx={{backgroundColor: `${progressColor}`,\r\n            width: `${progress}%`,\r\n            height: '100%',\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: 0,\r\n            opacity: 0.3,\r\n            transition: '1s',\r\n            borderRadius: boxBorderRadius,            \r\n            }}>       \r\n        </Box>\r\n        )  \r\n};\r\n\r\nexport default ProgressBar;","/** @jsxImportSource theme-ui */\r\nimport { \r\n  Flex,  \r\n  Box, \r\n  Textarea,\r\n  Input,\r\n  Select,\r\n  Container,  \r\n  } from 'theme-ui'; \r\n  \r\nimport ReactLoading from 'react-loading';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';  \r\n\r\nimport TodoItem, { Todo } from './TodoItem';\r\n\r\nimport { ChangeEvent, useEffect, useRef, useState } from 'react';\r\n\r\nimport { auth, firestore } from '../firebase/firebase'; \r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport { addTaskContainer,\r\n         addTodoForm,          \r\n          welcomeUserWrapper,\r\n          btnGradient,         \r\n          btnScrollUp,\r\n          displayBar,\r\n          inputTodoAdd,\r\n          inputTodoSearch,         \r\n          optionBox,\r\n          todoFiltersContainer,\r\n          todoLisTWrapper,\r\n          todosContainer,\r\n          todoStatusContainer,          \r\n          clickedBtnAnimShrink,\r\n          displayStatusBar,\r\n          loadingBox,             \r\n          } from '../styles/elements';\r\nimport { txtSearchInputEng, txtTodoInputEng } from '../content/content';\r\nimport { iconAddTaskBtn } from '../content/icons';\r\nimport SignOutButton from './UserAuth/SignOutButton';\r\nimport PropsyBtn from './propsyComps/PropsyBtn';\r\nimport { setTimeout } from 'timers';\r\nimport RenderUserName from './propsyComps/RenderUserName';\r\nimport ProgressBar from './propsyComps/ProgressBar';\r\nimport { ScrollToTop } from 'react-simple-scroll-up'\r\nrequire('firebase/auth');  \r\n\r\nexport type UserEmail = {\r\n  userEmail?: string;\r\n}\r\n\r\n\r\nfunction TodoList() {\r\n    const userEmail: string | null = localStorage.getItem('userEmail'); \r\n    const dummy = useRef<null | HTMLDivElement>(null); \r\n    const todosRef = firestore.collection('todos');\r\n    const query = todosRef.orderBy('createdAt').limit(100);\r\n  \r\n    const [todos] = useCollectionData(query, { idField: 'id' });\r\n  \r\n    const [formValue, setFormValue] = useState('');\r\n\r\n    const [searchByTxt, setSearchByTxt] = useState('');  \r\n\r\n    const [filterCompleted, setFilterCompleted] = useState(\"Show\");   \r\n    \r\n    const [animBtn1, setAnimBtn1] = useState(\"\");    \r\n   \r\n    const [progressBarCount, setProgressBarCount] = useState<number>(0);\r\n\r\n\r\nconst getPrecentCompleted: any = (data: [], precision: number) => {\r\n  let alltodos: number = data?.length;\r\n  let completed: number = data?.filter((item: Todo) => item.isCompleted).length;\r\n  let percentage = alltodos === 0 ? 0 : (completed / alltodos) * 100;\r\n  let resultPercent = parseFloat(percentage.toFixed(precision));\r\n \r\n  return  resultPercent;      \r\n};\r\n\r\nuseEffect(() => {\r\n  setProgressBarCount(getPrecentCompleted(todos));     \r\n},[todos])\r\n\r\nconst percentCompletedColorhandler = (percent: number): string => {\r\n  if (percent < 100) return \"progressBarColor\";\r\n  else return \"progressBarFullColor\"; \r\n}\r\n\r\nconst filteredStatus = (status: string) => {\r\n  setFilterCompleted(status);\r\n};\r\n\r\nconst renderFiltered = (data: any, filterCompleted: string, searchBy: string) => {\r\n  const TodoJsx = (keyId: string | undefined, todo: Todo): JSX.Element => {\r\n    return <TodoItem key={keyId} todo={todo} />;\r\n   };\r\n  const searchIt = (task: string | boolean, searchItTxt: string) => {\r\n    if (typeof task === 'string') {\r\n      return task.includes(searchItTxt);\r\n    }; \r\n  };\r\n\r\n    switch (filterCompleted) {\r\n    case \"Show all\":\r\n      return data && data.filter((task: Todo) => \r\n      searchIt(task.text, searchBy))\r\n      .map((task: Todo): JSX.Element => TodoJsx(task.id, task));\r\n    case \"In progress only\":\r\n      return data && data.filter((task: Todo) => \r\n      searchIt(task.text, searchBy) && task.isCompleted === false)\r\n      .map((task: Todo): JSX.Element => TodoJsx(task.id, task));       \r\n    case \"Completed only\":\r\n      return data && data.filter((task: Todo) => \r\n      searchIt(task.text, searchBy) && task.isCompleted === true)\r\n      .map((task: Todo): JSX.Element => TodoJsx(task.id, task)); \r\n    default:\r\n      return data && data.filter((task: Todo) => \r\n      searchIt(task.text, searchBy))\r\n      .map((task: Todo): JSX.Element => TodoJsx(task.id, task));\r\n  };\r\n};\r\n\r\nconst userNameParsedFunc = (userEmail: any) => { \r\n    const userNameParsed = userEmail.match(/^(.+)@/)[1]; \r\n  return userNameParsed;\r\n};\r\n\r\n    const sendTodo = async (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n  \r\n      const { uid, photoURL } = auth.currentUser!;\r\n  \r\n      await todosRef.add({\r\n        userName: userNameParsedFunc(userEmail),        \r\n        type: \"Task\",\r\n        assignedTo: \"Not assigned yet\",\r\n        assignedBy: \"Not set yet\",\r\n        text: formValue,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        isCompleted: false,\r\n        updatedAt: \"Not updated yet\",\r\n        completedAt: \"Not completed yet\",\r\n        deadline: \"No deadline set\",\r\n        uid,\r\n        photoURL\r\n      });    \r\n      setFormValue(\"\"); \r\n      \r\n      if (dummy) dummy!.current!.scrollIntoView({ behavior: 'smooth' }); \r\n    };\r\n\r\n    const handleAddTaskInputValue = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n      setFormValue(e.target.value);\r\n    };    \r\n\r\n    const handleAddTaskButtonClick = () => {\r\n      setAnimBtn1(clickedBtnAnimShrink);\r\n      setTimeout(() => {\r\n        setAnimBtn1(\"\"); \r\n        setFormValue(\"\");       \r\n      }, 1000);   \r\n    };\r\n\r\n    if (!todos) {\r\n      return (\r\n        <Flex sx={todoLisTWrapper}>\r\n              <Container>\r\n                   <Flex sx={loadingBox}>\r\n                     <ReactLoading type={'spin'} height={30} width={30} />\r\n                   </Flex>\r\n             </Container>  \r\n        </Flex>  \r\n      )\r\n    }  \r\n    return (<Flex sx={todoLisTWrapper}>                 \r\n          <Box sx={welcomeUserWrapper} >\r\n            <RenderUserName />             \r\n          </Box> \r\n          <Flex sx={{alignSelf: 'center'}}>\r\n            <SignOutButton />  \r\n          </Flex>  \r\n          <Flex id={'main'} sx={todosContainer}>\r\n            <Flex sx={todoFiltersContainer} >\r\n              <Input sx={inputTodoSearch}\r\n                    type={'text'}\r\n                    placeholder={txtSearchInputEng}\r\n                    onChange={(e) => setSearchByTxt(e.target.value)} />\r\n              <Flex sx={{\r\n                flexDirection: 'row',\r\n                alignSelf: 'baseline',\r\n                marginTop: 2\r\n              }} >\r\n                <Select sx={optionBox} defaultValue=\"Show all\" onChange={(e) => filteredStatus(e.target.value)}>\r\n                  <option value=\"Show all\" >{`Show all`}</option>\r\n                  <option value=\"In progress only\" >In progress only</option>\r\n                  <option value=\"Completed only\" >Completed only</option>           \r\n                </Select>           \r\n              </Flex>\r\n         \r\n            </Flex>\r\n            <Flex sx={todoStatusContainer} >\r\n             <Box sx={displayBar}>\r\n               \r\n               {`All tasks: ${todos?.length}`}\r\n\r\n             </Box>\r\n             <Box sx={displayBar}>\r\n             \r\n               {`In progress: ${todos?.filter((item) => !item.isCompleted).length}`}\r\n\r\n             </Box>\r\n             <Box sx={displayBar}>\r\n               \r\n               {`Completed: ${todos?.filter((item) => item.isCompleted).length}`}                      \r\n             \r\n             </Box>\r\n             <Box sx={displayStatusBar}>\r\n\r\n               <ProgressBar progress={progressBarCount}\r\n                            progressColor={percentCompletedColorhandler(progressBarCount)}        \r\n               />\r\n                 \r\n               <Box sx={{position: 'absolute',\r\n                         width: '100%',\r\n                         bottom: 10,\r\n                         left: 0,\r\n                         fontSize: [12, 14, 20]}}\r\n                >\r\n                   {`You have finished ${getPrecentCompleted(todos)}% of the job`}  \r\n               </Box>          \r\n             \r\n             </Box>\r\n            </Flex>             \r\n\r\n             {renderFiltered(todos, filterCompleted, searchByTxt)}\r\n\r\n            <span ref={dummy}></span>\r\n      \r\n          </Flex>  \r\n          <form className='form' onSubmit={sendTodo} >\r\n              <Flex  sx={addTodoForm}>\r\n                <Box sx={addTaskContainer}>\r\n                <Textarea sx={inputTodoAdd} \r\n                      value={formValue}\r\n                      onChange={handleAddTaskInputValue} \r\n                      placeholder={txtTodoInputEng}               \r\n                >\r\n                </Textarea>               \r\n                  <PropsyBtn type={\"submit\"}\r\n                             tooltipId={'add'}\r\n                             tooltipTxt={'add task'} \r\n                             animation={animBtn1} \r\n                             animTime={'1s'} \r\n                             onClick={handleAddTaskButtonClick}   \r\n                             isDisabled={!formValue}\r\n                             background={btnGradient}\r\n                             content={iconAddTaskBtn} />               \r\n                </Box>             \r\n              <Flex>            \r\n          </Flex>         \r\n            </Flex>\r\n          </form>  \r\n            <ScrollToTop style={btnScrollUp} />\r\n        </Flex>)\r\n  }  \r\n      \r\nexport default TodoList;     \r\n\r\n","export const txtSignInGoogleEng: string = \"Sign in with Google\";\r\n\r\nexport const txtSignOutEng: string = \"Sign out\";\r\n\r\nexport const txtSearchInputEng: string = \"Search for task..\";\r\n\r\nexport const txtTitleSmallEng: string = \"Welcome to ever evolving Eazzy Todo List. Set Yourself a goal and make it done. Multipurpose usage. Have a happy todoing!\";\r\n\r\nexport const txtTitleBigEng: string = \"TEST MODE. PLEASE USE MOCK EMAIL TO REGISTER AND LOGIN. \"\r\n\r\nexport const txtAddTaskBtnEng: string = \"Add Task\";\r\n\r\nexport const txtCompleteTaskBtnEng: string = \"Complete\";\r\n\r\nexport const txtEditTaskBtnEng: string = \"Update\";\r\n\r\nexport const txtDeleteTaskBtnEng: string = \"Delete\";\r\n\r\nexport const txtTodoInputEng: string = \"What needs to be done?\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n ","export const theme = {\r\n    fonts: {\r\n      body: 'progbot',\r\n      // body: 'system-ui, sans-serif',\r\n      heading: '\"Avenir Next\", sans-serif',\r\n      monospace: 'Menlo, monospace',\r\n      digitag: \"Digitag\",\r\n      DigiDream: \"DIGITALDREAM\",\r\n      led: \"led_real\",\r\n      bot: 'progbot'\r\n    },\r\n    fontSizes: [\r\n      12, 14, 16, 18, 24, 32, 48, 64, 72,\r\n    ],\r\n    colors: {\r\n      text: '#000',\r\n      text2: '#fff',\r\n      text3: 'red',\r\n      text4: 'blue',\r\n      borderColor: '#fff',\r\n      appMainbackground: 'rgb(102, 0, 102)',\r\n      todoEditArea: '#000',\r\n      todoTaskBackground: 'rgba(51, 51, 255, 0.8)',\r\n      todoIdeaBackground: 'rgba(0, 153, 51, 0.8)',\r\n      todoProblemBackground: 'rgba(204, 51, 0, 0.8)',\r\n      todoRecipeBackground: 'rgba(102, 102, 51, 0.8)',\r\n      todoScheduleBackground: 'rgba(153, 0, 204, 0.8)',\r\n      inputBackground: '#000',\r\n      userBackground: 'rgba(255, 255, 0, 0.8)',\r\n      dateSetBackground1: 'rgb(0, 102, 102)',\r\n      buttonsBackground: 'rgb(0, 51, 51)',\r\n      progressBarColor: 'green',\r\n      progressGrad: 'radial-gradient(circle 248px at center, #16d9e3 0%, #30c7ec 47%, #46aef7 100%)',\r\n      progressBarFullColor: 'gold',\r\n      patch: '#000',\r\n      primary: '#33e',\r\n      sent: 'teal',\r\n      received: '#000',\r\n      messageText: '#fff',\r\n      underwater: '#1277b0',\r\n      border: \"#000\",\r\n      alert: 'red'\r\n    },\r\n    images: {\r\n        avatar: {\r\n          width: 48,\r\n          height: 48,\r\n          borderRadius: 99999,\r\n        },\r\n        background: {\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundRepeat: 'repeat'\r\n          },\r\n      }\r\n  }\r\n\r\n  export const themeRetro = {\r\n    fonts: {\r\n    //   body: 'progbot',\r\n      body: 'system-ui, sans-serif',\r\n      heading: '\"Avenir Next\", sans-serif',\r\n      monospace: 'Menlo, monospace',\r\n      digitag: \"Digitag\",\r\n      DigiDream: \"DIGITALDREAM\",\r\n      led: \"led_real\",\r\n      bot: 'progbot'\r\n    },\r\n    fontSizes: [\r\n      12, 14, 16, 18, 24, 32, 48, 64, 72,\r\n    ],\r\n    colors: {\r\n      text: '#000',\r\n      text2: '#fff',\r\n      text3: 'red',\r\n      text4: 'blue',\r\n      borderColor: '#fff',\r\n      appMainbackground: 'rgb(102, 0, 102)',\r\n      todoEditArea: '#000',\r\n      todoTaskBackground: 'rgba(51, 51, 255, 0.8)',\r\n      todoIdeaBackground: 'rgba(0, 153, 51, 0.8)',\r\n      todoProblemBackground: 'rgba(204, 51, 0, 0.8)',\r\n      todoRecipeBackground: 'rgba(102, 102, 51, 0.8)',\r\n      todoScheduleBackground: 'rgba(153, 0, 204, 0.8)',\r\n      inputBackground: '#000',\r\n      userBackground: 'rgba(255, 255, 0, 0.8)',\r\n      dateSetBackground1: 'rgb(0, 102, 102)',\r\n      buttonsBackground: 'rgb(0, 51, 51)',\r\n      progressBarColor: 'green',\r\n      progressGrad: 'radial-gradient(circle 248px at center, #16d9e3 0%, #30c7ec 47%, #46aef7 100%)',\r\n      progressBarFullColor: 'gold',\r\n      bulbOnColor: 'gold',\r\n      patch: '#000',\r\n      primary: '#33e',\r\n      sent: 'teal',\r\n      received: '#000',\r\n      messageText: '#fff',\r\n      underwater: '#1277b0',\r\n      border: \"#000\",\r\n      alert: 'red'\r\n    },\r\n    images: {\r\n        avatar: {\r\n          width: 48,\r\n          height: 48,\r\n          borderRadius: 99999,\r\n        },\r\n        background: {\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundRepeat: 'repeat'\r\n          },\r\n      }\r\n  }","import { atom, selector } from 'recoil';\r\n\r\n  export const recoilUser = atom({\r\n    key: 'recoilUser', // unique ID (with respect to other atoms/selectors)\r\n    default: '', // default value (aka initial value)\r\n  });\r\n\r\n  export const displayAlertBoxState = atom({\r\n    key: 'displayAlertBoxState', // unique ID (with respect to other atoms/selectors)\r\n    default: 'none', // default value (aka initial value)\r\n  });\r\n\r\n  export const displayLoginBoxState = atom({\r\n    key: 'displayLoginBoxState', // unique ID (with respect to other atoms/selectors)\r\n    default: 'flex', // default value (aka initial value)\r\n  });\r\n\r\n  export const displaySignupBoxState = atom({\r\n    key: 'displaySignupBoxState', // unique ID (with respect to other atoms/selectors)\r\n    default: 'none', // default value (aka initial value)\r\n  });\r\n\r\n  export const loggedUser = selector({\r\n    key: 'charCountState', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const text = get(recoilUser);\r\n  \r\n      return text;\r\n    },\r\n  });\r\n\r\n  export const displayAlertBoxValue = selector({\r\n    key: 'displayAlertBoxValue', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const displayed = get(displayAlertBoxState);\r\n  \r\n      return displayed;\r\n    },\r\n  });\r\n\r\n  export const displayLoginBoxValue = selector({\r\n    key: 'displayLoginBoxValue', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const displayed = get(displayAlertBoxState);\r\n  \r\n      return displayed;\r\n    },\r\n  });\r\n\r\n  export const displaySignupBoxValue = selector({\r\n    key: 'displaySignupBoxValue', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const displayed = get(displayAlertBoxState);\r\n  \r\n      return displayed;\r\n    },\r\n  });","import React from \"react\";\r\nimport { Box } from \"theme-ui\";\r\nimport { boxBorderRadius, itemBoxShadow } from \"../../styles/elements\";\r\nimport { PropsyCompProps } from \"./propsyCompsInterface\";\r\n\r\n\r\nconst PropsyAlertBox = React.memo(({content, margin, display = 'none'}: PropsyCompProps ) => {\r\n\r\n    return (\r\n        <Box\r\n        sx={{  \r\n        display: `${display}`,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: boxBorderRadius,\r\n        backgroundColor: `todoTaskBackground`,\r\n        color: 'todoText',     \r\n        wordBreak: 'break-word',        \r\n        padding: 2,        \r\n        boxShadow: itemBoxShadow,\r\n        transition: '1s',\r\n        position: 'absolute',\r\n        top:'50%',    \r\n        zIndex: 20,\r\n        margin: margin    \r\n    }}       \r\n        >{content}</Box>\r\n    )\r\n    \r\n});\r\n\r\nexport default PropsyAlertBox","import React from \"react\";\r\nimport { Flex, Input, Paragraph } from \"theme-ui\";\r\nimport { btnGradient, btnPrimary, inputGeneral, loginSignupTxt } from \"../../styles/elements\";\r\nimport PropsyBtn from \"./PropsyBtn\";\r\nimport { PropsyCompProps } from \"./propsyCompsInterface\";\r\nimport PropsyFlexBox from \"./PropsyFlexBox\";\r\n\r\n\r\nconst PropsySignLogForm = React.memo(({textHead,\r\n                                       transition,\r\n                                       opacity,\r\n                                       display,\r\n                                       buttonContent,\r\n                                       onSubmit,\r\n                                       onChangeEmail,\r\n                                       onChangePass, \r\n                                       emailInputTxt,\r\n                                       passInputTxt,\r\n                                       margin, \r\n                                       extraContent,\r\n                                       btnAnimation,\r\n                                       btnAnimTime,\r\n                                       tooltipId,\r\n                                       tooltipTxt,\r\n                                       width\r\n                                       }: PropsyCompProps) => {\r\n    return (\r\n        <PropsyFlexBox \r\n        width={width}\r\n        transition={transition}\r\n        opacity={opacity}\r\n        display={display}\r\n        margin={margin}\r\n        content={<>\r\n            <form onSubmit={onSubmit}>\r\n               <Paragraph sx={loginSignupTxt}>{textHead}</Paragraph>\r\n               <Input  sx={inputGeneral}\r\n                       onChange={onChangeEmail}\r\n                       placeholder=\"Email\" \r\n                       {...emailInputTxt} />\r\n               <Input sx={inputGeneral}\r\n                      onChange={onChangePass}\r\n                      placeholder=\"Password\" \r\n                      type=\"password\"\r\n                      {...passInputTxt} />              \r\n             <Flex>\r\n             <PropsyBtn sx={btnPrimary}\r\n                          tooltipTxt={tooltipTxt}\r\n                          tooltipId={tooltipId}\r\n                          type=\"submit\"\r\n                          background={btnGradient}\r\n                          content={buttonContent}\r\n                          onSubmit={onSubmit}\r\n                          animation={btnAnimation}\r\n                          animTime={btnAnimTime}\r\n                          >Sign in</PropsyBtn>\r\n                {extraContent}\r\n             </Flex>\r\n               </form>\r\n         </>} />   \r\n    )\r\n    \r\n});\r\n\r\nexport default PropsySignLogForm;","import { useState } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { iconCloseBtn, iconSignUpBtn } from \"../../content/icons\";\r\n\r\nimport getFirebase from \"../../firebase/firebase\";\r\nimport {  displayLoginBoxState, displaySignupBoxState } from \"../../recoil/recoil\";\r\nimport { btnGradient, clickedBtnAnimShrink } from \"../../styles/elements\";\r\nimport PropsyAlertBox from \"../propsyComps/PropsyAlertBox\";\r\nimport PropsyBtn from \"../propsyComps/PropsyBtn\";\r\nimport PropsySignLogForm from \"../propsyComps/PropsySignLogForm\";\r\nimport { handleButtonAnimation } from \"./SignOutButton\";\r\n\r\nconst SignUpForm = () => {      \r\n\r\n    const [emailValue, setEmailValue] = useState(\"\");\r\n    const [passwordlValue, setPasswordValue] = useState(\"\");\r\n\r\n    const [alertDisplay, setAlertDiaspaly] = useState('none');\r\n    const [alertContent, setAlerContent] = useState(\"\");\r\n\r\n    //all this to recoil  \r\n    const [ animBtn1, setAnimBtn1 ] = useState(\"\");\r\n    const [ animBtn2, setAnimBtn2 ] = useState(\"\");    \r\n\r\n    const setLoginBoxDisplay = useSetRecoilState(displayLoginBoxState);\r\n\r\n    const [SignupBoxDisplay, setSignupBoxDisplay] = useRecoilState(displaySignupBoxState);  \r\n\r\n    const firebaseInstance = getFirebase();\r\n    const email = emailValue;\r\n    const password = passwordlValue;\r\n\r\n    const handleChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmailValue(event.target.value);\r\n      };\r\n\r\n      const handleChangePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(event.target.value);\r\n      };       \r\n      \r\n      const setLoginOn = () => {\r\n        handleButtonAnimation(setAnimBtn2, clickedBtnAnimShrink, 1000);\r\n        setTimeout(() => {\r\n          setLoginBoxDisplay('flex');\r\n          setSignupBoxDisplay('none');\r\n        }, 1000);\r\n      \r\n      };   \r\n\r\n    const signUp = async (event: Event) => {\r\n      event.preventDefault();   \r\n      handleButtonAnimation(setAnimBtn1, clickedBtnAnimShrink, 1000);\r\n      setTimeout(async () => {\r\n        try {\r\n          if (firebaseInstance) {\r\n            const user = await firebaseInstance\r\n              .auth()\r\n              .createUserWithEmailAndPassword(email, password);\r\n              localStorage.setItem('userEmail', email);\r\n              console.log(\"user\", user);        \r\n          }\r\n        } catch (error: string | any) {\r\n          console.log(\"error\", error);\r\n          setAlertDiaspaly('flex');\r\n          setAlerContent(`${error.message}`);\r\n          setTimeout(() => {\r\n            setAlertDiaspaly('none');\r\n          }, 2000);\r\n         \r\n        }\r\n      }, 1000);\r\n  };\r\n\r\n\r\n  return (<>\r\n    <PropsySignLogForm \r\n    tooltipId={'register-new'}\r\n    tooltipTxt={'register new user'}\r\n    display={SignupBoxDisplay}\r\n    textHead={'Sign up'}\r\n    buttonContent={iconSignUpBtn}\r\n    emailInputTxt={emailValue}\r\n    passInputTxt={passwordlValue}\r\n    onChangeEmail={handleChangeEmail}\r\n    onChangePass ={handleChangePassword}\r\n    onSubmit={signUp}\r\n    btnAnimation={animBtn1} \r\n    btnAnimTime={'1s'} \r\n    extraContent={<PropsyBtn type='button'\r\n                             tooltipId={'register-close'}\r\n                             tooltipTxt={'close register window'}\r\n                             content={iconCloseBtn}\r\n                             background={btnGradient}\r\n                             onClick={setLoginOn} \r\n                             animation={animBtn2} \r\n                             animTime={'1s'} \r\n                             />}\r\n                              />\r\n<PropsyAlertBox display={alertDisplay}\r\n                    content={alertContent}\r\n    />\r\n  </>);\r\n};\r\n\r\nexport default SignUpForm;\r\n\r\n\r\n","import { iconCloseBtn, iconSendMailBtn } from \"../../content/icons\";\r\nimport { btnGradient } from \"../../styles/elements\";\r\nimport PropsyAlertBox from \"./PropsyAlertBox\";\r\nimport PropsyBtn from \"./PropsyBtn\";\r\nimport { PropsyCompProps } from \"./propsyCompsInterface\";\r\n\r\n// type SigInFormProps = {\r\n//     todo: Todo;     \r\n//   };   \r\n\r\n // replace that popup with PropsyChoicePopup \r\n const ResetPasswordPopup = ({display, onClick, onClickClose, emailValue, animBtnState1, animBtnState2}: PropsyCompProps) => {\r\n\r\n    return <PropsyAlertBox  display={display} \r\n                            margin={'0 auto'} \r\n                            content={<> \r\n    <PropsyBtn onClick={onClick}\r\n              tooltipId={'reset-password'}\r\n              tooltipTxt={`send reset password request(enter email above): ${emailValue}`}\r\n               content={iconSendMailBtn}\r\n               background={btnGradient}\r\n               animation={animBtnState1} \r\n               animTime={'1s'}  />\r\n      <PropsyBtn content={iconCloseBtn}\r\n       tooltipId={'reset-password-close'}\r\n       tooltipTxt={`close reset password window`}\r\n                 onClick={onClickClose}\r\n                 background={btnGradient} \r\n                 animation={animBtnState2} \r\n                 animTime={'1s'} />\r\n      </>} />\r\n  };\r\n\r\n  export default ResetPasswordPopup;","import firebase from \"firebase\";\r\nimport { useState } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { setTimeout } from \"timers\";\r\n\r\nimport { iconAddUser, iconForgotpassBtn, iconSignInBtn } from \"../../content/icons\";\r\n\r\n// import ParticleEffectButton from 'react-particle-effect-button';\r\n\r\nimport getFirebase from \"../../firebase/firebase\";\r\nimport { displayAlertBoxState, displayLoginBoxState, displaySignupBoxState } from \"../../recoil/recoil\";\r\nimport { btnGradient, clickedBtnAnimShrink } from \"../../styles/elements\";\r\nimport PropsyAlertBox from \"../propsyComps/PropsyAlertBox\";\r\nimport PropsyBtn from \"../propsyComps/PropsyBtn\";\r\n\r\nimport PropsySignLogForm from \"../propsyComps/PropsySignLogForm\";\r\nimport ResetPasswordPopup from \"../propsyComps/ResetPasswordPopup\";\r\nimport { handleButtonAnimation } from \"./SignOutButton\";\r\n\r\n\r\nconst SignInForm = () => {\r\n\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordlValue, setPasswordValue] = useState(\"\");\r\n\r\n  const [ animBtn1, setAnimBtn1 ] = useState(\"\");\r\n  const [ animBtn2, setAnimBtn2 ] = useState(\"\");\r\n  const [ animBtn3, setAnimBtn3 ] = useState(\"\");\r\n  const [ animBtn4, setAnimBtn4 ] = useState(\"\");\r\n  const [ animBtn5, setAnimBtn5 ] = useState(\"\");\r\n  // const [ particleEffect, setParticleEffect ] = useState(false);\r\n\r\n\r\n  const [alertDisplay, setAlertDiaspaly] = useState('none');\r\n  const [alertContent, setAlertContent] = useState(\"\");\r\n\r\n  const [forgotPasswordDisplay, setForgotPasswordDisplay] = useState('none');\r\n  \r\n  const setRecoilAlertBoxDisplay = useSetRecoilState(displayAlertBoxState);\r\n\r\n  const [loginBoxDisplay, setLoginBoxDisplay] = useRecoilState(displayLoginBoxState);\r\n\r\n  const setSignupBoxDisplay = useSetRecoilState(displaySignupBoxState);\r\n  \r\n  const handleEnableDisableSignUp = () => {\r\n    handleButtonAnimation(setAnimBtn2, clickedBtnAnimShrink, 1000);\r\n      setTimeout(() => {\r\n        setRecoilAlertBoxDisplay('flex');    \r\n        setLoginBoxDisplay('none');\r\n        setSignupBoxDisplay('flex'); \r\n      }, 1000);     \r\n  };\r\n  \r\n  const handleChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmailValue(event.target.value);\r\n  };\r\n\r\n  const handleChangePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPasswordValue(event.target.value);\r\n  };  \r\n\r\n  const handleForgotPassword = () => {\r\n    handleButtonAnimation(setAnimBtn3, clickedBtnAnimShrink, 1000);\r\n    setTimeout(() => {\r\n      setForgotPasswordDisplay('flex');\r\n    }, 1000)\r\n  };\r\n\r\n  const handleForgotPasswordClose = () => {\r\n    handleButtonAnimation(setAnimBtn5, clickedBtnAnimShrink, 1000);\r\n    setTimeout(() => {\r\n      setForgotPasswordDisplay('none');\r\n    }, 1000)\r\n   \r\n  };\r\n\r\n  const handleForgotPasswordSend = () => {\r\n    handleButtonAnimation(setAnimBtn4, clickedBtnAnimShrink, 1000);\r\n    setTimeout(() => {\r\n      firebase.auth().sendPasswordResetEmail(emailValue);\r\n      setTimeout(() => {\r\n        setForgotPasswordDisplay('none');\r\n      }, 2000);\r\n    }, 1000)\r\n   \r\n  };\r\n \r\n  const firebaseInstance = getFirebase();\r\n  const email = emailValue;\r\n  const password = passwordlValue;\r\n\r\n  const signIn = async (event: Event) => {\r\n    event.preventDefault();\r\n    handleButtonAnimation(setAnimBtn1, clickedBtnAnimShrink, 1000);  \r\n      try {\r\n        if (firebaseInstance) {\r\n          // setParticleEffect(true);\r\n          await firebaseInstance\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password);\r\n            localStorage.setItem('userEmail', email);          \r\n             \r\n        }\r\n      } catch (error: string | any) {\r\n        // const err: firebase.firestore.FirestoreError | unknown = error;\r\n        console.log(\"error\", error);\r\n        setAlertDiaspaly('flex');\r\n        setAlertContent(`${error.message}`);\r\n        setTimeout(() => {\r\n          setAlertDiaspaly('none');\r\n        }, 2000);\r\n      } \r\n  };\r\n\r\n\r\n  return (<>   \r\n  {/* <ParticleEffectButton color=\"#fe6333\" hidden={particleEffect}> */}\r\n    <PropsySignLogForm\r\n        tooltipId={'login'}\r\n        tooltipTxt={'login'}\r\n        transition={'2s'}\r\n        display={loginBoxDisplay}\r\n        textHead={'Log in'}\r\n        buttonContent={iconSignInBtn}\r\n        emailInputTxt={emailValue}\r\n        passInputTxt={passwordlValue}\r\n        onChangeEmail={handleChangeEmail}\r\n        onChangePass ={handleChangePassword}\r\n        onSubmit={signIn}\r\n        btnAnimation={animBtn1} \r\n        btnAnimTime={'1s'} \r\n        extraContent={<>\r\n        <PropsyBtn background={btnGradient}\r\n                   tooltipId={'register'}\r\n                   tooltipTxt={'open register window'}\r\n                   content={iconAddUser}\r\n                   type={'button'}\r\n                   animation={animBtn2} \r\n                   animTime={'1s'}   \r\n                   onClick={handleEnableDisableSignUp}\r\n        />\r\n        <PropsyBtn background={btnGradient}\r\n                   size={'0.5'}\r\n                   tooltipId={'forgot-password'}\r\n                   tooltipTxt={'forgot password'}\r\n                   content={iconForgotpassBtn}\r\n                   tooltipText={\"forgotPassword\"}\r\n                   type={'button'} \r\n                   animation={animBtn3} \r\n                   animTime={'1s'}  \r\n                   onClick={handleForgotPassword} />\r\n        </>}\r\n    />   \r\n    <PropsyAlertBox display={alertDisplay}\r\n                    content={alertContent}\r\n    />   \r\n    <ResetPasswordPopup display={forgotPasswordDisplay} \r\n    onClick={handleForgotPasswordSend}\r\n    onClickClose={handleForgotPasswordClose}\r\n    animBtnState1={animBtn4}\r\n    animBtnState2={animBtn5}\r\n    emailValue={emailValue}\r\n     />\r\n     {/* </ParticleEffectButton> */}\r\n  </>);\r\n};\r\n\r\nexport default SignInForm;\r\n\r\n\r\n","import Particles from 'react-particles-js';\r\n\r\n\r\nconst ParticleBackground = () => { \r\n    \r\n\r\n    return (\r\n        <Particles style={{position: 'absolute'}}\r\n        params={{\r\n         \"particles\": {\r\n             \"number\": {\r\n                 \"value\": 60,\r\n                 \"density\": {\r\n                     \"enable\": false\r\n                 }\r\n             },\r\n             \"size\": {\r\n                 \"value\": 12,\r\n                 \"random\": true,\r\n                 \"anim\": {\r\n                     \"speed\": 2,\r\n                     \"size_min\": 0.3\r\n                 }\r\n             },\r\n             \"line_linked\": {\r\n                 \"enable\": false\r\n             },\r\n             \"move\": {\r\n                 \"random\": true,\r\n                 \"speed\": 1,\r\n                 \"direction\": \"top\",\r\n                 \"out_mode\": \"out\"\r\n             }\r\n         },\r\n         \"interactivity\": {\r\n             \"events\": {\r\n                 \"onhover\": {\r\n                     \"enable\": true,\r\n                     \"mode\": \"bubble\"\r\n                 },\r\n                 \"onclick\": {\r\n                     \"enable\": true,\r\n                     \"mode\": \"repulse\"\r\n                 }\r\n             },\r\n             \"modes\": {\r\n                 \"bubble\": {\r\n                     \"distance\": 250,\r\n                     \"duration\": 2,\r\n                     \"size\": 0,\r\n                     \"opacity\": 0\r\n                 },\r\n                 \"repulse\": {\r\n                     \"distance\": 400,\r\n                     \"duration\": 4\r\n                 }\r\n             }\r\n         }\r\n     }} />\r\n        )  \r\n};\r\n\r\nexport default ParticleBackground;","/** @jsxImportSource theme-ui */\r\nimport './App.css';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { txtTitleBigEng, txtTitleSmallEng } from './content/content';\r\n\r\nimport { Header } from 'semantic-ui-react';\r\n\r\nimport TitleBanner from './components/propsyComps/TitleBanner';\r\n\r\nimport { appContainer,\r\n  bigTitleTxt,\r\n  btnGradient,\r\n  clickedBtnAnimShrink,\r\n  headerContainer, \r\n  signInFormContainer, \r\n  signLogContainer, \r\n  smallTitleTxt, \r\n  waveEffectContainer } from './styles/elements';\r\n\r\nimport { RecoilRoot } from 'recoil';\r\n\r\nimport TodoList from './components/TodoList';\r\n\r\nimport { Box, Flex, ThemeProvider } from 'theme-ui';\r\nimport { theme, themeRetro } from './styles/theme';\r\n\r\nimport ScrollText from 'react-scroll-text';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport getFirebase from './firebase/firebase';\r\nimport SignUpForm from './components/UserAuth/SignUpForm';\r\nimport SignInForm from './components/UserAuth/SignInForm';\r\nimport PropsyBtn from './components/propsyComps/PropsyBtn';\r\nimport { iconRetroModeBtn } from './content/icons';\r\nimport { handleButtonAnimation } from './components/UserAuth/SignOutButton';\r\nimport React from 'react';\r\nimport { User } from 'firebase';\r\nimport TypistText from './components/propsyComps/TypistText';\r\nimport ParticleBackground from './components/propsyComps/ParticleBackground';\r\nrequire('firebase/auth');\r\n\r\nexport const AuthContext = React.createContext<firebase.User | null>(null);\r\n\r\nfunction App() {\r\n\r\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null);\r\n\r\n  const [themeUI, setThemeUI] = useState(theme);\r\n  \r\n  const [animBtn1, setAnimBtn1] = useState(\"\");\r\n\r\n  // will need local storage for theme info preservation\r\n  // const [themeBtnColor, setThemeBtnColor] = useState(() =>{ \r\n  //   if (themeUI.fonts.body === 'progbot') return 'bulbOnColor';\r\n  // else if(themeUI.fonts.body !== 'progbot') return 'text2';});\r\n  // console.log(themeBtnColor);\r\n\r\n  // useEffect(() => {\r\n  //   if (themeUI.fonts.body === 'progbot') setThemeBtnColor('bulbOnColor');\r\n  //   else if(themeUI.fonts.body !== 'progbot') setThemeBtnColor('text2');    \r\n  // },[])\r\n  \r\n  useEffect(() => {\r\n    const firebase = getFirebase();\r\n\r\n    if (firebase) {\r\n      firebase.auth().onAuthStateChanged((authUser: { email: React.SetStateAction<User | null>; }) => {\r\n        if (authUser) {\r\n          setCurrentUser(authUser.email);\r\n        } else {\r\n          setCurrentUser(null);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleThemeSwitchClick = () => {\r\n    handleButtonAnimation(setAnimBtn1, clickedBtnAnimShrink, 1000);   \r\n    if (themeUI === theme) {\r\n      setThemeUI(themeRetro);      \r\n    }\r\n    else if (themeUI === themeRetro) {\r\n      setThemeUI(theme);\r\n    }\r\n  };\r\n\r\n\r\n  return (  \r\n      <ThemeProvider theme={themeUI}>    \r\n      <RecoilRoot>\r\n      <Box sx={appContainer} >\r\n      <ParticleBackground />\r\n        <TitleBanner />\r\n        <PropsyBtn \r\n          onClick={handleThemeSwitchClick}\r\n          tooltipId={'set-theme'}\r\n          tooltipTxt={'enable/disable retro mode'}\r\n          background={btnGradient}\r\n          content={iconRetroModeBtn}\r\n          position={\"absolute\"}\r\n          top={10}\r\n          color={'text2'}\r\n          animation={animBtn1} \r\n          animTime={'1s'} \r\n        />\r\n        <Header sx={headerContainer} >    \r\n          <Box sx={{margin: 'auto'}}>    \r\n              {currentUser ? <TodoList /> : <>\r\n                  <Flex sx={signInFormContainer}>                \r\n                    <Flex sx={signLogContainer}>\r\n                      <SignUpForm />\r\n                      <SignInForm /> \r\n                    </Flex>                                   \r\n                </Flex>\r\n                <Box sx={waveEffectContainer}>                 \r\n                </Box>    \r\n                <TypistText typistText={txtTitleSmallEng} typistStyle={smallTitleTxt} />                \r\n                <ScrollText sx={bigTitleTxt}>{txtTitleBigEng}</ScrollText>  \r\n          </>}\r\n          </Box>\r\n        </Header>\r\n      </Box>\r\n      </RecoilRoot>\r\n      </ThemeProvider>  \r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/Digitag.f220b4f7.ttf\";","export default __webpack_public_path__ + \"static/media/DIGITALDREAM.a73dceea.ttf\";","export default __webpack_public_path__ + \"static/media/progbot.0ffbcb55.ttf\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './assets/fonts/Digitag.ttf';\r\nimport './assets/fonts/DIGITALDREAM.ttf';\r\nimport './assets/fonts/progbot.ttf';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}