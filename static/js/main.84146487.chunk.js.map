{"version":3,"sources":["styles/elements.tsx","firebase/firebase.tsx","content/icons.tsx","components/propsyComps/PropsyBtn.tsx","components/propsyComps/PropsyFlexBox.tsx","components/propsyComps/PropsyInput.tsx","components/TodoItem.tsx","components/UserAuth/SignOutButton.tsx","components/TodoList.tsx","content/content.tsx","styles/theme.tsx","recoil/recoil.tsx","components/propsyComps/PropsyAlertBox.tsx","components/propsyComps/PropsySignLogForm.tsx","components/UserAuth/SignUpForm.tsx","components/UserAuth/SignInForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["btnBorderRadius","inputBorderRadius","boxBorderRadius","btnGradient","btnCheckedGradient","txtShadow","itemBoxShadow","appContainer","backgroundColor","axWidth","minHeight","signInFormContainer","justifyContent","alignItems","flexDirection","alignSelf","signLogContainer","position","titleContainer","textShadow","color","paddingTop","marginBottom","fontSize","flexWrap","headerContainer","display","justtifyContent","textAlign","margin","todosContainer","opacity","waveEffectContainer","width","top","left","maxWidth","zIndex","todoFiltersContainer","borderRadius","wordBreak","padding","marginTop","boxShadow","todoStatusContainer","addTaskContainer","itemsBtnsContainer","border","borderColor","btnContainer","displayBar","wordWrap","fontFamily","btnPrimary","backgroundImage","cursor","textTransform","transition","backgroundSize","backgroundPosition","textDecoration","btnScrollUp","right","bottom","addTodoForm","inputGeneral","inputTodoAdd","inputTodoSearch","inputTodoEdit","paddingLeft","optionBox","bigTitleTxt","alignText","userWelcomeTxt","whiteSpace","smallTitleTxt","fontWeight","copyrightTxt","loginSignupTxt","userImg","height","userName","overflow","clickedBtnAnimJump","keyframes","clickedBtnAnimShrink","require","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","app","initializeApp","instance","auth","firestore","getFirebase","window","iconAddTaskBtn","iconCompleteTaskBtn","iconEditTaskBtn","iconDeleteTaskBtn","iconSignInBtn","iconSignUpBtn","iconAddUser","iconSignOutBtn","iconCloseBtn","iconForgotpassBtn","iconSendMailBtn","iconDateBtn","PropsyBtn","React","memo","animTime","background","animation","onClick","content","isDisabled","type","tooltipId","tooltipTxt","size","disabled","sx","transform","style","id","place","effect","PropsyFlexBox","PropsyInput","text","onChange","placeholder","value","TodoItem","props","useState","todoTxt","setTodoTxt","deadline","setDeadline","animBtn1","setAnimBtn1","animBtn2","setAnimBtn2","animBtn3","setAnimBtn3","opacity1","setOpacity1","taskTypeColor","setTaskTypeColor","todo","isCompleted","btnCompletedColor","setBtnCompletedColor","photoURL","useEffect","updateFirestoreData","collection","item","data","keyValue","doc","update","FieldValue","serverTimestamp","userNameParsedFunc","useCallback","match","onUpdate","setTimeout","onComplete","onDelete","delete","handleTaskTypeChange","e","target","handleSetDeadline","handleDeadline","console","log","src","defaultValue","marginLeft","SignOutButton","firebaseInstance","signOut","a","TodoList","dummy","useRef","todosRef","query","orderBy","limit","useCollectionData","idField","todos","formValue","setFormValue","searchByTxt","setSearchByTxt","filterCompleted","setFilterCompleted","userEmail","localStorage","getItem","sendTodo","preventDefault","currentUser","uid","add","assignedTo","assignedBy","createdAt","updatedAt","completedAt","current","scrollIntoView","behavior","status","filter","precision","alltodos","completed","parseFloat","toFixed","getPrecentCompleted","searchBy","TodoJsx","keyId","searchIt","task","searchItTxt","includes","map","renderFiltered","ref","className","onSubmit","distance","breakpoint","speed","icon","fonts","body","heading","monospace","fontSizes","colors","text2","text3","text4","appMainbackground","todoTaskBackground","todoIdeaBackground","todoProblemBackground","todoRecipeBackground","todoScheduleBackground","inputBackground","userBackground","dateSetBackground1","buttonsBackground","patch","primary","sent","received","messageText","underwater","images","avatar","backgroundRepeat","recoilUser","atom","key","default","displayAlertBoxState","displayLoginBoxState","displaySignupBoxState","PropsyAlertBox","selector","get","PropsySignLogForm","textHead","buttonContent","onChangeEmail","onChangePass","emailInputTxt","passInputTxt","extraContent","animationBtn","SignUpForm","emailValue","setEmailValue","passwordlValue","setPasswordValue","alertDisplay","setAlertDiaspaly","alertContent","setAlerContent","setLoginBoxDisplay","useSetRecoilState","useRecoilState","SignupBoxDisplay","setSignupBoxDisplay","email","password","signUp","event","createUserWithEmailAndPassword","user","setItem","message","SignInForm","forgotPasswordDisplay","setForgotPasswordDisplay","setRecoilAlertBoxDisplay","loginBoxDisplay","signIn","signInWithEmailAndPassword","ResetPasswordPopup","onClickClose","tooltipText","sendPasswordResetEmail","App","setCurrentUser","onAuthStateChanged","authUser","theme","Header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84146487.chunk.js","sourcesContent":["  // unified styles control center, fused with theme-ui\r\n  import background from '../assets/background.png'\r\n  import { keyframes } from '@emotion/react'  \r\n\r\n  \r\n  type Styles = {\r\n    [key: string]: any;\r\n  };\r\n\r\n  //common styles\r\n  export const btnBorderRadius: string = '50%';\r\n  export const inputBorderRadius: string = '10px';\r\n  export const boxBorderRadius: string = '10px';\r\n  export const btnGradient: string = 'linear-gradient(to right, #232526 0%, #414345  51%, #232526  100%)';\r\n  export const btnCheckedGradient: string = 'linear-gradient(to right, #50C9C3 0%, #96DEDA  51%, #50C9C3  100%)';\r\n  export const btnAlertgradient: string = 'linear-gradient(to right, #e52d27 0%, #b31217  51%, #e52d27  100%)}';\r\n  export const txtShadow: string = '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000';\r\n  export const itemBoxShadow: string = '24px 33px 46px 3px rgba(0,0,0,0.92)';   \r\n   \r\n   \r\n  //containers\r\n  export const appContainer: Styles = {\r\n    // background: `url(${background})`,\r\n    backgroundColor: 'appMainbackground',\r\n    // backgroundBlendMode:'multiply,multiply',\r\n    axWidth: '100vw',\r\n    minHeight: '100vh'    \r\n  };\r\n\r\n  export const signInContainer: Styles = {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    backgroundColor: 'transparent'\r\n  };\r\n\r\n  export const signInFormContainer: Styles = {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    backgroundColor: 'transparent',\r\n    alignSelf: 'center'\r\n  };\r\n\r\n  export const signLogContainer: Styles = {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    \"@media (max-width: 780px)\": { \r\n      flexDirection: 'column',\r\n      position: 'relative'            \r\n   }\r\n  };\r\n\r\n  export const titleContainer: Styles = {\r\n    textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000',\r\n    color: 'text2',\r\n    paddingTop: 60,\r\n    marginBottom: 20,\r\n    fontSize: 50,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap'      \r\n    };\r\n\r\n  export const headerContainer: Styles = {\r\n    display: 'flex',\r\n    justtifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    margin: 'auto'\r\n  };\r\n\r\n  export const todosContainer: Styles = {          \r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: '2',\r\n    opacity: '0.85',     \r\n  };\r\n\r\n  export const waveEffectContainer: Styles = {  \r\n    width: '100vw',\r\n    position: 'absolute',\r\n    top: 220,\r\n    left: 0,\r\n    maxWidth: '100%',\r\n    zIndex: 0\r\n  };\r\n\r\n  export const waveEffectContainer2: Styles = {  \r\n    width: '100vw',\r\n    position: 'absolute',\r\n    top: 200,\r\n    left: 0,\r\n    maxWidth: '100%',\r\n    zIndex: 0\r\n  };\r\n\r\n  export const todoFiltersContainer: Styles = {  \r\n    margin: 'auto',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: `todoTaskBackground`,\r\n    color: 'todoText',\r\n    width: '80vw',\r\n    wordBreak: 'break-word',\r\n    position: 'relative',    \r\n    padding: 2, \r\n    marginTop: 50,    \r\n    minHeight: 100,\r\n    boxShadow: itemBoxShadow   \r\n  };\r\n\r\n  export const todoStatusContainer: Styles = {  \r\n    flexDirection: 'column',\r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: `todoTaskBackground`,\r\n    color: 'todoText',\r\n    width: '80vw',\r\n    wordBreak: 'break-word',\r\n    position: 'relative',   \r\n    margin: 'auto', \r\n    padding: 2, \r\n    marginTop: 50,\r\n    marginBottom: 80,\r\n    minHeight: 100,\r\n    boxShadow: itemBoxShadow   \r\n  };\r\n\r\n  export const addTaskContainer: Styles = {  \r\n    position: 'relative'     \r\n  };\r\n\r\n  export const itemsBtnsContainer: Styles = {      \r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    flexWrap: 'wrap', \r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: 'buttonsBackground' ,\r\n    border:'1px solid',\r\n    borderColor: 'borderColor'\r\n  };\r\n\r\n  export const todoItemContainer: Styles = {\r\n    margin: 'auto', \r\n    flexDirection: 'column',\r\n    borderRadius: boxBorderRadius,\r\n    backgroundColor: `todoTaskbackground`,\r\n    color: 'todoText',\r\n    width: '100%',\r\n    wordBreak: 'break-word',\r\n    position: 'relative',    \r\n    padding: 2, \r\n    marginTop: 50,\r\n    marginBottom: 80,\r\n    minHeight: 100,\r\n    boxShadow: itemBoxShadow\r\n  };\r\n\r\n  export const btnContainer: Styles = {\r\n    margin: '40px 0px'\r\n  };\r\n\r\n  export const displayBar: Styles = {    \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,  \r\n    marginTop: 1,\r\n    padding: 2     \r\n  };\r\n\r\n// buttons\r\nexport const btnPrimary: Styles = {\r\n    display: 'flex',\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    margin: '10px',\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'white',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: btnBorderRadius,\r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   }\r\n  };\r\n\r\n  export const btnScrollUp: Styles = {\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'white',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: '50%',\r\n    position: 'fixed',\r\n    right: 8,\r\n    bottom: 65,      \r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   }\r\n  };\r\n\r\n  export const btnAddTask: Styles = {\r\n    position: 'fixed',\r\n    bottom: 115,\r\n    right: 0,\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    padding: '15px',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'text2',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: btnBorderRadius,      \r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   },\r\n       \"@media (max-width: 780px)\": { \r\n      bottom: 1,\r\n      opacity: 0.9              \r\n   }\r\n  };\r\n\r\n  export const btnLogOut: Styles = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    backgroundImage: btnGradient,\r\n    cursor: 'pointer',\r\n    margin: '10px',\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    textTransform: 'uppercase',\r\n    transition: '0.5s',\r\n    backgroundSize: '200% auto',\r\n    color: 'white',            \r\n    boxShadow: '0 0 20px #eee',\r\n    borderRadius: btnBorderRadius,      \r\n    '&:hover, &:focus': {  \r\n      backgroundPosition: 'right center', \r\n      color: '#fff',\r\n      textDecoration: 'none'\r\n   }\r\n  };\r\n\r\n// forms\r\n  export const addTodoForm: Styles = {\r\n    display: 'flex',  \r\n    justifyContent: 'center',\r\n    alignItems: 'center',   \r\n    marginTop: '3',        \r\n    position: 'fixed',\r\n    right: 0,\r\n    bottom: 0   \r\n  };\r\n\r\n  export const inputGeneral: Styles = {    \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n    margin: 0,\r\n    marginTop: 2,\r\n    padding: 2,\r\n    width: '100%',\r\n    alignSelf: 'center'\r\n  };\r\n\r\n  export const inputTodoAdd: Styles = {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    right: 0,\r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n  };\r\n\r\n  export const inputTodoSearch: Styles = {    \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n    margin: 0\r\n  };\r\n\r\n  export const inputTodoEdit: Styles = { \r\n    fontFamily: 'body', \r\n    wordWrap: 'break-word',\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    maxWidth: '100%',\r\n    paddingTop: 20,\r\n    paddingLeft: 20,\r\n    \"@media (max-width: 780px)\": { \r\n      marginTop: 20,\r\n      marginBottom: 30            \r\n   }\r\n  } \r\n\r\n  export const optionBox: Styles = {    \r\n    wordWrap: 'wrap',\r\n    fontFamily: 'body',\r\n    backgroundColor: 'inputBackground',\r\n    color: 'text2',   \r\n    borderRadius: inputBorderRadius,\r\n    margin: '0 auto' ,\r\n    alignSelf: 'center',\r\n    \"@media (max-width: 780px)\": { \r\n     fontSize: 'small',              \r\n   }\r\n  };\r\n\r\n  //text\r\n  export const bigTitleTxt: Styles = {\r\n    alignText: 'center',\r\n    fontSize: [20, 14, 16, 20],\r\n    // maxWidth: '80vw',\r\n    // whiteSpace: 'pre-wrap',\r\n    // wordBreak: 'break-word',\r\n    textShadow: txtShadow,\r\n    color: 'text2',    \r\n    padding: 2\r\n    };\r\n\r\n    export const userWelcomeTxt: Styles = {\r\n      alignSelf: 'center',\r\n      fontSize: [12, 14, 16, 20],\r\n      maxWidth: '100vw',\r\n      whiteSpace: 'pre-wrap',\r\n      wordBreak: 'break-word',\r\n      textShadow: txtShadow,\r\n      color: 'text2',\r\n      marginTop: 40,\r\n      marginBottom: 40,\r\n      };\r\n\r\n  export const smallTitleTxt: Styles = {\r\n    width: '100%',\r\n    color: 'text2',\r\n    fontWeight: '600',\r\n    textShadow: txtShadow,  \r\n    marginTop: '40px',    \r\n    padding: 2\r\n    };\r\n\r\n    export const copyrightTxt: Styles = {\r\n      width: '100%',\r\n      color: 'text2',\r\n      // alignSelf: 'center',\r\n      fontSize: 1,\r\n      textAlign: 'center',\r\n      textShadow: txtShadow,  \r\n      // marginTop: '20px',    \r\n      padding: 1\r\n      };\r\n\r\n    export const loginSignupTxt: Styles = {\r\n      width: '100%',\r\n      color: 'text2',\r\n      fontWeight: '600',\r\n      textShadow: txtShadow,\r\n      marginTop: 10,\r\n      marginBottom: 10 \r\n      };\r\n\r\n// avatar and user details \r\n  export const userImg: Styles = {\r\n    borderRadius: '50%',\r\n    width: '40px',\r\n    height: '40px',\r\n    position: 'absolute',\r\n    left: '-16px',\r\n    top: '-20px'\r\n  };\r\n\r\n  export const userName: Styles = {\r\n    borderRadius: boxBorderRadius,\r\n    width: '200px',\r\n    maxWidth: '240px',\r\n    overflow: 'hidden',\r\n    padding: 1,\r\n    position: 'absolute',\r\n    left: '40px',\r\n    top: '-20px',\r\n    backgroundColor: 'userBackground'\r\n  };\r\n\r\n// animations\r\nexport const clickedBtnAnimJump = keyframes`\r\nfrom, 20%, 53%, 80%, to {\r\n  transform: translate3d(0,0,0);\r\n}\r\n\r\n40%, 43% {\r\n  transform: translate3d(0, -30px, 0);\r\n}\r\n\r\n70% {\r\n  transform: translate3d(0, -15px, 0);\r\n}\r\n\r\n90% {\r\n  transform: translate3d(0,-4px,0);\r\n}\r\n` ;\r\n\r\nexport const clickedBtnAnimShrink = keyframes`\r\nfrom {\r\n  transform: scale(1);\r\n}\r\nto {\r\n  transform: scale(0);\r\n}\r\n` ;\r\n\r\n ","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nrequire('firebase/auth');\r\n\r\ntype FireConfig = {\r\n    [key: string]: string;\r\n  };\r\n\r\nexport const config: FireConfig = {\r\n    apiKey: \"AIzaSyDNbdVmZVmzNzEWw_eqHT6jMLeAa788Rgk\",\r\n    authDomain: \"eazzy-todo.firebaseapp.com\",\r\n    projectId: \"eazzy-todo\",\r\n    storageBucket: \"eazzy-todo.appspot.com\",\r\n    messagingSenderId: \"461379999354\",\r\n    appId: \"1:461379999354:web:0b5aad7eaa090b4fb34dc3\",\r\n    measurementId: \"G-8M0LZN0HLX\"\r\n    };\r\n\r\n!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();    \r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();  \r\n\r\nlet instance: any;\r\n\r\nexport default function getFirebase() {\r\n  if (typeof window !== \"undefined\") {\r\n    if (instance) return instance;\r\n    if (!firebase.apps.length) {\r\n        instance = firebase.initializeApp(config);\r\n     }else {\r\n        instance = firebase.app(); \r\n     }\r\n    return instance;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// if (!firebase.apps.length) {\r\n//     instance = firebase.initializeApp(config);\r\n//  }else {\r\n//     instance = firebase.app(); // if already initialized, use that one\r\n//  }\r\n\r\n","import { AiOutlineAppstoreAdd, AiOutlineClose, AiOutlineDelete, AiOutlinePlus } from 'react-icons/ai';\r\nimport { FaFlagCheckered } from 'react-icons/fa';\r\nimport { MdSystemUpdateAlt } from 'react-icons/md';\r\nimport { BiLogOutCircle, BiLogInCircle, BiUserPlus } from 'react-icons/bi';\r\nimport { RiLockPasswordLine, RiMailSendLine } from 'react-icons/ri';\r\nimport { CgCalendarDates } from 'react-icons/cg';\r\n\r\n\r\n\r\n\r\nexport const iconAddTaskBtn: JSX.Element = <AiOutlineAppstoreAdd />;\r\n\r\nexport const iconCompleteTaskBtn: JSX.Element = <FaFlagCheckered />;\r\n\r\nexport const iconEditTaskBtn: JSX.Element = <MdSystemUpdateAlt />;\r\n\r\nexport const iconDeleteTaskBtn: JSX.Element = <AiOutlineDelete />;\r\n\r\nexport const iconSignInBtn: JSX.Element = <BiLogInCircle />;\r\n\r\nexport const iconSignUpBtn: JSX.Element = <BiUserPlus />;\r\n\r\nexport const iconAddUser: JSX.Element = <AiOutlinePlus />;\r\n\r\nexport const iconSignOutBtn: JSX.Element = <BiLogOutCircle />;\r\n\r\nexport const iconCloseBtn: JSX.Element = <AiOutlineClose />;\r\n\r\nexport const iconForgotpassBtn: JSX.Element = <RiLockPasswordLine />;\r\n\r\nexport const iconSendMailBtn: JSX.Element = <RiMailSendLine />;\r\n\r\nexport const iconDateBtn: JSX.Element = <CgCalendarDates />;\r\n\r\n","import React from \"react\";\r\nimport { Button } from \"theme-ui\";\r\nimport { btnBorderRadius } from \"../../styles/elements\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst PropsyBtn = React.memo(({animTime,\r\n                               background,\r\n                               animation, \r\n                               onClick, \r\n                               content, \r\n                               isDisabled, \r\n                               opacity, \r\n                               transition,\r\n                               type,\r\n                               display = 'flex',\r\n                               borderRadius = btnBorderRadius,\r\n                               tooltipId,\r\n                               tooltipTxt,\r\n                               size = '1',\r\n                               position,\r\n                               top,\r\n                               right,\r\n                               fontSize = '[16, 20]',\r\n                               margin = '10px'\r\n                              }: any ) => {                      \r\n                               \r\n\r\n    return (<>\r\n        <Button disabled={isDisabled} \r\n                type={type}                \r\n        sx={{\r\n          transform: `scale(${size})`,\r\n          backgroundImage: `${background}`,\r\n          display: display,\r\n          fontSize: fontSize,\r\n          cursor: 'pointer',\r\n          margin: margin,\r\n          padding: '15px',\r\n          textAlign: 'center',          \r\n          transition: `${transition}`,\r\n          backgroundSize: '200% auto',\r\n          color: 'white',            \r\n          boxShadow: '0 0 20px #eee',\r\n          borderRadius: borderRadius,\r\n          animation: `${animation} ${animTime} ease 1`,\r\n          opacity: `${opacity}`,\r\n          position: position,\r\n          top: top,\r\n          right: right,\r\n          '&:hover, &:focus': {  \r\n            backgroundPosition: 'right center', \r\n            color: '#fff',\r\n            textDecoration: 'none'\r\n         }\r\n        }}\r\n          onClick={onClick}\r\n        >{<div style={{display: 'flex'}} data-tip data-for={tooltipId}>{content}</div>}</Button>\r\n        <ReactTooltip id={tooltipId} place=\"bottom\" effect=\"solid\">\r\n       {tooltipTxt}\r\n      </ReactTooltip>\r\n    </>)    \r\n});\r\n\r\nexport default PropsyBtn ","import React from \"react\";\r\nimport { Box } from \"theme-ui\";\r\nimport { boxBorderRadius, itemBoxShadow } from \"../../styles/elements\";\r\n\r\n\r\nconst PropsyFlexBox = React.memo(({display = 'flex',\r\n                                   margin,\r\n                                   marginTop = 50,\r\n                                   marginBottom = 80,\r\n                                   width, \r\n                                   animation, \r\n                                   transition, \r\n                                   onClick, \r\n                                   content, \r\n                                   opacity = 0.8,\r\n                                   backgroundColor = 'todoTaskBackground' \r\n                                }: any) => {\r\n\r\n    return (\r\n        <Box \r\n        sx={{\r\n            flexDirection: 'column',\r\n            display: `${display}`,\r\n            borderRadius: boxBorderRadius,\r\n            backgroundColor: `${backgroundColor}`,\r\n            color: 'todoText',\r\n            width: `${width}`,\r\n            wordBreak: 'break-word',\r\n            position: 'relative',             \r\n            padding: 2, \r\n            margin: `${margin}`,\r\n            marginTop: `${marginTop}`,\r\n            marginBottom: `${marginBottom}`,\r\n            minHeight: 100,\r\n            boxShadow: itemBoxShadow,\r\n            opacity: `${opacity}`,\r\n            animation: `${animation}`,\r\n            transition: `${transition}`, \r\n                }}\r\n          onClick={onClick}\r\n        >{content}</Box>\r\n    )    \r\n});\r\n\r\nexport default PropsyFlexBox;","import React from \"react\";\r\nimport { Input } from \"theme-ui\";\r\nimport { inputBorderRadius } from \"../../styles/elements\";\r\n\r\n\r\nconst PropsyInput = React.memo(({text,\r\n                                 onChange,\r\n                                 display,\r\n                                 type,\r\n                                 marginTop =  0,\r\n                                 width = '100%',\r\n                                 placeholder=\"...\",\r\n                                 value\r\n                                       }: any) => {\r\n    return (\r\n               <Input type={type}                     \r\n                sx={{\r\n                    display: `${display}`,\r\n                    wordWrap: 'wrap',\r\n                    fontFamily: 'body',\r\n                    backgroundColor: 'inputBackground',\r\n                    color: 'text2',   \r\n                    borderRadius: inputBorderRadius,\r\n                    margin: 0,\r\n                    marginTop: marginTop,\r\n                    padding: 2,\r\n                    width: `${width}`,\r\n                    alignSelf: 'center',\r\n                    \"@media (max-width: 780px)\": { \r\n                        fontSize: \"12px\",\r\n                        width: '103px'             \r\n                      }\r\n                  //   WebkitAppearance: 'none'\r\n            }} onChange={onChange} placeholder={placeholder}{...text} value={value} />\r\n)});\r\n\r\nexport default PropsyInput;","/** @jsxImportSource theme-ui */\r\nimport { useState, useCallback, useEffect } from 'react';\r\n\r\nimport { Image, Textarea, Paragraph, Select, Flex, Box } from 'theme-ui'; \r\n\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { btnGradient,        \r\n         btnCheckedGradient,\r\n         clickedBtnAnimJump,         \r\n         inputTodoEdit,\r\n         itemsBtnsContainer,         \r\n         userImg, \r\n         userName,\r\n         optionBox,\r\n         boxBorderRadius,\r\n         clickedBtnAnimShrink} from '../styles/elements';\r\nimport { firestore } from '../firebase/firebase';\r\nimport { iconCompleteTaskBtn, iconDateBtn,  iconDeleteTaskBtn, iconEditTaskBtn } from '../content/icons';\r\nimport PropsyBtn from './propsyComps/PropsyBtn';\r\nimport PropsyFlexBox from './propsyComps/PropsyFlexBox';\r\nimport firebase from 'firebase';\r\nimport PropsyInput from './propsyComps/PropsyInput';\r\nrequire('firebase/auth');  \r\n\r\ntype AppProps = {\r\n  todo: any;     \r\n}; \r\n\r\nfunction TodoItem(props: AppProps) {  \r\n    const [ todoTxt, setTodoTxt ] = useState(\"\");\r\n    const [ deadline, setDeadline ] = useState(\"\");\r\n\r\n    const [ animBtn1, setAnimBtn1 ] = useState(\"\");\r\n    const [ animBtn2, setAnimBtn2 ] = useState(\"\");\r\n    const [ animBtn3, setAnimBtn3 ] = useState(\"\");\r\n\r\n    const [ opacity1, setOpacity1 ] = useState(1);\r\n\r\n    const [ taskTypeColor, setTaskTypeColor ] = useState(\"todoTaskBackground\");\r\n\r\n    const [ btnCompletedColor, setBtnCompletedColor ] = useState(() => {\r\n      if (props.todo.isCompleted === true) {\r\n        return btnCheckedGradient;\r\n      }\r\n      else {\r\n        return btnGradient;\r\n      }\r\n    });    \r\n\r\n    const {  photoURL }: any = props.todo;    \r\n\r\n    useEffect(() => {\r\n      if (props.todo.type === \"Task\") {\r\n        setTaskTypeColor(\"todoTaskBackground\"); \r\n      }\r\n      else if (props.todo.type === \"Idea\") {\r\n        setTaskTypeColor(\"todoIdeaBackground\"); \r\n      }\r\n      else if (props.todo.type === \"Problem\") {\r\n        setTaskTypeColor(\"todoProblemBackground\"); \r\n      }\r\n      else if (props.todo.type === \"Recipe\") {\r\n        setTaskTypeColor(\"todoRecipeBackground\");\r\n      }\r\n      else if (props.todo.type === \"Schedule\") {\r\n        setTaskTypeColor(\"todoScheduleBackground\");        \r\n      } \r\n      setTodoTxt(props.todo.text);\r\n    }, []);\r\n\r\n    const updateFirestoreData = (collection: string, item: any, data: any, keyValue: any) => {\r\n      firestore.collection(collection).doc(item).update({[data]: keyValue,\r\n        updatedAt: firebase.firestore.FieldValue.serverTimestamp()\r\n      });\r\n    };\r\n\r\n    const userNameParsedFunc = useCallback(() => {\r\n      const userNameParsed = props.todo.userName.match(/^(.+)@/)[1];\r\n      return userNameParsed;\r\n    },[props]);\r\n    \r\n    const onUpdate = useCallback(\r\n      () => {\r\n          updateFirestoreData('todos', props.todo.id, 'text', todoTxt);       \r\n        setAnimBtn1(clickedBtnAnimJump);\r\n        setTimeout(() => {\r\n          setAnimBtn1(\"\");\r\n        }, 1000);\r\n      },\r\n      [todoTxt],\r\n    );  \r\n\r\n    const onComplete = useCallback(\r\n      () => {\r\n        if (props.todo.isCompleted === false) {\r\n          updateFirestoreData('todos', props.todo.id, 'isCompleted', true);           \r\n          setBtnCompletedColor(btnCheckedGradient);\r\n        }        \r\n        else if (props.todo.isCompleted === true){\r\n          updateFirestoreData('todos', props.todo.id, 'isCompleted', false);\r\n          setBtnCompletedColor(btnGradient);\r\n           }  \r\n      },\r\n      [props],\r\n    );\r\n    \r\n    const onDelete = useCallback(\r\n      () => {\r\n        setAnimBtn2(clickedBtnAnimShrink);\r\n        setTimeout(() => {\r\n          setAnimBtn2(\"\");\r\n        }, 1000);\r\n        setOpacity1(0);\r\n        setTimeout(() => {\r\n          firestore.collection('todos').doc(props.todo.id).delete();   \r\n        }, 2000);\r\n      },\r\n      [props],\r\n    );  \r\n  \r\n    const handleTaskTypeChange = useCallback((e: any) => {\r\n      if (e.target.value === \"Task\") {\r\n        setTaskTypeColor(\"todoTaskBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Task\");       \r\n      }\r\n      else if (e.target.value === \"Idea\") {\r\n        setTaskTypeColor(\"todoIdeaBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Idea\");    \r\n      }\r\n      else if (e.target.value === \"Problem\") {\r\n        setTaskTypeColor(\"todoProblemBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Problem\");    \r\n      }\r\n      else if (e.target.value === \"Recipe\") {\r\n        setTaskTypeColor(\"todoRecipeBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Recipe\");   \r\n      }\r\n      else if (e.target.value === \"Schedule\") {\r\n        setTaskTypeColor(\"todoScheduleBackground\");\r\n        updateFirestoreData('todos', props.todo.id, 'type', \"Schedule\");\r\n      }\r\n    },[props]);\r\n\r\n    const handleSetDeadline = useCallback((e: any) => {\r\n      setDeadline(e.target.value);\r\n    },[deadline]);\r\n\r\n    const handleDeadline = useCallback((e: any) => {\r\n      console.log(deadline);\r\n      updateFirestoreData('todos', props.todo.id, 'deadline', deadline);  \r\n      setAnimBtn3(clickedBtnAnimShrink);\r\n      setTimeout(() => {\r\n        setAnimBtn3(\"\");\r\n      }, 1000);\r\n       \r\n    },[deadline]);\r\n\r\n    \r\n    return (<>  \r\n      <PropsyFlexBox \r\n        opacity={opacity1}\r\n        width={'80vw'}\r\n        transition={'1s'}\r\n        marginBottom={\"100px\"}\r\n        backgroundColor={taskTypeColor}\r\n        content={<>\r\n  <Image src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} sx={userImg} />\r\n  <Paragraph sx={userName}>{userNameParsedFunc()}</Paragraph>\r\n        <Textarea sx={inputTodoEdit}\r\n             defaultValue={todoTxt}\r\n             placeholder={todoTxt}\r\n             onChange={e => {\r\n              setTodoTxt(e.target.value);\r\n             }}\r\n        />\r\n          <Flex sx={itemsBtnsContainer}>      \r\n              <PropsyBtn \r\n               tooltipId={'status'}\r\n               tooltipTxt={'switch completion status'}\r\n                background={btnCompletedColor}\r\n                onClick={onComplete}\r\n                content={iconCompleteTaskBtn}\r\n              />       \r\n              <PropsyBtn \r\n                 tooltipId={'update'}\r\n                 tooltipTxt={'confirm content update'}\r\n                 background={btnGradient}\r\n                 onClick={onUpdate}\r\n                 content={iconEditTaskBtn}\r\n                 animation={animBtn1} \r\n                 animTime={'1s'}               \r\n              />\r\n              <PropsyBtn \r\n                 tooltipId={'delete'}\r\n                 tooltipTxt={'delete this task'}\r\n                 background={btnGradient}\r\n                 onClick={onDelete}\r\n                 content={iconDeleteTaskBtn}\r\n                 animation={animBtn2}\r\n                 animTime={'2s'}\r\n              />    \r\n              <Flex sx={{flexDirection: 'row', flexWrap: 'wrap'}}>\r\n              <Select data-tip data-for=\"task-type\" sx={optionBox} defaultValue={props.todo.type}\r\n                                      onChange={handleTaskTypeChange} >\r\n                  <option value=\"Task\" >Task</option>\r\n                  <option value=\"Idea\" >Idea</option>\r\n                  <option value=\"Problem\" >Problem</option> \r\n                  <option value=\"Schedule\" >Schedule</option> \r\n                  <option value=\"Recipe\" >Recipe</option>           \r\n                </Select>  \r\n                <ReactTooltip id=\"task-type\" place=\"bottom\" effect=\"solid\">\r\n                  change type of task\r\n                </ReactTooltip> \r\n                <ReactTooltip id=\"deadline\" place=\"bottom\" effect=\"solid\">\r\n                  set date marker/date due\r\n                </ReactTooltip> \r\n                <Flex sx={{flexDirection: 'row',                           \r\n                           backgroundColor: 'dateSetBackground1',\r\n                           borderRadius: boxBorderRadius,\r\n                           paddingLeft: 3,\r\n                           marginLeft: 1,\r\n                           position: 'relative',\r\n                                    }}>\r\n                      <PropsyInput type={'date'}\r\n                                   width={'130px'} \r\n                                   onChange={handleSetDeadline}\r\n                                   value={props.todo.deadline}\r\n                                            />                             \r\n                      <PropsyBtn onClick={handleDeadline}\r\n                                 tooltipId={'set-date'}\r\n                                 tooltipTxt={'confirm date marker/due date setting'}\r\n                                 background={btnGradient}\r\n                                 animation={animBtn3}\r\n                                 animTime={'2s'}\r\n                                 content={iconDateBtn}\r\n                                 size={0.8}\r\n                                 margin={0}\r\n                                \r\n                                          />\r\n                    <Box sx={{position: 'absolute',\r\n                              height: '30px',\r\n                              width: '22px',\r\n                              backgroundColor: 'patch',\r\n                              top: 16, right: 76}}></Box>\r\n                </Flex>            \r\n              </Flex>              \r\n          </Flex>  \r\n        </>}\r\n      />   \r\n    </>)\r\n  }\r\n\r\n  export default TodoItem;","import { iconSignOutBtn } from \"../../content/icons\";\r\nimport getFirebase from \"../../firebase/firebase\";\r\nimport { btnGradient } from \"../../styles/elements\";\r\nimport PropsyBtn from \"../propsyComps/PropsyBtn\";\r\n\r\nconst SignOutButton = () => {\r\n  const firebaseInstance = getFirebase();\r\n\r\n  const signOut = async () => {\r\n    try {\r\n      if (firebaseInstance) {\r\n        await firebaseInstance.auth().signOut();   \r\n      }\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>    \r\n      <PropsyBtn onClick={() => signOut()}\r\n                 tooltipId={'logout'}\r\n                 tooltipTxt={'log out and exit'}\r\n                 content={iconSignOutBtn}\r\n                 background={btnGradient}\r\n                 />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignOutButton;\r\n\r\n\r\n","/** @jsxImportSource theme-ui */\r\nimport { \r\n  Flex,  \r\n  Box, \r\n  Textarea,\r\n  Input,\r\n  Select,\r\n  Paragraph\r\n  } from 'theme-ui';  \r\n\r\nimport ScrollTop from \"react-scrolltop-button\";  \r\nimport { BsArrowBarUp } from 'react-icons/bs'; \r\nimport Typist from 'react-typist';\r\n\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';  \r\n\r\nimport TodoItem from './TodoItem';\r\n\r\nimport { useRef, useState } from 'react';\r\n\r\nimport { auth, firestore } from '../firebase/firebase'; \r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport { addTaskContainer,\r\n         addTodoForm,          \r\n          btnContainer,\r\n          btnGradient,         \r\n          btnScrollUp,\r\n          displayBar,\r\n          inputTodoAdd,\r\n          inputTodoSearch,         \r\n          optionBox,\r\n          todoFiltersContainer,\r\n          todosContainer,\r\n          todoStatusContainer, \r\n          userWelcomeTxt,    \r\n          } from '../styles/elements';\r\nimport { txtSearchInputEng, txtTodoInputEng } from '../content/content';\r\nimport { iconAddTaskBtn } from '../content/icons';\r\nimport SignOutButton from './UserAuth/SignOutButton';\r\nimport PropsyBtn from './propsyComps/PropsyBtn';\r\nrequire('firebase/auth');  \r\n\r\n\r\nfunction TodoList() {\r\n    const dummy = useRef<null | HTMLDivElement>(null); \r\n    const todosRef = firestore.collection('todos');\r\n    const query = todosRef.orderBy('createdAt').limit(100);\r\n  \r\n    const [todos] = useCollectionData(query, { idField: 'id' });\r\n  \r\n    const [formValue, setFormValue] = useState('');\r\n\r\n    const [searchByTxt, setSearchByTxt] = useState('');  \r\n\r\n    const [filterCompleted, setFilterCompleted] = useState(\"Show\"); \r\n\r\n    const userEmail = localStorage.getItem('userEmail');    \r\n    \r\n\r\nconst getPrecentCompleted: any = (data: any, precision: number) => {\r\n  let alltodos: any = data?.length;\r\n  let completed: any = data?.filter((item: any) => item.isCompleted).length;\r\n  let percentage = alltodos === 0 ? 0 : (completed / alltodos) * 100\r\n      return  parseFloat(percentage.toFixed(precision));  \r\n};\r\n\r\nconst filteredStatus = (status: string): any => {\r\n  setFilterCompleted(status);\r\n};\r\n\r\nconst renderFiltered = (data: any, filterCompleted: string, searchBy: string): JSX.Element => {\r\n  const TodoJsx = (keyId: any, todo: any): JSX.Element => {\r\n    return <TodoItem key={keyId} todo={todo} />;\r\n   };\r\n  const searchIt = (task: any, searchItTxt: string) => {\r\n    return task.includes(searchItTxt);\r\n  };\r\n\r\n    switch (filterCompleted) {\r\n    case \"Show all\":\r\n      return data && data.filter((task: any) => \r\n      searchIt(task.text, searchBy))\r\n      .map((task: any): JSX.Element => TodoJsx(task.id, task));\r\n    case \"In progress only\":\r\n      return data && data.filter((task: any): JSX.Element => \r\n      searchIt(task.text, searchBy) && task.isCompleted === false)\r\n      .map((task: any): JSX.Element => TodoJsx(task.id, task));       \r\n    case \"Completed only\":\r\n      return data && data.filter((task: any) => \r\n      searchIt(task.text, searchBy) && task.isCompleted === true)\r\n      .map((task: any): JSX.Element => TodoJsx(task.id, task)); \r\n    default:\r\n      return data && data.filter((task: any) => \r\n      searchIt(task.text, searchBy))\r\n      .map((task: any): JSX.Element => TodoJsx(task.id, task));\r\n  };\r\n}\r\n\r\n    const sendTodo = async (e: any) => {\r\n      e.preventDefault();\r\n  \r\n      const { uid, photoURL } = auth.currentUser!;\r\n  \r\n      await todosRef.add({\r\n        userName: userEmail,        \r\n        type: \"Task\",\r\n        assignedTo: \"Not assigned yet\",\r\n        assignedBy: \"Not set yet\",\r\n        text: formValue,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        isCompleted: false,\r\n        updatedAt: \"Not updated yet\",\r\n        completedAt: \"Not completed yet\",\r\n        deadline: \"No deadline set\",\r\n        uid,\r\n        photoURL\r\n      })\r\n  \r\n      setFormValue('');\r\n      if (dummy) dummy!.current!.scrollIntoView({ behavior: 'smooth' }); \r\n    }\r\n  \r\n    return (<Box sx={{width: '100vw'}}>   \r\n     <Box sx={{position: 'absolute', top: 0, opacity: 0.6, zIndex: 0}}>\r\n     {/* <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#0099ff\" fill-opacity=\"1\"\r\n      d=\"M0,256L60,218.7C120,181,240,107,360,69.3C480,32,600,32,720,37.3C840,43,960,53,1080,85.3C1200,117,\r\n      1320,171,1380,197.3L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,\r\n      360,0C240,0,120,0,60,0L0,0Z\"></path></svg> */}\r\n              </Box>          \r\n          <Box sx={btnContainer} >\r\n            <Typist>\r\n             <Paragraph sx={userWelcomeTxt}>{`Currently logged user: ${userEmail}`}</Paragraph>\r\n            </Typist>            \r\n            <SignOutButton />  \r\n          </Box>        \r\n          <Flex id={'main'} sx={todosContainer}>\r\n            <Flex sx={todoFiltersContainer} >\r\n              <Input sx={inputTodoSearch}\r\n                    type={'text'}\r\n                    placeholder={txtSearchInputEng}\r\n                    onChange={(e) => setSearchByTxt(e.target.value)} />\r\n              <Flex sx={{\r\n                flexDirection: 'row',\r\n                alignSelf: 'baseline',\r\n                marginTop: 2\r\n              }} >\r\n                <Select sx={optionBox} defaultValue=\"Show all\" onChange={(e) => filteredStatus(e.target.value)}>\r\n                  <option value=\"Show all\" >{`Show all`}</option>\r\n                  <option value=\"In progress only\" >In progress only</option>\r\n                  <option value=\"Completed only\" >Completed only</option>           \r\n                </Select>           \r\n              </Flex>\r\n         \r\n            </Flex>\r\n            <Flex sx={todoStatusContainer} >\r\n             <Box sx={displayBar}>\r\n               \r\n               {`All tasks: ${todos?.length}`}\r\n\r\n             </Box>\r\n             <Box sx={displayBar}>\r\n             \r\n               {`In progress: ${todos?.filter((item) => !item.isCompleted).length}`}\r\n\r\n             </Box>\r\n             <Box sx={displayBar}>\r\n               \r\n               {`Completed: ${todos?.filter((item) => item.isCompleted).length}`}                      \r\n             \r\n             </Box>\r\n             <Box sx={displayBar}>\r\n               \r\n               {`You have finished ${getPrecentCompleted(todos)}% of the job`}            \r\n             \r\n             </Box>\r\n            </Flex>             \r\n\r\n             {renderFiltered(todos, filterCompleted, searchByTxt)}\r\n\r\n            <span ref={dummy}></span>\r\n      \r\n          </Flex>  \r\n          <form className='form' onSubmit={sendTodo} >\r\n              <Flex  sx={addTodoForm}>\r\n                <Box sx={addTaskContainer}>\r\n                <Textarea sx={inputTodoAdd}                     \r\n                      onChange={(e: any) => setFormValue(e.target.value)} \r\n                      placeholder={txtTodoInputEng}               \r\n                >{formValue}\r\n                </Textarea>               \r\n                  <PropsyBtn type={\"submit\"}\r\n                             tooltipId={'add'}\r\n                             tooltipTxt={'add task'} \r\n                             isDisabled={!formValue}\r\n                             background={btnGradient}\r\n                             content={iconAddTaskBtn} />               \r\n                </Box>             \r\n              <Flex>            \r\n          </Flex>         \r\n            </Flex>\r\n          </form>  \r\n          <ScrollTop\r\n        text={<BsArrowBarUp />}\r\n        distance={0}\r\n        breakpoint={0}\r\n        style={btnScrollUp}\r\n        className=\"scroll-your-role\"\r\n        speed={1000}\r\n        target={75}\r\n        icon={<BsArrowBarUp />}\r\n      />          \r\n        </Box>)\r\n  }  \r\n      \r\nexport default TodoList;     \r\n\r\n","export const txtSignInGoogleEng: string = \"Sign in with Google\";\r\n\r\nexport const txtSignOutEng: string = \"Sign out\";\r\n\r\nexport const txtSearchInputEng: string = \"Search for task..\";\r\n\r\nexport const txtTitleSmallEng: string = \"Welcome to ever evolving Eazzy Todo List. Set Yourself a goal and make it done. Multipurpose usage. Have a happy todoing!\";\r\n\r\nexport const txtTitleBigEng: string = \"This app is currently in test mode. Mock email recommended.\\\r\n Feel free to sign in, assign Yourself some task, modify it at will, and of course try to make it completed.\\\r\n  Maximum number of tasks is currently set to 50...have fun! \"\r\n\r\nexport const txtAddTaskBtnEng: string = \"Add Task\";\r\n\r\nexport const txtCompleteTaskBtnEng: string = \"Complete\";\r\n\r\nexport const txtEditTaskBtnEng: string = \"Update\";\r\n\r\nexport const txtDeleteTaskBtnEng: string = \"Delete\";\r\n\r\nexport const txtTodoInputEng: string = \"What needs to be done?\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n ","export default {\r\n    fonts: {\r\n      body: 'system-ui, sans-serif',\r\n      heading: '\"Avenir Next\", sans-serif',\r\n      monospace: 'Menlo, monospace',\r\n    },\r\n    fontSizes: [\r\n      12, 14, 16, 18, 24, 32, 48, 64, 72,\r\n    ],\r\n    colors: {\r\n      text: '#000',\r\n      text2: '#fff',\r\n      text3: 'red',\r\n      text4: 'blue',\r\n      borderColor: '#fff',\r\n      appMainbackground: 'rgb(102, 0, 102)',\r\n      todoTaskBackground: 'rgba(51, 51, 255, 0.8)',\r\n      todoIdeaBackground: 'rgba(0, 153, 51, 0.8)',\r\n      todoProblemBackground: 'rgba(204, 51, 0, 0.8)',\r\n      todoRecipeBackground: 'rgba(102, 102, 51, 0.8)',\r\n      todoScheduleBackground: 'rgba(153, 0, 204, 0.8)',\r\n      inputBackground: '#000',\r\n      userBackground: 'rgba(255, 255, 0, 0.8)',\r\n      dateSetBackground1: 'rgb(0, 102, 102)',\r\n      buttonsBackground: 'rgb(0, 51, 51)',\r\n      patch: '#000',\r\n      primary: '#33e',\r\n      sent: 'teal',\r\n      received: '#000',\r\n      messageText: '#fff',\r\n      underwater: '#1277b0',\r\n      border: \"#000\"\r\n    },\r\n    images: {\r\n        avatar: {\r\n          width: 48,\r\n          height: 48,\r\n          borderRadius: 99999,\r\n        },\r\n        background: {\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundRepeat: 'repeat'\r\n          },\r\n      }\r\n  }","import { atom, selector } from 'recoil';\r\n\r\n  export const recoilUser = atom({\r\n    key: 'recoilUser', // unique ID (with respect to other atoms/selectors)\r\n    default: '', // default value (aka initial value)\r\n  });\r\n\r\n  export const displayAlertBoxState = atom({\r\n    key: 'displayAlertBoxState', // unique ID (with respect to other atoms/selectors)\r\n    default: 'none', // default value (aka initial value)\r\n  });\r\n\r\n  export const displayLoginBoxState = atom({\r\n    key: 'displayLoginBoxState', // unique ID (with respect to other atoms/selectors)\r\n    default: 'flex', // default value (aka initial value)\r\n  });\r\n\r\n  export const displaySignupBoxState = atom({\r\n    key: 'displaySignupBoxState', // unique ID (with respect to other atoms/selectors)\r\n    default: 'none', // default value (aka initial value)\r\n  });\r\n\r\n  export const loggedUser = selector({\r\n    key: 'charCountState', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const text = get(recoilUser);\r\n  \r\n      return text;\r\n    },\r\n  });\r\n\r\n  export const loggedUserText = selector({\r\n    key: 'charCountState', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const text = get(recoilUser);\r\n  \r\n      return `Currently logged user: ${text}`;\r\n    },\r\n  });\r\n\r\n  export const displayAlertBoxValue = selector({\r\n    key: 'displayAlertBoxValue', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const displayed = get(displayAlertBoxState);\r\n  \r\n      return displayed;\r\n    },\r\n  });\r\n\r\n  export const displayLoginBoxValue = selector({\r\n    key: 'displayLoginBoxValue', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const displayed = get(displayAlertBoxState);\r\n  \r\n      return displayed;\r\n    },\r\n  });\r\n\r\n  export const displaySignupBoxValue = selector({\r\n    key: 'displaySignupBoxValue', // unique ID (with respect to other atoms/selectors)\r\n    get: ({get}) => {\r\n      const displayed = get(displayAlertBoxState);\r\n  \r\n      return displayed;\r\n    },\r\n  });","import React from \"react\";\r\nimport { Box } from \"theme-ui\";\r\nimport { boxBorderRadius, itemBoxShadow } from \"../../styles/elements\";\r\n\r\n\r\nconst PropsyAlertBox = React.memo(({content, display = 'none'}: any ) => {\r\n\r\n    return (\r\n        <Box\r\n        sx={{  \r\n        display: `${display}`,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: boxBorderRadius,\r\n        backgroundColor: `todoTaskBackground`,\r\n        color: 'todoText',     \r\n        wordBreak: 'break-word',        \r\n        padding: 2,        \r\n        // minHeight: 100,\r\n        boxShadow: itemBoxShadow,\r\n        transition: '1s',\r\n        position: 'absolute',\r\n        top:'50%',    \r\n        zIndex: 20    \r\n    }}       \r\n        >{content}</Box>\r\n    )\r\n    \r\n});\r\n\r\nexport default PropsyAlertBox","import React from \"react\";\r\nimport { Flex, Input, Paragraph } from \"theme-ui\";\r\nimport { btnGradient, btnPrimary, inputGeneral, loginSignupTxt } from \"../../styles/elements\";\r\nimport PropsyBtn from \"./PropsyBtn\";\r\nimport PropsyFlexBox from \"./PropsyFlexBox\";\r\n\r\n\r\nconst PropsySignLogForm = React.memo(({textHead,\r\n                                       transition,\r\n                                       opacity,\r\n                                       display,\r\n                                       buttonContent,\r\n                                       onSubmit,\r\n                                       onChangeEmail,\r\n                                       onChangePass, \r\n                                       emailInputTxt,\r\n                                       passInputTxt,\r\n                                       margin, \r\n                                       extraContent,\r\n                                       animationBtn,\r\n                                       tooltipId,\r\n                                       tooltipTxt,\r\n                                       width\r\n                                       }: any) => {\r\n    return (\r\n        <PropsyFlexBox \r\n        width={width}\r\n        transition={transition}\r\n        opacity={opacity}\r\n        display={display}\r\n        margin={margin}\r\n        content={<>\r\n            <form onSubmit={onSubmit}>\r\n               <Paragraph sx={loginSignupTxt}>{textHead}</Paragraph>\r\n               <Input  sx={inputGeneral} onChange={onChangeEmail} placeholder=\"Email\" {...emailInputTxt} />\r\n               <Input sx={inputGeneral} onChange={onChangePass} placeholder=\"Password\" type=\"password\" {...passInputTxt} />                          \r\n           \r\n             <Flex>\r\n             <PropsyBtn sx={btnPrimary}\r\n                          tooltipTxt={tooltipTxt}\r\n                          tooltipId={tooltipId}\r\n                          type=\"submit\"\r\n                          background={btnGradient}\r\n                          content={buttonContent}\r\n                          onSubmit={onSubmit}\r\n                          animation={animationBtn}\r\n                          >Sign in</PropsyBtn>\r\n                {extraContent}\r\n             </Flex>\r\n               </form>\r\n         </>} />   \r\n    )\r\n    \r\n});\r\n\r\nexport default PropsySignLogForm;","import { useState } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { Flex } from \"theme-ui\";\r\nimport { iconCloseBtn, iconSignUpBtn } from \"../../content/icons\";\r\n\r\nimport getFirebase from \"../../firebase/firebase\";\r\nimport {  displayLoginBoxState, displaySignupBoxState } from \"../../recoil/recoil\";\r\nimport { btnGradient } from \"../../styles/elements\";\r\nimport PropsyAlertBox from \"../propsyComps/PropsyAlertBox\";\r\nimport PropsyBtn from \"../propsyComps/PropsyBtn\";\r\nimport PropsySignLogForm from \"../propsyComps/PropsySignLogForm\";\r\n\r\nconst SignUpForm = () => {      \r\n\r\n    const [emailValue, setEmailValue] = useState(\"\");\r\n    const [passwordlValue, setPasswordValue] = useState(\"\");\r\n\r\n    const [alertDisplay, setAlertDiaspaly] = useState('none');\r\n    const [alertContent, setAlerContent] = useState(\"\");\r\n\r\n    const setLoginBoxDisplay = useSetRecoilState(displayLoginBoxState);\r\n\r\n    const [SignupBoxDisplay, setSignupBoxDisplay] = useRecoilState(displaySignupBoxState);  \r\n\r\n    const handleChangeEmail = (event: any) => {\r\n        setEmailValue(event.target.value);\r\n      };\r\n\r\n      const handleChangePassword = (event: any) => {\r\n        setPasswordValue(event.target.value);\r\n      };       \r\n      \r\n      const setLoginOn = () => {\r\n        setLoginBoxDisplay('flex');\r\n        setSignupBoxDisplay('none');\r\n      };  \r\n\r\n    const firebaseInstance = getFirebase();\r\n    const email = emailValue;\r\n    const password = passwordlValue;\r\n\r\n    const signUp = async (event: any) => {\r\n      event.preventDefault();   \r\n\r\n    try {\r\n      if (firebaseInstance) {\r\n        const user = await firebaseInstance\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email, password);\r\n          localStorage.setItem('userEmail', email);\r\n          console.log(\"user\", user);        \r\n      }\r\n    } catch (error: any) {\r\n      console.log(\"error\", error);\r\n      setAlertDiaspaly('flex');\r\n      setAlerContent(`${error.message}`);\r\n      setTimeout(() => {\r\n        setAlertDiaspaly('none');\r\n      }, 2000);\r\n     \r\n    }\r\n  };\r\n\r\n\r\n  return (<>\r\n    <PropsySignLogForm \r\n    tooltipId={'register-new'}\r\n    tooltipTxt={'register new user'}\r\n    display={SignupBoxDisplay}\r\n    textHead={'Sign up'}\r\n    buttonContent={iconSignUpBtn}\r\n    emailInputTxt={emailValue}\r\n    passInputTxt={passwordlValue}\r\n    onChangeEmail={handleChangeEmail}\r\n    onChangePass ={handleChangePassword}\r\n    onSubmit={signUp}\r\n    // margin={'0 auto'}\r\n    extraContent={<PropsyBtn type='button'\r\n                             tooltipId={'register-close'}\r\n                             tooltipTxt={'close register window'}\r\n                             content={iconCloseBtn}\r\n                             background={btnGradient}\r\n                              onClick={setLoginOn} />}\r\n/>\r\n<PropsyAlertBox display={alertDisplay}\r\n                    content={alertContent}\r\n    />\r\n  </>);\r\n};\r\n\r\nexport default SignUpForm;\r\n\r\n\r\n","import { Box, Flex } from \"@theme-ui/components\";\r\nimport firebase from \"firebase\";\r\nimport { useState } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\n\r\nimport { iconAddUser, iconCloseBtn, iconForgotpassBtn, iconSendMailBtn, iconSignInBtn } from \"../../content/icons\";\r\n\r\nimport getFirebase from \"../../firebase/firebase\";\r\nimport { displayAlertBoxState, displayLoginBoxState, displaySignupBoxState } from \"../../recoil/recoil\";\r\nimport { btnGradient } from \"../../styles/elements\";\r\nimport PropsyAlertBox from \"../propsyComps/PropsyAlertBox\";\r\nimport PropsyBtn from \"../propsyComps/PropsyBtn\";\r\n\r\nimport PropsySignLogForm from \"../propsyComps/PropsySignLogForm\";\r\n\r\nconst SignInForm = () => {\r\n\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordlValue, setPasswordValue] = useState(\"\");\r\n\r\n  const [alertDisplay, setAlertDiaspaly] = useState('none');\r\n  const [alertContent, setAlerContent] = useState(\"\");\r\n\r\n  const [forgotPasswordDisplay, setForgotPasswordDisplay] = useState('none');\r\n  \r\n  const setRecoilAlertBoxDisplay = useSetRecoilState(displayAlertBoxState);\r\n\r\n  const [loginBoxDisplay, setLoginBoxDisplay] = useRecoilState(displayLoginBoxState);\r\n\r\n  const setSignupBoxDisplay = useSetRecoilState(displaySignupBoxState);\r\n\r\n\r\n  const handleEnableDisableSignUp = () => {\r\n      setRecoilAlertBoxDisplay('flex');\r\n    \r\n      setLoginBoxDisplay('none');\r\n      setSignupBoxDisplay('flex');\r\n  \r\n  };\r\n  \r\n  const handleChangeEmail = (event: any) => {\r\n    setEmailValue(event.target.value);\r\n  };\r\n\r\n  const handleChangePassword = (event: any) => {\r\n    setPasswordValue(event.target.value);\r\n  };  \r\n\r\n  const handleForgotPassword = () => {\r\n    setForgotPasswordDisplay('flex');\r\n  };\r\n\r\n  const handleForgotPasswordClose = () => {\r\n    setForgotPasswordDisplay('none');\r\n  };\r\n\r\n  const handleForgotPasswordSend = () => {\r\n    firebase.auth().sendPasswordResetEmail(emailValue);\r\n    setTimeout(() => {\r\n      setForgotPasswordDisplay('none');\r\n    }, 2000);\r\n  };\r\n \r\n  const firebaseInstance = getFirebase();\r\n  const email = emailValue;\r\n  const password = passwordlValue;\r\n\r\n  const signIn = async (event: any) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      if (firebaseInstance) {\r\n        const user = await firebaseInstance\r\n          .auth()\r\n          .signInWithEmailAndPassword(email, password);\r\n          localStorage.setItem('userEmail', email);          \r\n        console.log(\"user\", user);     \r\n      }\r\n    } catch (error: any) {\r\n      console.log(\"error\", error);\r\n      setAlertDiaspaly('flex');\r\n      setAlerContent(`${error.message}`);\r\n      setTimeout(() => {\r\n        setAlertDiaspaly('none');\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const ResetPasswordPopup = ({display, onClick, onClickClose}: any) => {\r\n    return <PropsyAlertBox  display={display} \r\n                            margin={'0 auto'} \r\n                            content={<> \r\n    <PropsyBtn onClick={onClick}\r\n              tooltipId={'reset-password'}\r\n              tooltipTxt={`send reset password request(enter email above): ${emailValue}`}\r\n               content={iconSendMailBtn}\r\n               background={btnGradient} />\r\n      <PropsyBtn content={iconCloseBtn}\r\n       tooltipId={'reset-password-close'}\r\n       tooltipTxt={`close reset password window`}\r\n                 onClick={onClickClose}\r\n                 background={btnGradient} />\r\n      </>} />\r\n  };\r\n\r\n\r\n  return (<>   \r\n    <PropsySignLogForm\r\n        // width={'20vw'} \r\n        tooltipId={'login'}\r\n        tooltipTxt={'login'}\r\n        transition={'2s'}\r\n        display={loginBoxDisplay}\r\n        textHead={'Log in'}\r\n        buttonContent={iconSignInBtn}\r\n        emailInputTxt={emailValue}\r\n        passInputTxt={passwordlValue}\r\n        onChangeEmail={handleChangeEmail}\r\n        onChangePass ={handleChangePassword}\r\n        onSubmit={signIn}\r\n        // margin={'0 auto'}\r\n        extraContent={<>\r\n        <PropsyBtn background={btnGradient}\r\n                   tooltipId={'register'}\r\n                   tooltipTxt={'open register window'}\r\n                   content={iconAddUser}\r\n                   type={'button'} \r\n                   onClick={handleEnableDisableSignUp}\r\n        />\r\n        <PropsyBtn background={btnGradient}\r\n                   size={'0.5'}\r\n                   tooltipId={'forgot-password'}\r\n                   tooltipTxt={'forgot password'}\r\n                   content={iconForgotpassBtn}\r\n                   tooltipText={\"forgotPassword\"}\r\n                   type={'button'} \r\n                   onClick={handleForgotPassword} />\r\n        </>}\r\n    />   \r\n    <PropsyAlertBox display={alertDisplay}\r\n                    content={alertContent}\r\n    />   \r\n    <ResetPasswordPopup display={forgotPasswordDisplay} \r\n    onClick={handleForgotPasswordSend}\r\n    onClickClose={handleForgotPasswordClose}\r\n     />\r\n  </>);\r\n};\r\n\r\nexport default SignInForm;\r\n\r\n\r\n","/** @jsxImportSource theme-ui */\r\nimport './App.css';\r\nimport {  RecoilRoot } from 'recoil';\r\nimport TodoList from './components/TodoList';\r\nimport { Box, Flex, Heading, Paragraph, ThemeProvider } from 'theme-ui';\r\nimport theme from './styles/theme';\r\nimport ScrollText from 'react-scroll-text';\r\nimport Typist from 'react-typist';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport getFirebase from './firebase/firebase';\r\nimport { appContainer, bigTitleTxt, copyrightTxt, headerContainer, signInFormContainer, signLogContainer, smallTitleTxt, titleContainer, waveEffectContainer } from './styles/elements';\r\nimport { useEffect, useState } from 'react';\r\nimport SignUpForm from './components/UserAuth/SignUpForm';\r\nimport SignInForm from './components/UserAuth/SignInForm';\r\nimport { txtTitleBigEng, txtTitleSmallEng } from './content/content';\r\nimport { Header } from 'semantic-ui-react';\r\nrequire('firebase/auth');\r\n\r\nfunction App() {\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const firebase = getFirebase();\r\n\r\n    if (firebase) {\r\n      firebase.auth().onAuthStateChanged((authUser: any) => {\r\n        if (authUser) {\r\n          setCurrentUser(authUser.email);\r\n        } else {\r\n          setCurrentUser(null);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (  \r\n      <ThemeProvider theme={theme}>    \r\n      <RecoilRoot>\r\n      <Box sx={appContainer} >\r\n      <Flex sx={titleContainer}><Paragraph>The</Paragraph><Paragraph sx={{\r\n              color: 'text3'\r\n            }}>Eazzy</Paragraph><Paragraph sx={{\r\n              color: 'text4'\r\n            }}>Todo</Paragraph>\r\n            <Paragraph  sx={copyrightTxt}>© 2021 HFM</Paragraph>            \r\n            </Flex>\r\n\r\n        <Header sx={headerContainer} >          \r\n\r\n        <Box sx={{margin: 'auto'}}>     \r\n\r\n            {currentUser ? <TodoList /> : <>\r\n                <Flex sx={signInFormContainer}>\r\n                \r\n                  <Flex sx={signLogContainer}>\r\n                    <SignUpForm />\r\n                    <SignInForm /> \r\n                  </Flex>                                   \r\n              </Flex>\r\n              <Box sx={waveEffectContainer}>\r\n                 \r\n              </Box> \r\n              {/* <Box sx={{position: 'absolute', bottom: 0, opacity: 0.6}}>\r\n             <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#0099ff\" fill-opacity=\"1\" \r\n             d=\"M0,192L60,186.7C120,181,240,171,360,186.7C480,203,600,245,720,266.7C840,288,\r\n             960,288,1080,240C1200,192,1320,96,1380,48L1440,0L1440,320L1380,320C1320,320,1200,320,1080,320C960,\r\n             320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z\"></path></svg>\r\n              </Box>            */}\r\n              <Typist>\r\n                <Paragraph sx={smallTitleTxt}>{txtTitleSmallEng}</Paragraph>                  \r\n              </Typist>\r\n              <ScrollText><Heading sx={bigTitleTxt}>{txtTitleBigEng}</Heading></ScrollText>  \r\n         </>}\r\n\r\n         </Box>\r\n\r\n        </Header>\r\n      </Box>\r\n      </RecoilRoot>\r\n      </ThemeProvider>  \r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}